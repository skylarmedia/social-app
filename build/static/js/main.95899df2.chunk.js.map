{"version":3,"sources":["components/assets/skylar_Icon_wingPortion.svg","components/assets/not-read.svg","components/assets/check.svg","components/assets/repeat-grid.svg","components/assets/arrow.svg","components/Calendar/index.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/Session/context.js","components/Session/withAuthentication.js","components/Session/withAuthorization.js","components/MainButton/index.js","components/Home/index.js","components/Settings/index.js","components/EditCategoryForm/index.js","components/AddPost/index.js","components/EditPost/index.js","components/SignOut/index.js","components/Navigation/index.js","constants/routes.js","components/SignUp/index.js","components/SignIn/index.js","components/Clients/index.js","components/HiddenCalendarSingle/index.js","components/CalendarSingle/index.js","components/SelectCategory/index.js","components/CategoryList/index.js","components/Dates/index.js","components/ClientCalendarSingle/index.js","components/ServerFile/index.js","components/ClientCalendar/index.js","components/MediaWrapper/index.js","components/ChatBox/index.js","components/ChatLog/index.js","components/ClientViewPost/index.js","components/AdminViewPostContent/index.js","components/AdminViewPost/index.js","components/NavigationWrapper/index.js","components/Header/index.js","components/App/index.js","serviceWorker.js","reducers/clients.js","reducers/editPost.js","reducers/userInfo.js","reducers/index.js","store/index.js","index.js"],"names":["module","exports","__webpack_require__","p","FirebaseContext","React","createContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Firebase","_this","this","classCallCheck","storage","getCurrentUser","alert","auth","currentUser","uid","listenChatChanges","id","db","collection","doc","approvePost","userId","postId","approve","update","approved","getSinglePost","month","day","title","where","get","getPostImages","refFromURL","addLogoUrl","user","logoUrl","add","err","console","log","getMessages","sendCategories","categories","forEach","category","app","firestore","adminSendMessage","message","logo","time","Date","getTime","getAdminPost","getAll","getUserCategories","postMessage","getUniqueClientPosts","currentMonth","deletePost","delete","getPostId","archiveClient","archived","client","clientId","ref","concat","getSocialPosts","getClients","addClient","getDates","deleteDate","addDate","year","getUID","urlName","addUser","email","password","name","createUserWithEmailAndPassword","then","updateProfile","photoURL","displayName","toLowerCase","replace","set","admin","updateCategories","map","editPostFirebase","editPostSubmit","editedTitle","postCopy","postHashtags","editedTime","links","selectedCategory","copy","hashtags","editReadAdmin","readValue","adminRead","editReadClient","clientRead","addPost","metaImageFiles","friendlyUrl","deleteClient","status","doCreateUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","res","doSignOut","signOut","finally","window","location","process","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","updatePassword","writeUserData","image","database","initializeApp","functions","AuthUserContext","withAuthentication","WithAuthentication","_React$Component","possibleConstructorReturn","getPrototypeOf","call","state","authUser","inherits","createClass","key","value","_this2","listener","onAuthStateChanged","localStorage","setItem","JSON","stringify","setState","Session_context","Provider","withAuthorization","condition","WithAuthorization","_getPrototypeOf2","_len","arguments","length","args","Array","_key","apply","notAdmin","e","history","push","_this3","compose","withRouter","MainButton","_ref","subtitle","buttonText","confirmArchive","className","onClick","Home","updateInput","defineProperty","target","deleteUser","index","users","filter","_","i","preventDefault","data","isHidden","snapshot","getAllClients","docs","retrieveUsers","handleLogoUpload","event","file","from","files","addFile","backgroundUrl","loadSpinner","firestorageRef","child","username","put","encodedUrl","encodeURIComponent","metadata","fullPath","uploadComplete","getItem","showButton","onChange","onSubmit","passwordOne","userObj","toConsumableArray","isLoading","error","adminEmail","baseState","toggleAddNew","bind","assertThisInitialized","opened","setArr","item","backgroundUrlStyle","backgroundImage","backgroundSize","isInvalid","src_components_MainButton","TransitionGroup","component","src","require","data-id","Fab","disabled","aria-label","Delete_default","react_router_dom","to","CircularProgress","CSSTransition","classNames","timeout","style","color","TextField","margin","variant","type","label","borderColor","placeholder","InputProps","Settings","EditCategoryForm","handleText","string","undefined","split","items","editCatArr","currentCat","options","selected","Fragment","getSelectedCategory","AddPost","fileChangeHandler","filesToStore","filesArr","handleColorText","pushColorText","showCategory","showCategoryState","handleTitle","handleCopy","handleHashtags","onChangeTime","onSubmitForm","match","params","calendarMonth","parseInt","values","emptyFileArr","innerFile","uploadFiles","imageRefs","encodedURL","calendarDay","imageUrl","showState","monthNumToName","monthnum","imageURL","progress","pushColor","calendarYear","renderAddLinks","addHash","removeHash","url_string","href","url","URL","c","searchParams","document","getElementById","prevState","inputs","colors","el","handleChange","removeClick","handleHash","splice","join","getStorage","_React$createElement","buttonStyles","backgroundColor","width","height","media","required","entry_default","multiline","createHashtags","Add_default","createUI","addClick","multiple","components_EditCategoryForm","EditPost","getType","query_string","search","URLSearchParams","handlePostTitle","postTitle","handlePostCopy","postTime","confirm","deleteHash","addNewHashtag","currentHashtag","currentHashtagHandle","post","_this4","controls","hashtag","rows","defaultValue","connect","dispatch","getPost","NavigationAuth","SignOut","NavigationNonAuth","Navigation","Navigation_NavigationAuth","Navigation_NavigationNonAuth","INITIAL_STATE","passwordTwo","SignUpFormBase","_this$state","objectSpread","catch","_this$state2","loading","currentClientMonth","getMonth","currentClientYear","getFullYear","SignInFormBase","pathname","Button","SignInForm","onSetUserId","SignInPage","Clients","timer","delay","prevent","HiddenCalendarSingle","toggleIsHidden","me","setTimeout","doClickAction","truncate","input","substring","handleColor","isHiddenCalendar","prevProps","itemId","clearTimeout","doDoubleClickAction","buttonStyle","background","onDoubleClick","handleDoubleClick","class","CalendarSingle","toggleShowCalendarModule","showCalendarModule","posts","src_components_HiddenCalendarSingle","SelectCategory","submitCategories","categoryObj","sendCategory","setCategories","handleChangeComplete","hex","selectCategory","removeCategory","getAttribute","passCategories","getCategories","categoryName","categoryList","categoryStyle","data-index","react_color_lib","onChangeComplete","CategoryList","parts","substr","$_GET","temp","decodeURIComponent","Calendar","weekdayshort","moment","weekdaysShort","daysInMonth","dateObject","format","currentDay","firstDayOfMonth","startOf","showMonth","showMonthTable","showCalendarTable","setMonth","monthNo","allmonths","indexOf","MonthList","months","cells","row","monthlist","d","colSpan","showYearEditor","showYearNav","onPrev","curr","subtract","onNext","setYear","onYearChange","YearTable","nextten","yearlist","onDayClick","selectedDay","getClientId","removedCategories","showCategories","showCat","arr","arr2","currentYear","newColors","handleDoubleClickItem","catArr","currentCategories","parse","startDate","stopDate","dateArray","currentDate","weekdayshortname","blanks","src_components_CalendarSingle","totalSlots","daysinmonth","src_components_SelectCategory","src_components_CategoryList","Dates","submitForm","tempDateObj","date","reload","showAddDate","handleMonth","handleYear","redirectDate","chosenMonth","chosenYear","showCalendar","passDates","obj","dateArr","num","renderDates","convert","selectStyles","paddingLeft","toggleAddDate","InputLabel","htmlFor","Select","MenuItem","showCalender","components_Calendar","impData","ClientCalendarSingle","getMonthFromString","mon","currentPosts","linkMonth","filtered","filteredList","clientTitleStyles","display","position","marginLeft","ClientCalendar","showYearTable","showDateTable","getState","m","components_ClientCalendarSingle","MediaWrapper","check","ChatBox","setMessage","submitMessage","getMessage","addEmoji","unified","emojiPic","String","fromCodePoint","sym","codesArray","clientLogo","dist_es","onSelect","onSetMessage","AdminChatLog","messages","onSetMessages","onSetMessagesLimit","limit","ClientViewPost","handleCheckbox","checked","approveFormSubmit","showPopUp","incomingMessageObj","emptyMessage","emptyMessageObj","sort","b","approveStyles","popUpStyles","zIndex","components_MediaWrapper","hash","link","components_ChatBox","components_ChatLog","incomingMessage","AdminViewPostContent","renderHashtags","readOnly","AdminViewPost","inputComponent","dist_default","fieldType","textAreaComponent","onError","components_AdminViewPostContent","NavigationWrapper","isVisible","BurgerMenu","noOverlay","src_components_Navigation","Header","NoMatch","basename","src_components_Header","src_components_NavigationWrapper","react_router","exact","path","HomePage","render","components_ClientViewPost","Boolean","hostname","action","clients","setClientsReducer","editPost","setEditPostReducer","userInfoReducer","rootReducer","combineReducers","editPostReducer","store","createStore","ReactDOM","es","context","src_components_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.95899df2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/skylar_Icon_wingPortion.b1ca3ff5.svg\";","module.exports = __webpack_public_path__ + \"static/media/not-read.2b36b776.svg\";","module.exports = __webpack_public_path__ + \"static/media/check.5d1fa9cf.svg\";","module.exports = __webpack_public_path__ + \"static/media/repeat-grid.1b3a5737.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow.cab4dd14.svg\";","import React from \"react\";\nimport moment from \"moment\";\nimport { Link } from 'react-router-dom';\nimport \"./calendar.css\";\nimport CalendarSingle from '../CalendarSingle';\nimport { withFirebase } from '../Firebase';\nimport { compose } from \"redux\";\nimport SelectCategory from '../SelectCategory'\nimport CategoryList from '../CategoryList';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { withAuthorizationAdmin } from '../Session';\nimport { AuthUserContext } from '../Session';\n\nimport { withAuthorization } from '../Session';\n\n\n\n\nconst parts = window.location.search.substr(1).split(\"&\");\n\nconst $_GET = {};\nfor (var i = 0; i < parts.length; i++) {\n  var temp = parts[i].split(\"=\");\n  $_GET[decodeURIComponent(temp[0])] = decodeURIComponent(temp[1]);\n}\n\nconst year = $_GET['year'];\nconst month = $_GET['month'];\n\nclass Calendar extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n\n    this.state = {\n      showCalendarTable: true,\n      showMonthTable: false,\n      dateObject: moment(`${this.props.match.params.year}-${this.props.match.params.month}`),\n      allmonths: moment.months(),\n      showYearNav: false,\n      selectedDay: null,\n      clientId: '',\n      currentMonth: 0,\n      currentYear: 0,\n      posts: [],\n      showCat: false,\n      categories: [],\n      newColors: [],\n      isLoading: false,\n      removedCategories: []\n    };\n\n    this.onDoubleClick = this.handleDoubleClickItem.bind(this)\n    this.showCategories = this.showCategories.bind(this);\n\n  }\n\n  weekdayshort = moment.weekdaysShort();\n\n  componentWillMount() {\n\n    if (this.props.match.params.clientId) {\n      this.props.firebase.getSocialPosts(this.props.match.params.clientId).then(snapshot => {\n        this.setState({\n          posts: snapshot.docs,\n          isLoading: !this.state.isLoading\n        });\n      })\n\n      this.props.firebase.getUserCategories(this.props.match.params.clientId).then(snapshot => {\n        const catArr = [...this.state.categories]\n\n        snapshot.docs.map((category, index) => {\n          catArr.push(category.data())\n        })\n        this.setState({\n          categories: catArr,\n          currentCategories: catArr\n        })\n      })\n\n\n    }\n\n    this.setState({\n      authUser: JSON.parse(localStorage.getItem('authUser')).email\n    })\n  }\n\n  handleDoubleClickItem(event) {\n    alert('I got double-clicked!');\n  }\n\n  daysInMonth = () => {\n    return this.state.dateObject.daysInMonth();\n  };\n  year = () => {\n    return this.state.dateObject.format(\"Y\");\n  };\n  currentDay = () => {\n    return this.state.dateObject.format(\"D\");\n  };\n  firstDayOfMonth = () => {\n    let dateObject = this.state.dateObject;\n    let firstDay = moment(dateObject)\n      .startOf(\"month\")\n      .format(\"d\"); // Day of week 0...1..5...6\n    return firstDay;\n  };\n  month = () => {\n    return this.state.dateObject.format(\"MMMM\");\n  };\n  showMonth = (e, month) => {\n    this.setState({\n      showMonthTable: !this.state.showMonthTable,\n      showCalendarTable: !this.state.showCalendarTable\n    });\n  };\n  setMonth = month => {\n    let monthNo = this.state.allmonths.indexOf(month);\n    let dateObject = Object.assign({}, this.state.dateObject);\n    dateObject = moment(dateObject).set(\"month\", monthNo);\n    this.setState({\n      dateObject: dateObject,\n      showMonthTable: !this.state.showMonthTable,\n      showCalendarTable: !this.state.showCalendarTable\n    });\n  };\n  MonthList = props => {\n    let months = [];\n    props.data.map(data => {\n      months.push(\n        <td\n          key={data}\n          className=\"calendar-month\"\n          onClick={e => {\n            this.setMonth(data);\n          }}\n        >\n          <span>{data}</span>\n        </td>\n      );\n    });\n    let rows = [];\n    let cells = [];\n\n    months.forEach((row, i) => {\n      if (i % 3 !== 0 || i == 0) {\n        cells.push(row);\n      } else {\n        rows.push(cells);\n        cells = [];\n        cells.push(row);\n      }\n    });\n    rows.push(cells);\n    let monthlist = rows.map((d, i) => {\n      return <tr>{d}</tr>;\n    });\n\n    return (\n      <table className=\"calendar-month\">\n        <thead>\n          <tr>\n            <th colSpan=\"4\">Select a Month</th>\n          </tr>\n        </thead>\n        <tbody>{monthlist}</tbody>\n      </table>\n    );\n  };\n  showYearEditor = () => {\n    this.setState({\n      showYearNav: true,\n      showCalendarTable: !this.state.showCalendarTable\n    });\n  };\n\n\n  onPrev = () => {\n    let curr = \"\";\n    if (this.state.showMonthTable == true) {\n      curr = \"year\";\n    } else {\n      curr = \"month\";\n    }\n    this.setState({\n      dateObject: this.state.dateObject.subtract(1, curr)\n    });\n\n    this.props.history.push(`/calendar/2019/${parseInt(this.props.match.params.month) - 1}/${this.props.match.params.clientId}`);\n  };\n  onNext = () => {\n    let curr = \"\";\n    if (this.state.showMonthTable == true) {\n      curr = \"year\";\n    } else {\n      curr = \"month\";\n    }\n\n    this.props.history.push(`/calendar/2019/${parseInt(this.props.match.params.month) + 1}/${this.props.match.params.clientId}`);\n    this.props.firebase.getSocialPosts(this.props.match.params.clientId, this.props.match.params.month).then(snapshot => {\n      this.setState({\n        posts: snapshot.docs\n      });\n    })\n    this.setState({\n      dateObject: this.state.dateObject.add(1, curr)\n    });\n  };\n  setYear = year => {\n    // alert(year)\n    let dateObject = Object.assign({}, this.state.dateObject);\n    dateObject = moment(dateObject).set(\"year\", year);\n    this.setState({\n      dateObject: dateObject,\n      showMonthTable: !this.state.showMonthTable,\n      showYearNav: !this.state.showYearNav,\n      showMonthTable: !this.state.showMonthTable\n    });\n  };\n  onYearChange = e => {\n    this.setYear(e.target.value);\n  };\n  getDates(startDate, stopDate) {\n    var dateArray = [];\n    var currentDate = moment(startDate);\n    var stopDate = moment(stopDate);\n    while (currentDate <= stopDate) {\n      dateArray.push(moment(currentDate).format(\"YYYY\"));\n      currentDate = moment(currentDate).add(1, \"year\");\n    }\n    return dateArray;\n  }\n  YearTable = props => {\n    let months = [];\n    let nextten = moment()\n      .set(\"year\", props)\n      .add(\"year\", 12)\n      .format(\"Y\");\n\n    let tenyear = this.getDates(props, nextten);\n\n    tenyear.map(data => {\n      months.push(\n        <td\n          key={data}\n          className=\"calendar-month\"\n          onClick={e => {\n            this.setYear(data);\n          }}\n        >\n          <span>{data}</span>\n        </td>\n      );\n    });\n    let rows = [];\n    let cells = [];\n\n    months.forEach((row, i) => {\n      if (i % 3 !== 0 || i == 0) {\n        cells.push(row);\n      } else {\n        rows.push(cells);\n        cells = [];\n        cells.push(row);\n      }\n    });\n    rows.push(cells);\n    let yearlist = rows.map((d, i) => {\n      return <tr>{d}</tr>;\n    });\n\n    return (\n      <table className=\"calendar-month\">\n        <thead>\n          <tr>\n            <th colSpan=\"4\">Select a Yeah</th>\n          </tr>\n        </thead>\n        <tbody>{yearlist}</tbody>\n      </table>\n    );\n  };\n\n\n  onDayClick = (e, d) => {\n    this.setState(\n      {\n        selectedDay: d\n      },\n      () => {\n      }\n    );\n  };\n\n  getClientId = () => {\n    var url_string = window.location.href  //window.location.href\n    var url = new URL(url_string);\n    var c = url.searchParams.get(\"clientId\");\n\n    return c\n  }\n\n  removeCategory = (index, name) => {\n    this.setState({\n      categories: this.state.categories.filter((_, i) => i !== index),\n      removedCategories: [...this.state.removedCategories, name]\n    });\n\n    console.log(this.state.removedCategories, 'removed categories');\n  }\n\n  showCategories = e => {\n    e.preventDefault();\n    this.setState({\n      showCat: !this.state.showCat\n    })\n  }\n\n  sendCategories = (arr, arr2) => {\n    const currentCat = [...this.state.categories];\n\n    arr.map(item => {\n      currentCat.push(item);\n    })\n\n    this.setState({\n      showCat: !this.state.showCat,\n      categories: currentCat\n    })\n    this.props.firebase.sendCategories(this.props.match.params.clientId, arr2);\n\n\n  }\n\n  componentWillUnmount() {\n    // if (this.state.removedCategories.length > 0) {\n    //   console.log(this.state.removedCategories, 'removed');\n    //   this.props.firebase.updateCategories(this.props.match.params.clientId, this.state.removedCa)\n    // }\n\n    console.log(this.state.categories, 'categories in unmount')\n\n  }\n\n  render() {\n\n    console.log(localStorage.authUser.email, 'auth user mounted')\n\n    let weekdayshortname = this.weekdayshort.map(day => {\n      return <th key={day}>{day}</th>;\n    });\n    let blanks = [];\n    for (let i = 0; i < this.firstDayOfMonth(); i++) {\n      blanks.push(<td className=\"calendar-day empty\">{\"\"}</td>);\n    }\n    let daysInMonth = [];\n    for (let d = 1; d <= this.daysInMonth(); d++) {\n      let currentDay = d == this.currentDay() ? \"today\" : \"\";\n      daysInMonth.push(\n        <td key={d} className={`calendar-day TEST ${currentDay}`}>\n          <CalendarSingle day={d} posts={this.state.posts} month={this.props.match.params.month} clientId={this.props.match.params.clientId} history={this.props.history} />\n          <Link to={`/add-post/2019/${this.props.match.params.month}/${d}/${this.props.match.params.clientId}`} className=\"add-post-link\">+</Link>\n        </td>\n      );\n    }\n    var totalSlots = [...blanks, ...daysInMonth];\n    let rows = [];\n    let cells = [];\n\n    totalSlots.forEach((row, i) => {\n      if (i % 7 !== 0) {\n        cells.push(row);\n      } else {\n        rows.push(cells);\n        cells = [];\n        cells.push(row);\n      }\n      if (i === totalSlots.length - 1) {\n        rows.push(cells);\n      }\n    });\n\n    let daysinmonth = rows.map((d, i) => {\n      return <tr className=\"days-in-month\">{d}</tr>;\n    });\n\n    return (\n      <React.Fragment>\n        <img src={require('../assets/skylar_Icon_wingPortion.svg')} id=\"wing-logo\" />\n        <div>\n          {\n            this.state.isLoading ? <div className=\"tail-datetime-calendar\">\n              <div className=\"calendar-heading\">\n                <h2 className=\"text-center\">Client {this.props.match.params.clientId} Calendar </h2>\n                <p className=\"text-center\">{this.month()}     {this.year()}</p>\n              </div>\n              <div className=\"calendar-navi\">\n                <span\n                  onClick={e => {\n                    this.onPrev();\n                  }}\n                  class=\"calendar-button button-prev\"\n                />\n                {!this.state.showMonthTable && !this.state.showYearEditor && (\n                  <span\n                    onClick={e => {\n                      this.showMonth();\n                    }}\n                    class=\"calendar-label\"\n                  >\n                  </span>\n                )}\n                <span\n                  className=\"calendar-label\"\n                  onClick={e => {\n                    this.showYearEditor();\n                  }}\n                >\n\n                </span>\n\n                <span\n                  onClick={e => {\n                    this.onNext();\n                  }}\n                  className=\"calendar-button button-next\"\n                />\n              </div>\n              <div className=\"calendar-date\">\n                {this.state.showYearNav && <this.YearTable props={this.year()} />}\n                {this.state.showMonthTable && (\n                  <this.MonthList data={moment.months()} />\n                )}\n              </div>\n\n              {this.state.showCalendarTable && (\n                <div className=\"calendar-date\">\n                  <table className=\"calendar-day\">\n                    <thead>\n                      <tr id=\"weekdays\">{weekdayshortname}</tr>\n                    </thead>\n                    <tbody>{daysinmonth}</tbody>\n                  </table>\n                </div>\n              )}\n              {\n                this.state.showCat && (\n                  <SelectCategory className=\"selected-categoryComponent\" userId={this.props.match.params.clientId} getCategories={this.sendCategories} removeCategory={() => this.removeCategory} />\n                )\n              }\n              <button onClick={this.showCategories} id=\"add-category-button\">Add Categories</button>\n              <CategoryList colors={this.state.categories} removeCategory={this.removeCategory} />\n            </div>\n              :\n              <div className=\"progress-wrapper\"><CircularProgress /></div>\n          }\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst condition = authUser => JSON.parse(localStorage.getItem('authUser')).email == 'sky5@hotmail.com' && authUser\nexport default compose(\n  withFirebase,\n  withAuthorization(condition)\n)(Calendar)","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>\n    {firebase => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;","import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/storage';\nimport 'firebase/functions';\nimport { runInThisContext } from 'vm';\n// import addAdminRole from '../functions';\n// import * as admin from \"firebase-admin\";\n\nconst config = {\n    apiKey: \"AIzaSyB4seBRXpVJ3dZDfCddTWze8UCYEVZ8qkc\",\n    authDomain: \"skylar-social-17190.firebaseapp.com\",\n    databaseURL: \"https://skylar-social-17190.firebaseio.com\",\n    projectId: \"skylar-social-17190\",\n    storageBucket: \"skylar-social-17190.appspot.com\",\n    messagingSenderId: \"861778122764\",\n    appId: \"1:861778122764:web:682881979cd4294e\"\n};\n\nclass Firebase {\n    constructor() {\n        app.initializeApp(config);\n        this.auth = app.auth();\n        this.db = app.firestore();\n        this.storage = app.storage();\n        this.functions = app.functions();\n    }\n\n    // Admin Functions\n\n    storage = this.storage\n\n    getCurrentUser = () => {\n        alert(this.auth.currentUser.uid);\n    }\n\n    listenChatChanges = (id) => this.db.collection('chats').doc(id).collection('messages');\n\n    // Post Approval\n\n    approvePost = (userId, postId, approve) => this.db.collection('users').doc(userId)\n        .collection('posts').doc(postId).update({\n            approved: approve\n        })\n\n    getSinglePost = (userId, month, day, title) => this.db.collection('users').doc(userId)\n        .collection('posts').where('month', '==', month)\n        .where('day', '==', day).get();\n\n    getPostImages = () => this.storage.refFromURL('gs://skylar-social-17190.appspot.com/test123/logo');\n\n    addLogoUrl = (user, logoUrl) => this.db.collection('users').doc(user).add({\n        logoUrl: logoUrl\n    }, err => {\n        console.log(err, 'err')\n    });\n\n    getMessages = (id, month, day) => this.db.collection('chats').doc(id).collection('messages').where('month', '==', month).where('day', '==', day).get();\n\n    sendCategories = (user, categories) => {\n        categories.forEach(function (category) {\n            app.firestore().collection('users').doc(user).collection('categories').add({\n                categories: category\n            });\n        })\n    }\n\n    adminSendMessage = (id, month, day, title, message, logo) => this.db.collection('chats').doc(id).collection('messages').add({\n        message,\n        month,\n        day,\n        title,\n        logo: logo,\n        time: new Date().getTime()\n    })\n\n    getAdminPost = (user, postId) => this.db.collection('users').doc(user).collection('posts').doc(postId).get();\n\n    getAll = user => this.db.collection('users').doc(user).get();\n\n    getUserCategories = (user) => this.db.collection('users').doc(user).collection('categories').get();\n\n    postMessage = (id, month, day, title, message) => this.db.collection('chats').doc(id).collection('messages').add({\n        month: month,\n        day: day,\n        title: title,\n        message: message,\n        user: 'Admin',\n        logo: 'https://skylarmedia.ca/wp-content/uploads/2018/12/SkylarMG_Icon_RGB-1.svg'\n    });\n\n    getUniqueClientPosts = (id, currentMonth) => this.db.collection('users').doc(id).collection('posts').where('month', '==', currentMonth).get();\n\n    deletePost = (id, postId) => this.db.collection('users').doc(id).collection('posts').doc(postId).delete()\n\n    getPostId = id => this.db.collection('clients').doc(id).collection('posts');\n\n    archiveClient = (userId) => this.db.collection('users').doc(userId).update({\n        archived:true\n    })\n\n    client = clientId => this.db.ref(`clients/${clientId}`);\n\n    getSocialPosts = (id, month) => this.db.collection('users').doc(id).collection('posts').get();\n\n    getClients = () => this.db.collection('users').where('archived', '==',  false).where('admin', '==', 0).get();\n\n    getPostId = (id) => this.db.collection('clients').doc(id).collection('posts').get();\n\n    addClient = () => this.db.collection('clients');\n\n    getDates = (id) => this.db.collection('users').doc(id).collection('dates').get()\n\n    deleteDate = (user, id) => this.db.collection('users').doc(user).collection('dates').doc(id).delete()\n\n    // deleteDate = (user, year, month) => this.db.collection('users').doc(user).collection('dates').where('year', '==', year).where('month', '==', month).delete();\n\n    addDate = (id, month, year) => this.db.collection('users').doc(id).collection('dates').add({\n        month: month,\n        year: year\n    });\n\n    getUID = (urlName) => this.db.collection('users').where('urlName', '==', urlName).get()\n\n    addUser = (email, password, name, logo) => this.auth.createUserWithEmailAndPassword(email, password).then(user => {\n\n        this.auth.currentUser.updateProfile({\n            photoURL: logo,\n            displayName: name\n        })\n\n        return this.db.collection('users').doc(name.toLowerCase().replace(/ /g, '-')).set({\n            name: name,\n            logo: logo,\n            userId: user.user.uid,\n            admin: 0,\n            email: email,\n            urlName: name.toLowerCase().replace(/ /g, '-'),\n            archived:false\n        });\n    });\n\n\n\n    updateCategories = (user, categories) => {\n        categories.map(category => {\n            this.db.collection('users').doc(user).collection('categories').doc('JfldYWxlRlYj9kYzwpv3').delete();\n        })\n    }\n\n\n\n    // Posts Function\n\n    editPostFirebase = (id, postId) => this.db.collection('users').doc(id).collection('posts').doc(postId).get();\n\n    editPostFirebase = (id, postId) => this.db.collection('users').doc(id).collection('posts').doc(postId).get();\n\n    editPostSubmit = (id, postId, editedTitle, postCopy, postHashtags, editedTime, links, selectedCategory) => this.db.collection('users').doc(id).collection('posts').doc(postId).update({\n        title: editedTitle,\n        copy: postCopy,\n        hashtags: postHashtags,\n        time: editedTime,\n        links: links,\n        selectedCategory\n    });\n\n    editReadAdmin = (user, postId, readValue) => this.db.collection('users').doc(user).collection('posts').doc(postId).update({\n        adminRead: readValue\n    })\n\n    editReadClient = (user, postId, readValue) => this.db.collection('users').doc(user).collection('posts').doc(postId).update({\n        clientRead: readValue\n    })\n\n    addPost = (id, title, copy, hashtags, time, day, month, links, metaImageFiles, friendlyUrl, approved, selectedCategory) => this.db.collection('users').doc(id).collection('posts').add({\n        title: title,\n        copy: copy,\n        hashtags: hashtags,\n        time: time,\n        day: day,\n        month: month,\n        links: links,\n        metaImageFiles: metaImageFiles,\n        friendlyUrl: friendlyUrl,\n        approved: approved,\n        selectedCategory: selectedCategory,\n        clientRead: true,\n        adminRead: true\n    });\n\n    // Get UID\n\n\n\n\n\n    // End of posts functions\n\n\n    deleteClient = (id) => this.db.collection('users').doc(id).update({\n        status: 0\n    });\n\n    doCreateUserWithEmailAndPassword = (email, password) =>\n        this.auth.createUserWithEmailAndPassword(email, password);\n\n    doSignInWithEmailAndPassword = (email, password) =>\n        this.auth.signInWithEmailAndPassword(email, password).then(res => {\n            return this.db.collection('users').where('email', '==', res.user.email).get();\n        })\n\n    doSignOut = () => this.auth.signOut().finally(() => {\n        window.location.replace(process.env.PUBLIC_URL);\n    })\n\n    doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n\n    doPasswordUpdate = password =>\n        this.auth.currentUser.updatePassword(password);\n\n    writeUserData = (image, name) => {\n        this.database().ref().set({\n            image: image,\n            name: name\n        })\n    }\n\n\n    user = uid => this.db.collection('users').doc(uid).get();\n\n\n}\n\n\n\nexport default Firebase;","import FirebaseContext, { withFirebase } from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\n\nexport { FirebaseContext, withFirebase };","import React from 'react';\n\nconst AuthUserContext = React.createContext(null);\n\nexport default AuthUserContext;","import React from 'react';\n\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\n\nconst withAuthentication = Component => {\n  class WithAuthentication extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        authUser: null,\n      };\n    }\n\n    componentDidMount() {\n      this.listener = this.props.firebase.auth.onAuthStateChanged(\n        authUser => {\n          if (authUser) {\n            localStorage.setItem('authUser', JSON.stringify(authUser));\n            this.setState({ authUser });\n          } else {\n            this.setState({ authUser: null });\n          }\n        },\n      );\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Provider value={this.state.authUser}>\n          <Component {...this.props} />\n        </AuthUserContext.Provider>\n      );\n    }\n  }\n\n  return withFirebase(WithAuthentication);\n};\n\nexport default withAuthentication;","\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst withAuthorization = condition => Component => {\n    class WithAuthorization extends React.Component {\n        componentDidMount() {\n            this.listener = this.props.firebase.auth.onAuthStateChanged(\n                authUser => {\n                    authUser\n                        ? this.setState({ authUser })\n                        : alert('you aren ot allowed')\n                },\n            );\n            console.log(this.props, 'props in auth')\n        }\n\n        componentWillUnmount() {\n            this.listener();\n        }\n\n        notAdmin = e => {\n            alert(\"Sorry you are not allowed to visit this page\")\n            this.props.history.push(`/`);\n        }\n\n        render() {\n            return (\n                <AuthUserContext.Consumer>\n                    {authUser =>\n                        condition(authUser) ? <Component {...this.props} /> : this.notAdmin()\n                    }\n                </AuthUserContext.Consumer>\n            );\n        }\n    }\n\n    return compose(\n        withRouter,\n        withFirebase,\n    )(WithAuthorization);\n};\n\nexport default withAuthorization;\n","import React from 'react';\nimport './index.css';\n\nconst MainButton = ({title, subtitle, buttonText, confirmArchive}) => {\n    return(\n        <div className=\"black-bg\">\n            <div className=\"inner-btn\">\n                <h6>{title}</h6>\n                <p>{subtitle}</p>\n                <div>\n                    <button value={false} onClick={confirmArchive}>\n                        Cancel\n                    </button>\n                    <button value={true} onClick={confirmArchive}>\n                        {buttonText}\n                    </button>\n                </div>\n            </div>\n            \n        </div>\n    )\n}\n\nexport default MainButton;","import React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\nimport { FirebaseContext } from '../Firebase';\nimport { Link } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport Firebase from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport { throwStatement, thisExpression, tsExpressionWithTypeArguments } from '@babel/types';\nimport { connect } from 'react-redux';\nimport { notStrictEqual } from 'assert';\nimport FileUploader from \"react-firebase-file-uploader\";\nimport MenuItem from '@material-ui/core/MenuItem';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport 'firebase/storage';\nimport TextField from '@material-ui/core/TextField';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport { withAuthorization } from '../Session';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { fade, withStyles, makeStyles, createMuiTheme } from '@material-ui/core/styles';\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport './index.css';\nimport MainButton  from '../MainButton';\n\n\n\nclass Home extends Component {\n\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      isLoading: false,\n      isHidden: false,\n      name: '',\n      image: '',\n      users: [],\n      file: null,\n      username: '',\n      email: '',\n      passwordOne: '',\n      error: null,\n      firestorageRef: this.props.firebase.storage,\n      adminEmail: '',\n      backgroundUrl: '',\n      uploadComplete: false,\n      loadSpinner: false,\n      showButton: false\n    }\n\n    this.baseState = this.state\n    this.toggleAddNew = this.toggleAddNew.bind(this);\n    this.handleLogoUpload = this.handleLogoUpload.bind(this);\n    this.addFile = this.addFile.bind(this);\n    this.confirmArchive = this.confirmArchive.bind(this);\n  }\n\n  getPosts() {\n\n  }\n\n\n  // Component lifecycle methods\n\n  componentWillMount() {\n    this.props.firebase.getClients().then(snapshot => {\n      const opened = snapshot.docs;\n\n      const setArr = [...this.state.users]\n      opened.map(item => {\n        setArr.push(item.data())\n      })\n      this.setState({\n        users: setArr,\n        isLoading: !this.state.isLoading\n      })\n    });\n\n\n  }\n\n  componentWillUnmount() {\n    this.setState({\n      file: null,\n      username: '',\n    })\n  }\n\n  toggleAddNew() {\n    this.setState({\n      isHidden: !this.state.isHidden,\n      file: null,\n      backgroundUrl: '',\n      username: '',\n    })\n  }\n\n  updateInput = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  deleteUser = (id, index) => {\n    this.props.firebase.deleteClient(id);\n\n    this.setState({\n      users: this.state.users.filter((_, i) => i !== index)\n    });\n\n  }\n\n  addClient = (e) => {\n    e.preventDefault();\n\n    this.setState({\n      name: '',\n      image: '',\n      data: this.state.data,\n      isHidden: !this.state.isHidden\n    });\n\n    this.props.firebase.getClients().then(snapshot => {\n      this.props.getAllClients(snapshot.docs)\n    });\n  };\n\n  retrieveUsers = () => {\n    this.props.firebase.getClients().then(snapshot => {\n      this.setState({\n        users: snapshot.docs\n      })\n    });\n  }\n\n  handleLogoUpload = (event) => {\n    const file = Array.from(event.target.files);\n\n    this.setState({\n      file: file[0]\n    });\n  }\n\n  addFile = event => {\n    this.setState({\n      file: event.target.files[0],\n      backgroundUrl: '',\n      loadSpinner: !this.state.loadSpinner\n    }, () => {\n      this.state.firestorageRef.ref().child(`${this.state.username}/logo/`)\n        .put(this.state.file).then(snapshot => {\n          console.log(snapshot, 'snapshot in it')\n          const encodedUrl = `https://firebasestorage.googleapis.com/v0/b/skylar-social-17190.appspot.com/o/${encodeURIComponent(snapshot.metadata.fullPath)}?alt=media`;\n\n          this.setState({\n            backgroundUrl: encodedUrl,\n            uploadComplete: true,\n            loadSpinner: !this.state.loadSpinner\n          })\n        })\n    });\n\n    console.log(this.state.file, 'file upload')\n\n  }\n\n  confirmArchive = (e) => {\n    console.log('target value', e.target.value);\n    console.log('type of', typeof(e.target.value))\n    if(e.target.value == 'true'){\n      console.log('true')\n      this.props.firebase.archiveClient(localStorage.getItem('archiveId'));\n    }else{\n      alert('false')\n    }\n    // this.setState({\n    //   showButton: !this.state.showButton\n    // })\n\n  }\n\n  archiveClient = (user, id) => {\n    this.setState({\n      showButton: true\n    })\n\n    localStorage.setItem('archiveId', id);\n  }\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  onSubmit = event => {\n    event.preventDefault();\n    this.props.firebase.addUser(this.state.email, this.state.passwordOne, this.state.username, this.state.backgroundUrl);\n    const userObj = {}\n    userObj.logo = this.state.backgroundUrl;\n    userObj.name = this.state.username;\n    userObj.urlName = this.state.username.toLowerCase().replace(/ /g, '-')\n    this.setState({\n      isHidden: !this.state.isHidden,\n      users: [...this.state.users, userObj],\n      backgroundUrl: '',\n      username: '',\n      passwordOne: '',\n      email: '',\n      file: null\n    })\n  };\n\n\n  render() {\n\n    const backgroundUrlStyle = {\n      backgroundImage: `url(${this.state.backgroundUrl})`,\n      backgroundSize: \"cover\"\n    }\n\n    const progressStyles = {\n      color: '#ee463a'\n    }\n\n    const textFieldStyles = {\n      borderColor: 'red',\n    }\n\n    const isInvalid =\n      this.state.passwordOne === '' ||\n      this.state.email === '' ||\n      this.state.username === '' ||\n      this.state.uploadComplete === false;\n\n    return (\n\n      <div id=\"home-page\" className=\"container\">\n        {this.state.showButton ?\n          <MainButton title=\"Archive Client?\" subtitle=\"Are you sure you would like to archive this client?\" buttonText=\"Archive\" confirmArchive={this.confirmArchive.bind(this)}/>\n          :\n          \"\"\n        }\n        <TransitionGroup component={null}>\n          <img src={require('../assets/skylar_Icon_wingPortion.svg')} id=\"wing-logo\" />\n          <h2 className=\"text-center welcome\">Welcome Home!</h2>\n          {\n            this.state.isLoading && this.state.users.length > 0 ?\n              <div>\n                <p className=\"text-center\">What client do you want to work on today?</p>\n                <div id=\"client-list\" className=\"row\">\n                  {\n                    this.state.users.map((user, index) => {\n                      return (\n                        <div data-id={user.userId} className=\"client-wrapper flex-column d-flex\" key={index}>\n                          <button className=\"delete-button\" onClick={() => this.deleteUser(user.urlName, index)}>\n                            <Fab disabled aria-label=\"Delete\">\n                              <DeleteIcon />\n                            </Fab>\n                          </button>\n                          <Link to={`/dates/${user.urlName}`}>\n                            <img src={user.logo} className=\"user-background\" />\n                          </Link>\n                          <Link to={`/dates/${user.urlName}`}>\n                            {user.name}\n                          </Link>\n                          <button onClick={() => this.archiveClient(user.urlName, user.userId)}>X</button>\n                        </div>\n                      )\n                    })\n                  }\n                </div>\n                <div id=\"add-new-btn-wrapper\" className=\"text-center\">\n                  <button onClick={this.toggleAddNew.bind(this)} className=\"add-date-btn\">Add New</button>\n                </div>\n              </div>\n              :\n              (this.state.isLoading && this.state.users.length == 0 ?\n                <div>\n                  <div className=\"empty-state\">\n                    <div className=\"row justify-content-between\">\n                      <div className=\"dashed\">\n\n                      </div>\n\n                      <div className=\"dashed\">\n                      </div>\n\n                      <div className=\"dashed\">\n                      </div>\n\n                      <div className=\"dashed\">\n                      </div>\n                    </div>\n                    <p className=\"text-center\">You don’t seem to have any client calendars set up yet.<br />Click below to add one and get started!</p>\n                  </div>\n                  <div id=\"add-new-btn-wrapper\" className=\"text-center mt-88\">\n                    <button onClick={this.toggleAddNew.bind(this)} className=\"add-date-btn\">Add New</button>\n                  </div>\n                </div>\n                : <div className=\"progress-wrapper\"><CircularProgress /></div>)\n          }\n\n\n          {this.state.isHidden ?\n            <CSSTransition classNames=\"dialog\" timeout={300}>\n              <div id=\"add-new-form-wrapper\">\n                <button onClick={this.toggleAddNew.bind(this)} id=\"x-add-new\" className=\"toggle-close\">x</button>\n\n                <form onSubmit={this.onSubmit} id=\"add-new-form\" className=\"d-flex flex-column\">\n                  <div id=\"avatar-upload\" className=\"d-flex align-items-end justify-content-center align-items-center\" style={backgroundUrlStyle}>\n                    {this.state.loadSpinner === true ? <CircularProgress style={progressStyles} /> : ''}\n\n                  </div>\n                  <TextField\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                    type=\"text\"\n                    label=\"Name\"\n                    style={textFieldStyles}\n                  />\n                  <TextField\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"email\"\n                    value={this.state.email}\n                    onChange={this.onChange}\n                    type=\"text\"\n                    placeholder=\"Email Address\"\n                    label=\"Email\"\n                    InputProps={{\n                      style: {\n                        borderColor: \"red\"\n                      }\n                    }}\n                  />\n                  <TextField\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"passwordOne\"\n                    value={this.state.passwordOne}\n                    onChange={this.onChange}\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    label=\"Password\"\n                  />\n                  <input type=\"file\" onChange={this.addFile} id=\"add-file\" />\n                  <div id=\"add-new-btn-wrapper\" className=\"text-center mt-88\">\n                    <button disabled={isInvalid} type=\"submit\" className={`add-date-btn ${this.state.uploadComplete ? 'complete' : 'uncomplete'}`}>Add New</button>\n                  </div>\n\n                  {this.state.error && <p>{this.state.error.message}</p>}\n                </form>\n\n              </div>\n            </CSSTransition>\n            :\n            ''}\n\n        </TransitionGroup>\n      </div>\n    )\n  }\n}\n\n\n\nconst mapDispatchToProps = dispatch => ({\n  getAllClients: clients => dispatch({\n    type: 'GET_ALL_CLIENTS', clients\n  })\n})\n\nconst mapStateToProps = state => (\n  console.log(state, 'state in map state to props'), {\n    data: state.setClientsReducer\n  })\n\nconst authCondition = authUser => authUser;\n\nexport default withAuthorization(compose(\n  withFirebase\n))(Home);","import React, { Component } from 'react';\n\nclass Settings extends Component{\n    constructor(props){\n        super(props);\n    }\n\n    render(){\n        return(\n            <div>Settings</div>\n        )\n    }\n}\n\nexport default Settings;","import React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\nimport { compose } from 'recompose';\n\nclass EditCategoryForm extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            categories: []\n        }\n\n    }\n\n    componentWillMount() {\n        this.props.firebase.getUserCategories(this.props.clientId).then(items => {\n\n            const editCatArr = []\n            items.docs.map(item => {\n                console.log(item.data(), 'item in map')\n                let currentCat = {}\n                currentCat.color = item.data().categories.color;\n                currentCat.name = item.data().categories.name\n                editCatArr.push(currentCat);\n            })\n            this.setState({\n                categories: editCatArr\n            })\n        });\n    }\n\n    handleText = (string) => {\n        if (string !== undefined) {\n            return string.split('|||')[0]\n        }\n    }\n\n\n    render() {\n        const options = this.state.categories.map(item => {\n            // console.log(item, 'item in category ')\n            if (this.handleText(this.props.category) == item.name) {\n                return (\n                    <option value={`${item.name}|||${item.color}`} selected>{item.name}</option>\n                )\n            } else {\n                return (\n                    <option value={`${item.name}|||${item.color}`}>{item.name}</option>\n                )\n            }\n        })\n\n        return (\n            <React.Fragment>\n                <form>\n                    <select name=\"options\" onChange={this.props.getSelectedCategory}>\n                        <option value={`No Category ||| #fff`} selected>No Category</option>\n                        {options}\n                    </select>\n                </form>\n\n            </React.Fragment >\n        )\n    }\n}\n\nexport default compose(\n    withFirebase(EditCategoryForm)\n);","import React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\nimport { compose } from \"redux\";\nimport FileUploader from 'react-firebase-file-uploader';\nimport TimePicker from 'react-time-picker';\nimport { SketchPicker } from 'react-color';\nimport * as ROUTES from '../../constants/routes';\nimport { bigIntLiteral } from '@babel/types';\nimport \"./index.css\";\nimport TextField from '@material-ui/core/TextField';\nimport EditCategoryForm from '../EditCategoryForm';\n\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\n\nclass AddPost extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            title: '',\n            copy: '',\n            values: [],\n            time: '10:00',\n            hashtags: [],\n            filesArr: [],\n            image: '',\n            imageURL: '',\n            progress: 0,\n            showCategoryState: false,\n            pushColor: '',\n            pushColorText: '',\n            clientId: '',\n            calendarDay: 0,\n            calendarMonth: 0,\n            calendarYear: 2019,\n            postId: '',\n            file: [],\n            metaImageFiles: [\"No Files\"],\n            selectedCategory: 'No Category|||#fff'\n        }\n\n        this.handleTitle = this.handleTitle.bind(this);\n        this.renderAddLinks = this.renderAddLinks.bind(this);\n        this.fileChangeHandler = this.fileChangeHandler.bind(this);\n        this.onSubmitForm = this.onSubmitForm.bind(this);\n        this.showCategory = this.showCategory.bind(this);\n        this.handleColorText = this.handleColorText.bind(this);\n        this.onChangeTime = this.onChangeTime.bind(this);\n        this.addFile = this.addFile.bind(this);\n        this.uploadFiles = this.uploadFiles.bind(this);\n        this.addHash = this.addHash.bind(this);\n        this.removeHash = this.removeHash.bind(this)\n\n    }\n\n\n    componentDidMount() {\n        console.log(this.props, 'addpost');\n\n        var url_string = window.location.href  //window.location.href\n        var url = new URL(url_string);\n        var c = url.searchParams.get(\"clientId\");\n        const day = parseInt(url.searchParams.get('day'));\n        const month = parseInt(url.searchParams.get('month'));\n        console.log(c, ' this is the client Id after it has mounted');\n\n        this.setState({\n            clientId: c,\n            calendarDay: day,\n            calendarMonth: month\n        })\n    }\n\n    renderAddLinks() {\n        document.getElementById('link-container');\n\n        this.setState(prevState => ({ inputs: [...prevState.inputs, ''] }))\n    }\n\n    fileChangeHandler = (event) => {\n        const { target: { files } } = event;\n        const filesToStore = this.state.filesArr\n\n        this.setState({ files: filesToStore });\n    }\n\n    handleChangeText(i, event) {\n        let colors = [...this.state.colors];\n        colors[i] = event.target.value;\n        this.setState({ colors });\n    }\n\n    handleColorText = e => {\n        this.setState({\n            pushColorText: e.target.value\n        })\n    }\n\n    getSelectedCategory = (event) => {\n        this.setState({\n            selectedCategory: event.target.value\n        })\n    }\n\n\n\n    createUI() {\n        return this.state.values.map((el, i) =>\n            <div key={i} className=\"d-flex align-items-center\">\n                <TextField\n                    type=\"text\" value={el || ''} onChange={this.handleChange.bind(this, i)}\n                    className=\"outlined-title hash-field\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                />\n                <input type='button' value='x' onClick={this.removeClick.bind(this, i)} className=\"remove-hash\" />\n            </div>\n        )\n    }\n\n\n    createHashtags() {\n        return this.state.hashtags.map((el, i) =>\n            <div key={i} className=\"d-flex align-items-center\">\n                <TextField\n                    type=\"text\" value={el || ''} onChange={this.handleHash.bind(this, i)}\n                    className=\"outlined-title hash-field\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                />\n                <input type='button' value='x' onClick={this.removeHash.bind(this, i)} className=\"remove-hash\" />\n            </div>\n        );\n    }\n\n    handleChange(i, event) {\n        let values = [...this.state.values];\n        values[i] = event.target.value;\n        this.setState({ values });\n    }\n\n    handleHash(i, event) {\n        let hashtags = [...this.state.hashtags];\n        hashtags[i] = event.target.value;\n        this.setState({ hashtags });\n    }\n\n    addHash() {\n        this.setState(prevState => ({ hashtags: [...prevState.hashtags, ''] }))\n    }\n\n    addClick() {\n        this.setState(prevState => ({ values: [...prevState.values, ''] }))\n    }\n\n    removeClick(i) {\n        let values = [...this.state.values];\n        values.splice(i, 1);\n        this.setState({ values });\n    }\n\n    removeHash(i) {\n        let hashtags = [...this.state.hashtags];\n        hashtags.splice(i, 1);\n        this.setState({ hashtags });\n    }\n\n    handleSubmit(event) {\n        alert('A name was submitted: ' + this.state.values.join(', '));\n        event.preventDefault();\n    }\n\n    onChange = time => this.setState({ time });\n\n    submitFile(e) {\n        e.preventDefault();\n        this.props.firebase.getStorage.child('images');\n    }\n\n    showCategory = e => {\n        e.preventDefault();\n\n        this.setState({\n            showCategoryState: !this.state.showCategoryState\n        });\n    }\n\n    handleTitle = (e) => {\n        this.setState({\n            title: e.target.value\n        });\n    }\n\n    handleCopy = (e) => {\n        this.setState({\n            copy: e.target.value\n        });\n    }\n\n    handleHashtags = (e) => {\n        this.setState({\n            hashtags: e.target.value\n        });\n    }\n\n\n    onChangeTime = e => {\n        this.setState({\n            time: e\n        })\n    }\n\n    onSubmitForm = (e) => {\n        e.preventDefault();\n\n        console.log(this.props.match.params.clientId)\n\n        const friendlyUrl = this.state.title.toLowerCase().replace(/ /g, '-')\n        const formMonth = this.state.calendarMonth;\n        const clientId = this.props.match.params.clientId\n        this.props.firebase.addPost(\n            clientId,\n            this.state.title,\n            this.state.copy,\n            this.state.hashtags,\n            this.state.time,\n            parseInt(this.props.match.params.day),\n            parseInt(this.props.match.params.month),\n            this.state.values,\n            this.state.metaImageFiles,\n            friendlyUrl,\n            false,\n            this.state.selectedCategory\n        );\n\n        this.props.history.push(`/calendar/2019/${this.props.match.params.month}/${this.props.match.params.clientId}`);\n\n    }\n\n\n    // File upload methods\n\n    addFile = event => {\n        const file = Array.from(event.target.files);\n\n        if (file.length === 1) {\n            this.setState({\n                file: [...this.state.file], file\n            });\n        }\n        else if (file.length > 1) {\n            const emptyFileArr = []\n            file.map(innerFile => {\n                emptyFileArr.push(innerFile)\n            })\n\n            this.setState({\n                file: emptyFileArr\n            });\n        }\n    }\n\n    uploadFiles = (e) => {\n        e.preventDefault();\n        const firestorageRef = this.props.firebase.storage;\n        const imageRefs = [];\n        this.state.file.forEach(file => {\n            var type;\n\n            switch (file.type) {\n                case 'video/mp4':\n                    type = 'video';\n                    break;\n                case 'image/png':\n                    type = 'image';\n                    break;\n                case 'image/jpeg':\n                    type = 'image';\n                    break;\n                default:\n                    type = '';\n            }\n            var encodedURL = encodeURIComponent(this.state.clientId) + encodeURIComponent('/') + this.state.calendarMonth + encodeURIComponent('-') + this.state.calendarDay + encodeURIComponent('/') + file.name + '?alt=media&type=' + type;\n            var imageUrl = `https://firebasestorage.googleapis.com/v0/b/skylar-social-17190.appspot.com/o/${encodedURL}`\n            imageRefs.push(imageUrl);\n\n\n            firestorageRef.ref().child(`${this.state.clientId}/${this.state.calendarMonth}-${this.state.calendarDay}/${file.name}`)\n                .put(file)\n        });\n        this.setState({\n            metaImageFiles: imageRefs\n        })\n    }\n\n    showState = (e) => {\n        e.preventDefault();\n        console.log(this.state);\n    }\n\n    monthNumToName = (monthnum) => {\n        var months = [\n            'January', 'February', 'March', 'April', 'May',\n            'June', 'July', 'August', 'September',\n            'October', 'November', 'December'\n        ];\n\n        return months[monthnum - 1] || '';\n    }\n\n    render() {\n\n        const buttonStyles = {\n            backgroundColor: '#EF463B',\n            borderColor: '#007bff',\n            width: \"40px\",\n            height: \"40px\"\n        }\n\n        const renderMedia = this.state.metaImageFiles.map(media => {\n            // alert(media)\n        })\n\n\n\n\n\n        return (\n            <React.Fragment>\n                <div className=\"container add-post\">\n                    <p className=\"heading text-center add-post-heading\">Client {this.props.match.params.clientId} Calendar<br />{this.monthNumToName(parseInt(this.props.match.params.month))} {this.props.match.params.year} - Add Post</p>\n                    <img src={require('../assets/skylar_Icon_wingPortion.svg')} id=\"wing-logo\" />\n                    <form onSubmit={this.onSubmitForm}>\n                        <div className=\"d-flex justify-content-between align-items-center\">\n                            <div className=\"outter-form-wrap\">\n                                <div className=\"d-flex align-items-end justify-content-between\">\n                                    <TextField\n                                        className=\"outlined-title\"\n                                        label=\"Title\"\n                                        name=\"title\"\n                                        value={this.state.value} onChange={this.handleTitle} required\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                    />\n                                    <TimePicker\n                                        onChange={this.onChangeTime}\n                                        value={this.state.time}\n                                    />\n                                </div>\n                                <br />\n                                <TextField\n                                    className=\"outlined-copy\"\n                                    label=\"Copy\"\n                                    name=\"copy\"\n                                    multiline\n                                    value={this.state.value} onChange={this.handleTitle} required\n                                    margin=\"normal\"\n                                    value={this.state.value} onChange={this.handleCopy}\n                                    variant=\"outlined\"\n                                />\n                                <br />\n                                <p className=\"heading\">Hashtags:</p>\n                                {this.createHashtags()}\n                                <Fab color=\"red\" aria-label=\"Add\" onClick={this.addHash.bind(this)} style={buttonStyles}>\n                                    <AddIcon />\n                                </Fab>\n                                {/* <input type='button' value='Add Hashtags' className=\"add-date-btn\" /> */}\n                                <br />\n                                <p className=\"heading\">Links:</p>\n                                {this.createUI()}\n                                <Fab color=\"red\" aria-label=\"Add\" onClick={this.addClick.bind(this)} style={buttonStyles}>\n                                    <AddIcon />\n                                </Fab>\n                                <br />\n                                <br />\n                            </div>\n                            <div>\n                                <input type=\"file\" multiple onChange={this.addFile} />\n                                <button onClick={this.uploadFiles}>Upload Files</button>\n                            </div>\n                        </div>\n                        <div className=\"text-center\">\n                            <input type=\"submit\" value=\"Submit\" className=\"add-date-btn\" />\n                        </div>\n                    </form>\n                    <EditCategoryForm clientId={this.props.match.params.clientId} getSelectedCategory={this.getSelectedCategory} category={this.state.selectedCategory} />\n                </div >\n            </React.Fragment >\n        )\n    }\n}\n\nexport default compose(\n    withFirebase(AddPost)\n)","import React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\nimport { compose } from \"redux\";\nimport { connect } from 'react-redux';\nimport TimePicker from 'react-time-picker';\nimport EditCategoryForm from '../EditCategoryForm';\nimport * as ROUTES from '../../constants/routes';\nimport TextField from '@material-ui/core/TextField';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Fab from '@material-ui/core/Fab';\nimport './index.css';\n\nclass EditPost extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            post: null,\n            postTitle: '',\n            postCopy: '',\n            postHashtags: [],\n            postTime: '',\n            values: [],\n            firestorageRef: this.props.firebase.storage,\n            metaImageFiles: [],\n            categories: [],\n            selectedCategory: 'No Category|||#fff',\n            currentHashtag: ''\n        }\n\n        this.handlePostTitle = this.handlePostTitle.bind(this);\n        this.editPostSubmit = this.editPostSubmit.bind(this);\n        this.getSelectedCategory = this.getSelectedCategory.bind(this);\n        this.deleteHash = this.deleteHash.bind(this);\n        // this.addHashtag = this.addHashtag.bind(this)\n        // this.handleHashtags = this.handleHashtags.bind(this);\n    }\n\n\n    componentWillMount() {\n        this.props.firebase.editPostFirebase(this.props.match.params.clientId, this.props.match.params.postId).then(item => {\n            this.setState({\n                postTitle: item.data().title,\n                postCopy: item.data().copy,\n                postHashtags: item.data().hashtags,\n                postTime: item.data().time,\n                values: item.data().links,\n                metaImageFiles: item.data().metaImageFiles,\n                selectedCategory: item.data().selectedCategory,\n\n\n            })\n        });\n    }\n\n\n    handleChange(i, event) {\n        let values = [...this.state.values];\n        values[i] = event.target.value;\n        this.setState({ values });\n    }\n\n    getType = (url) => {\n        if (url !== 'No Files') {\n            var checkUrl = new URL(url)\n\n            var query_string = checkUrl.search;\n\n            var search_params = new URLSearchParams(query_string);\n\n            var type = search_params.get('type');\n\n            return type\n        }\n\n    }\n\n\n    createUI() {\n        return this.state.values.map((el, i) =>\n            <div key={i}>\n                <input type=\"text\" value={el || ''} onChange={this.handleChange.bind(this, i)} />\n                <input type='button' value='x' onClick={this.removeClick.bind(this, i)} className=\"remove-hash\" />\n            </div>\n        )\n    }\n\n    removeClick(i) {\n        let values = [...this.state.values];\n        values.splice(i, 1);\n        this.setState({ values });\n    }\n\n\n    handlePostTitle = (e) => {\n        this.setState({\n            postTitle: e.target.value\n        })\n    }\n\n    handlePostCopy = (e) => {\n        this.setState({\n            postCopy: e.target.value\n        })\n    }\n\n    editPostSubmit = (event) => {\n        event.preventDefault();\n\n        this.props.firebase.editPostSubmit(\n            this.props.match.params.clientId,\n            this.props.match.params.postId,\n            this.state.postTitle,\n            this.state.postCopy,\n            this.state.postHashtags,\n            this.state.postTime,\n            this.state.values,\n            this.state.selectedCategory\n        )\n\n        this.props.history.push(`/calendar/2019/${this.props.match.params.month}/${this.props.match.params.clientId}`);\n    }\n\n\n    deletePost = () => {\n        if (window.confirm('Are you sure you wish to delete this item?')) {\n            this.props.firebase.deletePost(this.props.match.params.clientId, this.props.match.params.postId)\n            this.props.history.push(`/calendar/2019/${this.props.match.params.month}/${this.props.match.params.clientId}`);\n        }\n        return false\n    }\n\n    getSelectedCategory = (event) => {\n        this.setState({\n            selectedCategory: event.target.value\n        })\n    }\n\n    monthNumToName = (monthnum) => {\n        var months = [\n            'January', 'February', 'March', 'April', 'May',\n            'June', 'July', 'August', 'September',\n            'October', 'November', 'December'\n        ];\n\n        return months[monthnum - 1] || '';\n    }\n\n    onChangeTime = e => {\n        this.setState({\n            postTime: e\n        })\n    }\n\n    deleteHash = (index) => {\n\n        // console.log(this.getAttribute('index'), 'attributed')\n        this.setState({\n            postHashtags: this.state.postHashtags.filter((_, i) => i !== index)\n        });\n    }\n\n    addNewHashtag = (e) => {\n        e.preventDefault();\n\n        this.setState({\n            postHashtags: [...this.state.postHashtags, this.state.currentHashtag],\n            currentHashtag: ''\n        })\n\n    }\n\n    currentHashtagHandle = e => {\n        this.setState({\n            currentHashtag: e.target.value\n        })\n    }\n\n\n\n\n\n    render() {\n        const media = this.state.metaImageFiles.map((item) => {\n            if (this.getType(item) == 'video') {\n                return (\n                    <video height=\"200\" width=\"200\" controls>\n                        <source src={item} />\n                    </video>\n                )\n            } else if (this.getType(item) == 'image') {\n                return (\n                    <img src={item} />\n                )\n            } else {\n                return (\n                    <div>Sorry There is no media</div>\n                )\n            }\n        })\n\n        console.log(this.state.selectedCategory, 'selected category')\n\n\n\n        const hashtags = this.state.postHashtags.map((hashtag, index) => (\n            <div>{hashtag}<input type=\"button\" onClick={() => this.deleteHash(index)} value=\"x\" index={index} className=\"remove-hash\" /></div>\n        ));\n        return (\n            <div className=\"container add-post edit-post\">\n                <button onClick={this.deletePost} className=\"delete-post-button\">\n                    <Fab disabled aria-label=\"Delete\">\n                        <DeleteIcon />\n                    </Fab>\n                </button>\n                <p className=\"heading text-center add-post-heading\">Client {this.props.match.params.clientId} Calendar<br />{this.monthNumToName(parseInt(this.props.match.params.month))} {this.props.match.params.year} - Edit Post</p>\n                <form onSubmit={this.editPostSubmit}>\n                    <div className=\"d-flex align-items-end justify-content-between\">\n                        <div className=\"d-flex flex-wrap justify-content-between\">\n                            <TextField\n                                margin=\"normal\"\n                                variant=\"outlined\"\n                                label=\"Title\"\n                                name=\"title\"\n                                value={this.state.postTitle}\n                                onChange={this.handlePostTitle}\n                                className=\"outlined-title\" />\n                            <TimePicker\n                                onChange={this.onChangeTime}\n                                value={this.state.postTime}\n                            />\n                            <TextField\n                                id=\"outlined-multiline-static\"\n                                label=\"Copy\"\n                                className=\"outlined-copy\"\n                                multiline\n                                rows=\"4\"\n                                defaultValue=\"Default Value\"\n                                margin=\"normal\"\n                                variant=\"outlined\"\n                                onChange={this.handlePostCopy} value={this.state.postCopy}\n                            />\n                            <br />\n                            <div>\n                                <p className=\"heading\">Hashtags:</p>\n                                {hashtags}\n\n                                <p className=\"heading\">Links:</p>\n                                {this.state.values && (\n                                    this.createUI()\n                                )\n                                }\n                            </div>\n                        </div>\n                        <div>{media}</div>\n                    </div>\n                    <div className=\"text-center\">\n                        <input type=\"submit\" value=\"Submit Edits\" className=\"add-date-btn\" />\n                    </div>\n                </form>\n\n                <form onSubmit={this.addNewHashtag.bind(this)} >\n                    <input name=\"hashtags\" value={this.state.currentHashtag} onChange={this.currentHashtagHandle} placeholder=\"Add Hashtag\" /><br />\n                </form>\n\n                <EditCategoryForm clientId={this.props.match.params.clientId} getSelectedCategory={this.getSelectedCategory} category={this.state.selectedCategory} />\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    getPost: post => dispatch({\n        type: 'GET_POST', post\n    })\n})\n\nconst mapStateToProps = state => (\n    console.log(state, 'state in map state to props'), {\n        post: state.setEditPostReducer\n    })\n\nexport default compose(\n    withFirebase,\n    connect(\n        null,\n        mapDispatchToProps\n    ))\n    (EditPost)\n","import React from 'react';\n\nimport { withFirebase } from '../Firebase';\n\nconst SignOutButton = ({ firebase }) => (\n  <button type=\"button\" onClick={firebase.doSignOut} className=\"sign-out-btn\">\n    Sign Out\n  </button>\n);\n\nexport default withFirebase(SignOutButton);","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './index.css'\n\nimport SignOutButton from '../SignOut';\nimport * as ROUTES from '../../constants/routes';\nimport { AuthUserContext } from '../Session';\n\nconst Navigation = ({ authUser }) => (\n\n  <AuthUserContext.Consumer>\n    {authUser =>\n      authUser ? <NavigationAuth authUser={authUser} id=\"page-wrap\" /> : <NavigationNonAuth id=\"page-wrap\" />\n    }\n  </AuthUserContext.Consumer>\n);\n\nconst NavigationAuth = (props) => (\n  <div id=\"auth-nav-wrapper\">\n    <ul id=\"nav-id\">\n      <li>\n        <Link to={ROUTES.LANDING}>Landing</Link>\n      </li>\n      <li>\n        <Link to={ROUTES.HOME}>Home</Link>\n      </li>\n      <li>\n        <Link to={ROUTES.ACCOUNT}>Account</Link>\n      </li>\n      <li>\n        <Link to={ROUTES.SETTINGS}>Settings</Link></li>\n      <li>\n        <SignOutButton />\n      </li>\n    </ul>\n    <div>\n      <img src={props.authUser.photoURL} className=\"nav-avatar\" />\n      <p>{props.authUser.displayName}</p>\n    </div>\n  </div>\n);\n\nconst NavigationNonAuth = () => (\n  <ul>\n    <li>\n      <Link to={ROUTES.LANDING}>Landing</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.SIGN_IN}>Sign In</Link>\n    </li>\n  </ul>\n);\n\nexport default Navigation;","export const LANDING = '/';\nexport const SIGN_UP = '/signup';\nexport const SIGN_IN = '/signin';\nexport const HOME = '/home';\nexport const ACCOUNT = '/account';\nexport const ADMIN = '/admin';\nexport const PASSWORD_FORGET = '/pw-forget';\nexport const ADD_NEW = '/add-new';\nexport const CLIENTS = '/clients';\nexport const DATES = '/dates/:id';\nexport const CALENDAR = '/calendar';\nexport const CALENDARSINGLE = '/calendar-single/'\nexport const ADD_POST = '/add-post/'\nexport const EDIT_POST = '/edit-post';\nexport const ADMIN_VIEW_POST = '/admin-view-post';\nexport const SETTINGS = '/settings';\n","import React, { Component } from 'react';\nimport { FirebaseContext } from '../Firebase';\nimport { Link, withRouter } from 'react-router-dom';\nimport { withFirebase } from '../Firebase';\nimport { compose } from 'recompose';\n\nimport * as ROUTES from '../../constants/routes';\n\nconst SignUpPage = () => (\n  <div>\n    <h1>SignUp</h1>\n    <SignUpForm />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  username: '',\n  email: '',\n  passwordOne: '',\n  passwordTwo: '',\n  error: null,\n};\n\n\nclass SignUpFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  onSubmit = event => {\n    const { username, email, passwordOne } = this.state;\n\n    this.props.firebase\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\n      .then(authUser => {\n        console.log(authUser, 'auth users');\n        alert('ran auth user');\n        this.setState({ ...INITIAL_STATE });\n        // this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n\n  render() {\n    const {\n      username,\n      email,\n      passwordOne,\n      passwordTwo,\n      error,\n    } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo ||\n      passwordOne === '' ||\n      email === '' ||\n      username === '';\n\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"username\"\n          value={username}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Full Name\"\n        />\n        <input\n          name=\"email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Sign Up\n      </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst SignUpLink = () => (\n  <p>\n    Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n  </p>\n);\n\nconst SignUpForm = compose(\n  withRouter,\n  withFirebase\n)(SignUpFormBase);\n\nexport default SignUpPage;\n\nexport { SignUpForm, SignUpLink };","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { connect } from 'react-redux';\nimport './index.css'\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport clsx from 'clsx';\nimport { SignUpLink } from '../SignUp';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst SignInPage = () => (\n  <React.Fragment>\n    <div id=\"sign-in-wrapper\" className=\"d-flex justify-content-center align-items-center flex-column\">\n      <SignInForm />\n    </div>\n  </React.Fragment>\n);\n\n\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null,\n  loading: false\n};\n\n\nconst currentClientMonth = new Date().getMonth()\nconst currentClientYear = new Date().getFullYear();\n\nclass SignInFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      ...INITIAL_STATE,\n      month: currentClientMonth + 1,\n      year: currentClientYear\n    };\n  }\n\n\n  onSubmit = event => {\n    this.setState({\n      loading: !this.state.loading\n    })\n    const { email, password } = this.state;\n\n    this.props.firebase\n      .doSignInWithEmailAndPassword(email, password).then(value => {\n        if (value.docs[0].data().admin == 1) {\n          this.props.history.push({\n            pathname: `/home`,\n            state: {\n              userId: value.docs[0].data().userId\n            }\n          })\n        }\n        else {\n          localStorage.setItem('userId', value.docs[0].data().urlName)\n          this.props.history.push({\n            pathname: `/client-calendar/${this.state.year}/${this.state.month}`,\n            state: {\n              userId: value.docs[0].data().urlName\n            }\n          })\n\n        }\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n\n\n  render() {\n\n    console.log(this.props, 'props for settings user')\n    const { email, password, error } = this.state;\n    const isInvalid = password === '' || email === '';\n\n    return (\n      <React.Fragment>\n        <img src={require('../assets/skylar_Icon_wingPortion.svg')} id=\"wing-logo\" />\n        <form onSubmit={this.onSubmit} className=\"d-flex flex-column align-items-center\">\n          <TextField\n            name=\"email\"\n            label=\"email\"\n            value={email}\n            onChange={this.onChange}\n            type=\"text\"\n            placeholder=\"Email Address\"\n            margin=\"normal\"\n            variant=\"outlined\"\n          />\n          <TextField\n            name=\"password\"\n            value={password}\n            label=\"password\"\n            onChange={this.onChange}\n            type=\"password\"\n            variant=\"outlined\"\n            placeholder=\"Password\"\n          />\n          <div id=\"sign-in-button-wrap\">\n            <Button disabled={isInvalid} type=\"submit\" variant=\"contained\" color=\"primary\" id=\"sign-in-button\">Sign In</Button>\n          </div>\n          {error && <p>{error.message}</p>}\n        </form>\n        {\n          this.state.loading && (\n            <CircularProgress />\n          )\n        }\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onSetUserId: authUser =>\n    dispatch({ type: 'SET_USER_ID', authUser }),\n});\n\nconst SignInForm = compose(\n  withRouter,\n  withFirebase,\n  connect(\n    null,\n    mapDispatchToProps\n  ),\n)(SignInFormBase);\n\nexport default SignInPage;\n\nexport { SignInForm };","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Clients extends Component{\n    constructor(props){\n        super(props)\n    }\n\n    render(){\n        return(\n            <div>\n                <Link to=\"/add-new\">Add New</Link>\n            </div>\n        )\n    }\n}\n\nexport default Clients;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { withFirebase } from '../Firebase';\nimport { compose } from 'recompose';\nimport * as ROUTES from '../../constants/routes';\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport './index.css'\n\nlet timer = 0;\nlet delay = 200;\nlet prevent = false;\n\nclass HiddenCalendarSingle extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isHiddenCalendar: false,\n            clientId: '',\n            image: ''\n        }\n\n        this.toggleIsHidden = this.toggleIsHidden.bind(this);\n    }\n\n    componentWillMount() {\n        var url_string = window.location.href  //window.location.href\n        var url = new URL(url_string);\n        var c = url.searchParams.get(\"clientId\");\n\n        this.setState({\n            clientId: c\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        console.log(prevProps, 'prev props');\n    }\n\n    toggleIsHidden = () => {\n        let me = this;\n        timer = setTimeout(function () {\n            if (!prevent) {\n                me.doClickAction();\n            }\n            prevent = false;\n        }, delay);\n    }\n\n    doClickAction() {\n        this.setState({\n            isHiddenCalendar: !this.state.isHiddenCalendar\n        })\n    }\n\n    doDoubleClickAction() {\n        let friendlyUrl = this.props.title.replace(/ /g, '-').toLowerCase();\n        this.props.push.push(`/admin-view-post/${this.props.month}/${this.props.day}/${friendlyUrl}/${this.props.clientId}/${this.props.itemId}`);\n    }\n\n    handleDoubleClick() {\n        clearTimeout(timer);\n        prevent = true;\n        this.doDoubleClickAction();\n    }\n\n    truncate = (input) => input.length > 200 ? `${input.substring(0, 200)}...` : input;\n\n    handleColor = (string) => {\n        if (string !== undefined) {\n            return string.split('|||')[1]\n        }\n    }\n\n\n    render() {\n        const friendlyUrlTitle = this.props.title.replace(/\\s+/g, '-') + '-' + this.props.month + '-' + this.props.day\n        const hiddenPost = () => (\n            <div>\n                <p>{this.props.title}</p>\n                <p>{this.truncate(this.props.copy)}</p>\n                <p>{this.props.time}</p>\n                <p className=\"mb-0\">{this.props.hashtags.map(item => (\n                    <span>#{item} </span>\n                ))}</p>\n                <Link to={`/edit-post/${this.props.month}/${this.props.day}/${this.props.itemId}/${this.props.clientId}`}>Edit Post</Link>\n            </div >\n        )\n\n        const buttonStyle = {\n            background: this.handleColor(this.props.selectedCategory)\n        }\n        return (\n            <React.Fragment>\n                <TransitionGroup component={null}>\n                    <button onClick={this.toggleIsHidden} onDoubleClick={this.handleDoubleClick.bind(this)} style={buttonStyle} className=\"label-button\">{this.props.title}\n                        {this.props.adminRead != false ? '' : <img src={require('../assets/not-read.svg')} className=\"not-read\" />}\n                    </button>\n                    {this.state.isHiddenCalendar && (\n                        <CSSTransition classNames=\"dialog\" timeout={300}>\n                            <div class=\"hidden-post\">\n                                {hiddenPost()}\n                            </div>\n                        </CSSTransition>\n                    )\n\n                    }\n                </TransitionGroup>\n            </React.Fragment>\n        )\n    }\n\n\n}\n\nexport default compose(\n    withFirebase(HiddenCalendarSingle)\n)","import React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\nimport { compose } from 'recompose';\nimport { Link } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\nimport HiddenCalendarSingle from '../HiddenCalendarSingle';\nimport './index.css'\n\nclass CalendarSingle extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            posts: [],\n            showCalendarModule: false\n        }\n\n        // this.toggleShowCalendarModule = this.toggleShowCalendarModule.bind\n    }\n\n\n    componentDidMount() {\n\n    }\n\n\n    toggleShowCalendarModule = () => {\n\n        alert('ran');\n        // this.setState({\n        //     showCalendarModule: !this.state.showCalendarModule\n        // })\n    }\n\n\n    toggleShowCalendarModule = () => {\n        this.setState({\n            showCalendarModule: !this.state.showCalendarModule\n        })\n    }\n\n    truncate = (input) => input.length > 200 ? `${input.substring(0, 200)}...` : input;\n\n\n\n\n    render() {\n\n        // const hiddenPost = this.props.posts\n\n\n\n\n        return (\n            <div className=\"calendar-popup-wrapper\">\n                <p className=\"calendar-single-day\">{this.props.day}</p><br />\n                {this.props.posts.map((item, index) => {\n                    if (item.data().month == this.props.month) {\n                        if (item.data().day === this.props.day) {\n                            return (\n                                <div class=\"hidden-calendar-wrapper d-flex flex-column\">\n                                    {\n                                        item.data().approved ?\n                                            <img src={require('../assets/check.svg')} className=\"check\" />\n                                            :\n                                            ''\n                                    }\n\n                                    {\n                                        item.data().adminRead ? '' : <img src={require('../assets/not-read.svg')} className=\"not-read\" />\n                                    }\n                                    <HiddenCalendarSingle title={item.data().title} copy={item.data().copy} time={item.data().time} hashtags={item.data().hashtags} links={item.data().links} day={item.data().day} month={item.data().month} itemId={item.id} push={this.props.history} clientId={this.props.clientId} selectedCategory={item.data().selectedCategory} adminRead={item.data().adminRead} />\n                                </div>\n                            )\n                        }\n                    }\n\n                })}\n\n            </div>\n        )\n    }\n}\n\nexport default compose(\n    withFirebase(CalendarSingle)\n);","import React, { Component } from 'react';\nimport { SketchPicker } from 'react-color';\nimport { withFirebase } from '../Firebase';\nimport { compose } from 'recompose';\nimport './index.css';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\n\nclass SelectCategory extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            setCategories: [],\n            name: '',\n            categoryName: '',\n            category: {},\n            color: '#EF463B ',\n            sendCategory: []\n        }\n\n        this.removeCategory = this.removeCategory.bind(this);\n        this.passCategories = this.passCategories.bind(this)\n    }\n\n    submitCategories = (e) => {\n        e.preventDefault();\n        let categoryObj = {\n            categories: {}\n        }\n\n        let sendCategory = {}\n\n        categoryObj.categories.color = this.state.color;\n        categoryObj.categories.name = this.state.name;\n        sendCategory.color = this.state.color;\n        sendCategory.name = this.state.name\n        this.setState({\n            setCategories: [...this.state.setCategories, categoryObj],\n            sendCategory: [...this.state.sendCategory, sendCategory]\n        })\n    }\n\n    handleChangeComplete = (color) => {\n        this.setState({ color: color.hex });\n    };\n\n    selectCategory = e => {\n        this.setState({\n            name: e.target.value\n        })\n    }\n\n    removeCategory = (event) => {\n        let index = event.target.getAttribute('data-index');\n        let setCategories = [...this.state.setCategories];\n        setCategories.splice(index, 1);\n        this.setState({ setCategories });\n    }\n\n    passCategories = (e) => {\n        e.preventDefault();\n        this.props.getCategories(this.state.setCategories, this.state.sendCategory)\n    }\n\n\n\n    render() {\n        let categoryList = this.state.setCategories.map((item, i) => {\n            let categoryStyle = {\n                background: item.categories.color\n            }\n            return (\n                <li key={i} className=\"category-list-item\">\n                    <button onClick={this.removeCategory} data-index={i}>\n                        <DeleteIcon className=\"delete-category\" />\n                    </button>\n                    <div className=\"d-flex align-items-center\">\n                        <div className=\"hex-color\" style={categoryStyle}></div>\n                        <p className=\"mb-0\" className=\"\">{item.categories.name}</p>\n                    </div>\n                </li>\n            )\n\n        })\n        return (\n            <React.Fragment>\n                <ul id=\"selected-categories\">\n                    {categoryList}\n                </ul>\n                <form onSubmit={this.passCategories}>\n                    <SketchPicker color={this.state.color} onChangeComplete={this.handleChangeComplete.bind(this)} />\n                    <input type=\"text\" onChange={this.selectCategory.bind(this)} />\n                    <button onClick={this.submitCategories}>Add Categories</button>\n                    <button onClick={this.passCategories}>Submit</button>\n                </form>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default compose(\n    withFirebase(SelectCategory)\n)","import React from 'react';\nimport './index.css';\n\n// removeCategory = (e)\n\nconst CategoryList = (props) => (\n    <div>\n        {\n\n            props.colors.map((item, index) => {\n                let categoryStyle = {\n                    background: item.categories.color\n                }\n                return (\n                    <div key={index}>\n                        <div>\n                            <div className=\"category-color\" style={categoryStyle}>\n                                {item.categories.name}\n                                <button index={index} onClick={() => props.removeCategory(index, item.categories.name)}>x</button>\n                            </div>\n                        </div>\n                    </div>\n                )\n            })\n        }\n    </div>\n)\n\n\nexport default CategoryList;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { withFirebase } from '../Firebase';\nimport { compose } from 'recompose';\nimport * as ROUTES from '../../constants/routes';\nimport Calendar from '../Calendar'\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './index.css';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\n\n\n\nclass Dates extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            user: null,\n            showAddDate: false,\n            date: [],\n            month: 1,\n            year: 2019,\n            chosenMonth: '',\n            chosenYear: '',\n            showCalendar: false,\n            clientId: '',\n            isLoading: false,\n            passDates: (month, year) => {\n                this.setState({\n                    chosenMonth: month,\n                    chosenYear: year,\n                    showCalendar: true\n                })\n            },\n\n        }\n        this.submitForm = this.submitForm.bind(this);\n    }\n\n    componentWillMount() {\n        this.props.firebase.getUID(this.props.match.params.id).then(snapshot => {\n            snapshot.docs.map(item => {\n                this.setState({\n                    clientId: item.data().userId,\n                    isLoading: !this.state.isLoading\n                })\n            })\n        })\n\n        this.props.firebase.getDates(this.props.match.params.id).then(snapshot => {\n            const list = snapshot.docs;\n            list.map(item => {\n                const obj = {};\n                const dateArr = this.state.date;\n                obj[\"month\"] = item.data().month;\n                obj[\"year\"] = item.data().year;\n                obj[\"id\"] = item.id\n                dateArr.push(obj);\n                this.setState({\n                    date: dateArr\n                });\n            })\n        });\n    }\n\n    componentDidMount() {\n\n    }\n\n\n    toggleAddDate() {\n        this.setState({\n            showAddDate: !this.state.showAddDate\n        });\n    }\n\n\n    submitForm = e => {\n        e.preventDefault();\n        let tempDateObj = {};\n        tempDateObj.month = this.state.month\n        tempDateObj.year = this.state.year\n\n        if (this.state.date.filter(e => e.month === tempDateObj.month).length > 0) {\n            alert('Sorry that month is already in use, please select again')\n        } else {\n            this.props.firebase.addDate(this.props.match.params.id, this.state.month, this.state.year).then(() => {\n                window.location.reload();\n            });\n            this.setState({\n                showAddDate: !this.state.showAddDate,\n                date: [...this.state.date, tempDateObj]\n            });\n\n        }\n    }\n\n    convert(num) {\n        num = num - 1;\n        const monthArr = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n        ];\n\n        const month = monthArr[num];\n        return month;\n    }\n\n    handleMonth = (e) => {\n        console.log(e.target.value, 'month event');\n        this.setState({\n            month: e.target.value\n        })\n    }\n\n    handleYear = (e) => {\n        console.log(e, 'year event');\n        this.setState({\n            year: e.target.value\n        })\n    }\n\n    redirectDate = () => {\n        console.log('hello')\n    }\n\n    passDates() {\n        console.log('clicked');\n        console.log(this.props)\n    }\n\n    deleteDate = (id, index) => {\n        if (this.props.match.params.id !== undefined) {\n            this.props.firebase.deleteDate(this.props.match.params.id, id);\n        }\n\n        this.setState({\n            date: this.state.date.filter((_, i) => i !== index)\n        });\n    }\n\n\n\n    render() {\n\n\n        const renderDates = this.state.date.map((item, index) => (\n            <div className=\"single-calendar-wrapper d-flex align-items-center justify-content-center\" index={index} key={item.id}>\n                <button onClick={() => this.deleteDate(item.id, index)} className=\"delete-date\">x</button>\n                <Link to={`/calendar/${item.year}/${item.month}/${this.props.match.params.id}`}>\n                    {this.convert(item.month)} {item.year}\n                    <br />\n                </Link>\n            </div>\n        ));\n\n        const selectStyles = {\n            backgroundColor: \"#fff\",\n            width: \"269px\",\n            paddingLeft: \"20px\"\n        }\n\n        const formControlStyles = {\n            margin: \"20px\",\n            minWidth: 120,\n        }\n\n        const inputStyles = {\n            color: \"#fff\"\n        }\n        return (\n            this.state.isLoading && this.state.date.length > 0 ?\n                <div>\n                    <h2 className=\"text-center\" id=\"client-heading\">Client A-Game’s Calendars</h2>\n                    <p className=\"text-center\">Select a month to view it’s calendar.</p>\n                    <div id=\"dates-list\" className=\"container row date-wrapper justify-content-center\">\n                        {renderDates}\n                    </div>\n                    {this.state.showAddDate ?\n                        <form className=\"add-date-form\" onSubmit={this.submitForm.bind(this)}>\n                            <button onClick={this.toggleAddDate.bind(this)} className=\"toggle-close\">x</button>\n                            <div className=\"d-flex justify-content-between inner-date-wrapper\">\n                                <InputLabel htmlFor=\"month-helper\">Month</InputLabel>\n\n                                <Select onChange={this.handleMonth.bind(this)} className=\"select-date\" value={this.state.month} style={selectStyles} id=\"month-helper\">\n                                    <MenuItem value=\"1\">January</MenuItem>\n                                    <MenuItem value=\"2\">February</MenuItem>\n                                    <MenuItem value=\"3\">March</MenuItem>\n                                    <MenuItem value=\"4\">April</MenuItem>\n                                    <MenuItem value=\"5\">May</MenuItem>\n                                    <MenuItem value=\"6\">June</MenuItem>\n                                    <MenuItem value=\"7\">July</MenuItem>\n                                    <MenuItem value=\"8\">August</MenuItem>\n                                    <MenuItem value=\"9\">September</MenuItem>\n                                    <MenuItem value=\"10\">October</MenuItem>\n                                    <MenuItem value=\"11\">November</MenuItem>\n                                    <MenuItem value=\"12\">December</MenuItem>\n                                </Select>\n\n                                <Select onChange={this.handleYear.bind(this)} style={selectStyles} class=\"select-date\" id=\"month-helper\" value={this.state.year}>\n                                    <MenuItem value=\"2019\">2019</MenuItem>\n                                    <MenuItem value=\"2020\">2020</MenuItem>\n                                </Select>\n                            </div>\n                            <input type=\"submit\" value=\"Submit\" className=\"add-date-btn\" />\n                        </form>\n                        :\n                        ''\n                    }\n                    {this.state.showCalender ?\n                        <Calendar impData={this.state} />\n                        : ''\n                    }\n                    <div className=\"text-center\">\n                        <button onClick={this.toggleAddDate.bind(this)} className=\"add-date-btn\">Add New</button>\n                    </div>\n                </div>\n                : (this.state.isLoading && this.state.date.length == 0 ?\n                    <div className=\"container\">\n                        {this.state.showAddDate ?\n                            <form className=\"add-date-form\" onSubmit={this.submitForm.bind(this)}>\n                                <button onClick={this.toggleAddDate.bind(this)} className=\"toggle-close\">x</button>\n                                <div className=\"d-flex justify-content-between date-wrapper month-wrapper\">\n                                    <Select onChange={this.handleMonth.bind(this)} value={this.state.month} style={selectStyles}>\n                                        <MenuItem value=\"1\">January</MenuItem>\n                                        <MenuItem value=\"2\">February</MenuItem>\n                                        <MenuItem value=\"3\">March</MenuItem>\n                                        <MenuItem value=\"4\">April</MenuItem>\n                                        <MenuItem value=\"5\">May</MenuItem>\n                                        <MenuItem value=\"6\">June</MenuItem>\n                                        <MenuItem value=\"7\">July</MenuItem>\n                                        <MenuItem value=\"8\">August</MenuItem>\n                                        <MenuItem value=\"9\">September</MenuItem>\n                                        <MenuItem value=\"10\">October</MenuItem>\n                                        <MenuItem value=\"11\">November</MenuItem>\n                                        <MenuItem value=\"12\">December</MenuItem>\n                                    </Select>\n                                    <Select onChange={this.handleYear.bind(this)} style={selectStyles} value={this.state.year}>\n                                        Placeholder\n                                    <MenuItem value=\"2019\">2019</MenuItem>\n\n                                    </Select>\n                                </div>\n                                <input type=\"submit\" value=\"Submit\" className=\"add-date-btn\" onSubmit={this.submitForm.bind(this)} />\n                            </form>\n                            :\n                            ''\n                        }\n                        <h2 className=\"text-center\" id=\"client-heading\">Client A-Game’s Calendars</h2>\n                        <img src={require('../assets/repeat-grid.svg')} id=\"no-date-calendar\" />\n                        <p className=\"text-center client-text\">You don’t seem to have any calendars set up yet. Click below to add one and get started!</p>\n                        <div className=\"text-center arrow-wrapper\">\n                            <button onClick={this.toggleAddDate.bind(this)} className=\"add-date-btn\">Add New</button>\n                            <img src={require('../assets/arrow.svg')} id=\"arrow\" />\n                        </div>\n                    </div>\n                    :\n                    <div className=\"progress-wrapper\"><CircularProgress /></div>)\n\n\n        )\n    }\n}\n\nexport default compose(\n    withFirebase(Dates)\n)","import React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\nimport { compose } from 'recompose';\nimport { Link } from 'react-router-dom';\n\n\n// Make this a dumb component \n\nclass ClientCalendarSingle extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            posts: [],\n            currentPosts: []\n        }\n    }\n\n    getMonthFromString = (mon) => {\n        return new Date(Date.parse(mon + \" 1, 2012\")).getMonth() + 1\n    }\n\n    handleColor = (string) => {\n        if (string !== undefined) {\n            return string.split('|||')[1]\n        }\n    }\n\n    render() {\n\n        let linkMonth = this.getMonthFromString(this.props.month);\n\n        const filtered = this.props.posts.filter(item => {\n            return item.data().day == this.props.day\n        });\n        console.log(this.props.posts, 'flitered')\n\n        const filteredList = filtered.map(item => {\n\n            let friendlyUrl = item.data().title.toLowerCase().replace(/ /g, '-');\n            let itemId = item.id;\n\n            let selectedCategory = this.handleColor(item.data().selectedCategory);\n\n            let clientTitleStyles = {\n                backgroundColor: selectedCategory,\n                height: \"38px\",\n                display: \"inline-block\",\n                position: \"relative\",\n                width: \"75%\",\n                marginLeft: \"10px\",\n                paddingLeft: \"5px\",\n                color: \"#002D5B\"\n                /* padding: 10px; */\n            }\n\n            return (\n                <div>\n                    <Link to={`/view-post/${linkMonth}/${this.props.day}/${friendlyUrl}`} style={clientTitleStyles} className=\"\">{item.data().title}{item.data}{selectedCategory}< br />\n                        {item.data().clientRead != false ? '' : <img src={require('../assets/not-read.svg')} className=\"not-read\" />}\n                        {\n                            item.data().approved ? <img src={require('../assets/check.svg')} className=\"check\" /> : ''\n                        }\n                    </Link>\n\n                </div>\n            )\n        }\n\n        )\n\n        return (\n            <div>\n                <p className=\"calendar-single-day\">{this.props.day}</p>\n                {filteredList}\n            </div >\n        )\n    }\n}\n\nexport default ClientCalendarSingle;","import React, { Component } from 'react';\n\nclass ServerFile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      greeting: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ name: event.target.value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    fetch(`/api/greeting?name=${encodeURIComponent(this.state.name)}`)\n      .then(response => response.json())\n      .then(state => this.setState(state));\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <form onSubmit={this.handleSubmit}>\n            <label htmlFor=\"name\">Enter your name: </label>\n            <input\n              id=\"name\"\n              type=\"text\"\n              value={this.state.name}\n              onChange={this.handleChange}\n            />\n            <button type=\"submit\">Submit</button>\n          </form>\n          <p>{this.state.greeting}</p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default ServerFile;","import React, { Component } from 'react';\nimport moment, { relativeTimeThreshold } from \"moment\";\nimport { range } from \"moment-range\";\nimport \"./calendar.css\";\nimport { withFirebase } from '../Firebase';\nimport CalendarSingle from '../CalendarSingle';\nimport { Link } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport ClientCalendarSingle from '../ClientCalendarSingle';\nimport CategoryList from '../CategoryList';\n\n\n\nclass ClientCalendar extends React.Component {\n    weekdayshort = moment.weekdaysShort();\n\n    state = {\n        showYearTable: false,\n        showMonthTable: false,\n        showDateTable: true,\n        dateObject: moment(`2019-${this.props.match.params.month}`),\n        allmonths: moment.months(),\n        selectedDay: null,\n        currentMonth: parseInt(moment().format('M')),\n        currentPosts: [],\n        categories: []\n    };\n\n    componentWillMount() {\n        console.log(localStorage, 'local storage');\n        this.props.firebase.getUniqueClientPosts(localStorage.getItem('userId'), parseInt(this.props.match.params.month)).then(snapshot => {\n            this.setState({\n                currentPosts: snapshot.docs\n            })\n        })\n\n        this.props.firebase.getUserCategories(localStorage.getItem('userId')).then(snapshot => {\n            const catArr = [...this.state.categories]\n            snapshot.docs.map(category => {\n                catArr.push(category.data())\n            })\n            this.setState({\n                categories: catArr\n            })\n        })\n    }\n\n    daysInMonth = () => {\n        return this.state.dateObject.daysInMonth();\n    };\n    year = () => {\n        return this.state.dateObject.format(\"Y\");\n    };\n    currentDay = () => {\n        return this.state.dateObject.format(\"D\");\n    };\n    firstDayOfMonth = () => {\n        let dateObject = this.state.dateObject;\n        let firstDay = moment(dateObject)\n            .startOf(\"month\")\n            .format(\"d\"); // Day of week 0...1..5...6\n        return firstDay;\n    };\n    month = () => {\n        return this.state.dateObject.format(\"MMMM\");\n    };\n    showMonth = (e, month) => {\n        this.setState({\n            showMonthTable: !this.state.showMonthTable,\n            showDateTable: !this.state.showDateTable\n        });\n    };\n    setMonth = month => {\n        let monthNo = this.state.allmonths.indexOf(month);\n        let dateObject = Object.assign({}, this.state.dateObject);\n        dateObject = moment(dateObject).set(\"month\", monthNo);\n        this.setState({\n            dateObject: dateObject,\n            showMonthTable: !this.state.showMonthTable,\n            showDateTable: !this.state.showDateTable\n        });\n    };\n    MonthList = props => {\n        let months = [];\n        props.data.map(data => {\n            months.push(\n                <td\n                    key={data}\n                    className=\"calendar-month\"\n                    onClick={e => {\n                        this.setMonth(data);\n                    }}\n                >\n                    <span>{data}</span>\n                </td>\n            );\n        });\n        let rows = [];\n        let cells = [];\n\n        months.forEach((row, i) => {\n            if (i % 3 !== 0 || i == 0) {\n                cells.push(row);\n            } else {\n                rows.push(cells);\n                cells = [];\n                cells.push(row);\n            }\n        });\n        rows.push(cells);\n        let monthlist = rows.map((d, i) => {\n            return <tr>{d}</tr>;\n        });\n\n        return (\n            <table className=\"calendar-month\">\n                <thead>\n                    <tr>\n                        <th colSpan=\"4\">Select a Month</th>\n                    </tr>\n                </thead>\n                <tbody>{monthlist}</tbody>\n            </table>\n        );\n    };\n    showYearTable = e => {\n        this.setState({\n            showYearTable: !this.state.showYearTable,\n            showDateTable: !this.state.showDateTable\n        });\n    };\n\n    onPrev = () => {\n        let curr = \"\";\n        if (this.state.showYearTable === true) {\n            curr = \"year\";\n        } else {\n            curr = \"month\";\n        }\n\n\n        this.props.history.push(`/client-calendar/2019/${parseInt(this.props.match.params.month) - 1}`);\n        this.props.firebase.getUniqueClientPosts(localStorage.getItem('userId'), parseInt(this.props.match.params.month - 1)).then(snapshot => {\n            console.log(snapshot, 'snapshot val prev')\n            this.setState({\n                currentPosts: snapshot.docs,\n                dateObject: this.state.dateObject.subtract(1, curr)\n            })\n        })\n\n    };\n    onNext = () => {\n        let curr = \"\";\n        if (this.state.showYearTable === true) {\n            curr = \"year\";\n        } else {\n            curr = \"month\";\n        }\n        this.props.history.push(`/client-calendar/2019/${parseInt(this.props.match.params.month) + 1}`);\n        this.props.firebase.getUniqueClientPosts(localStorage.getItem('userId'), parseInt(this.props.match.params.month) + 1).then(snapshot => {\n            this.setState({\n                currentPosts: snapshot.docs,\n                dateObject: this.state.dateObject.add(1, curr)\n            })\n        })\n    };\n    setYear = year => {\n        let dateObject = Object.assign({}, this.state.dateObject);\n        dateObject = moment(dateObject).set(\"year\", year);\n        this.setState({\n            dateObject: dateObject,\n            showMonthTable: !this.state.showMonthTable,\n            showYearTable: !this.state.showYearTable\n        });\n    };\n    onYearChange = e => {\n        this.setYear(e.target.value);\n    };\n    getDates(startDate, stopDate) {\n        var dateArray = [];\n        var currentDate = moment(startDate);\n        var stopDate = moment(stopDate);\n        while (currentDate <= stopDate) {\n            dateArray.push(moment(currentDate).format(\"YYYY\"));\n            currentDate = moment(currentDate).add(1, \"year\");\n        }\n        return dateArray;\n    }\n\n    getState = e => {\n        e.preventDefault();\n        console.log(this.state.currentPosts);\n    }\n    YearTable = props => {\n        let months = [];\n        let nextten = moment()\n            .set(\"year\", props)\n            .add(\"year\", 12)\n            .format(\"Y\");\n\n        let tenyear = this.getDates(props, nextten);\n\n        tenyear.map(data => {\n            months.push(\n                <td\n                    key={data}\n                    className=\"calendar-month\"\n                    onClick={e => {\n                        this.setYear(data);\n                    }}\n                >\n                    <span>{data}</span>\n                </td>\n            );\n        });\n        let rows = [];\n        let cells = [];\n\n        months.forEach((row, i) => {\n            if (i % 3 !== 0 || i == 0) {\n                cells.push(row);\n            } else {\n                rows.push(cells);\n                cells = [];\n                cells.push(row);\n            }\n        });\n        rows.push(cells);\n        let yearlist = rows.map((d, i) => {\n            return <tr>{d}</tr>;\n        });\n\n        return (\n            <table className=\"calendar-month\">\n                <thead>\n                    <tr>\n                        <th colSpan=\"4\">Select a Yeah</th>\n                    </tr>\n                </thead>\n                <tbody>{yearlist}</tbody>\n            </table>\n        );\n    };\n    onDayClick = (e, d) => {\n        this.setState(\n            {\n                selectedDay: d\n            },\n            () => {\n                console.log(\"SELECTED DAY: \", this.state.selectedDay);\n            }\n        );\n    };\n    render() {\n        let weekdayshortname = this.weekdayshort.map(day => {\n            return <th key={day}>{day}</th>;\n        });\n        let blanks = [];\n        for (let i = 0; i < this.firstDayOfMonth(); i++) {\n            blanks.push(<td className=\"calendar-day empty\">{\"\"}</td>);\n        }\n\n        let daysInMonth = [];\n        for (let d = 1; d <= this.daysInMonth(); d++) {\n            console.log(this.state.currentPosts, 'current posts')\n            let currentDay = d == this.currentDay() ? \"today\" : \"\";\n            let m = this.month();\n            daysInMonth.push(\n                <td key={d} className={`calendar-day ${currentDay}`}>\n                    <ClientCalendarSingle day={d} month={m} posts={this.state.currentPosts} />\n                </td>\n            );\n        }\n        var totalSlots = [...blanks, ...daysInMonth];\n        let rows = [];\n        let cells = [];\n\n        totalSlots.forEach((row, i) => {\n            if (i % 7 !== 0) {\n                cells.push(row);\n            } else {\n                rows.push(cells);\n                cells = [];\n                cells.push(row);\n            }\n            if (i === totalSlots.length - 1) {\n                // let insertRow = cells.slice();\n                rows.push(cells);\n            }\n        });\n\n        let daysinmonth = rows.map((d, i) => {\n            return <tr>{d}</tr>;\n        });\n\n\n\n        return (\n            <React.Fragment>\n                <CategoryList colors={this.state.categories} />\n                <div className=\"tail-datetime-calendar\">\n                    <div className=\"calendar-heading\">\n                        <h2 className=\"text-center\">Client {localStorage.userId} Calendar </h2>\n                        <p className=\"text-center\">{this.month()}     {this.year()}</p>\n                    </div>\n                    <div className=\"calendar-navi\">\n                        <span\n                            onClick={e => {\n                                this.onPrev();\n                            }}\n                            class=\"calendar-button button-prev\"\n                        />\n                        {!this.state.showMonthTable && (\n                            <span\n                                onClick={e => {\n                                    this.showMonth();\n                                }}\n                                class=\"calendar-label\"\n                            >\n                                {this.month()}\n                            </span>\n                        )}\n                        <span className=\"calendar-label\" onClick={e => this.showYearTable()}>\n                            {this.year()}\n                        </span>\n                        <span\n                            onClick={e => {\n                                this.onNext();\n                            }}\n                            className=\"calendar-button button-next\"\n                        />\n                    </div>\n\n                    <div className=\"calendar-date\">\n                        {this.state.showYearTable && <this.YearTable props={this.year()} />}\n                        {this.state.showMonthTable && (\n                            <this.MonthList data={moment.months()} />\n                        )}\n                    </div>\n\n                    {this.state.showDateTable && (\n                        <div className=\"calendar-date\">\n                            <table className=\"calendar-day\">\n                                <thead>\n                                    <tr>{weekdayshortname}</tr>\n                                </thead>\n                                <tbody>{daysinmonth}</tbody>\n                            </table>\n                        </div>\n                    )}\n                    <button onClick={this.getState.bind(this)}>Get state</button>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default compose(\n    withFirebase(ClientCalendar)\n)","import React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\nimport { compose } from 'recompose';\nimport { Link } from 'react-router-dom';\n\nclass MediaWrapper extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n\n        }\n    }\n\n\n\n    render() {\n\n        const check = (url) => {\n            if (url !== 'No Files') {\n                var checkUrl = new URL(url)\n                var query_string = checkUrl.search;\n                var search_params = new URLSearchParams(query_string);\n                var type = search_params.get('type');\n\n                return type\n            }\n        }\n\n        const MediaRender = (files) => (\n\n            files.map(file => {\n                const imgStyle = {\n                    width: 200,\n                    height: 200\n                }\n                console.log(file);\n                switch (check(file)) {\n                    case 'image':\n                        return (\n                            <img src={file} style={imgStyle} />\n                        )\n                        break;\n                    case 'video':\n                        return (\n                            <div>\n                                <video height=\"200\" width=\"200\" controls>\n                                    <source src={file} />\n                                </video>\n                            </div>\n\n                        )\n                        break;\n                    default:\n                        return (\n                            <div>File Not Supported</div>\n                        )\n\n                }\n            })\n        )\n\n\n        return (\n            <div>{MediaRender(this.props.media)}</div>\n        )\n    }\n}\n\n\nexport default MediaWrapper;","import React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\n\nimport 'emoji-mart/css/emoji-mart.css'\nimport { Picker } from 'emoji-mart'\n\nclass ChatBox extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            message: '',\n            clientLogo: '',\n            authUser: ''\n        }\n\n        this.setMessage = this.setMessage.bind(this);\n    }\n\n    setMessage = e => {\n        e.preventDefault();\n\n        this.setState({\n            message: e.target.value\n        })\n    }\n\n    componentDidMount() {\n        // this.setState({\n        //     clientLogo: this.props.authUser.photoURL\n        // })\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.authUser !== state.authUser) {\n            return {\n                authUser: props.authUser\n            }\n        }\n\n        // Return null if the state hasn't changed\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.props.authUser !== prevState.authUser) {\n            this.setState({\n                authUser: this.props.authUser\n            })\n        }\n    }\n\n    submitMessage = e => {\n        e.preventDefault()\n\n        let id = this.props.id\n        let month = parseInt(this.props.month)\n        let day = parseInt(this.props.day)\n        let title = this.props.title\n        let message = this.state.message\n        let logo = this.state.authUser.photoURL\n\n        let date = new Date;\n        var messageMonth = date.getMonth();\n\n        this.props.getMessage(id, month, day, title, message, logo)\n\n        this.setState({\n            message: ''\n        })\n    }\n\n    addEmoji = (e) => {\n        //console.log(e.unified)\n        if (e.unified.length <= 5) {\n            let emojiPic = String.fromCodePoint(`0x${e.unified}`)\n            this.setState({\n                message: this.state.message + emojiPic\n            })\n        } else {\n\n            let sym = e.unified.split('-')\n            let codesArray = []\n            sym.forEach(el => codesArray.push('0x' + el))\n            //console.log(codesArray.length)\n            //console.log(codesArray)  // [\"0x1f3f3\", \"0xfe0f\"]\n\n            let emojiPic = String.fromCodePoint(...codesArray)\n            this.setState({\n                message: this.state.message + emojiPic\n            })\n        }\n    }\n\n\n\n\n\n    render() {\n        console.log(this.props, 'props in chatbox');\n        console.log(this.state, 'auth user in client chat')\n        return (\n            <div>\n                <form onSubmit={this.submitMessage}>\n                    <textarea onChange={this.setMessage} value={this.state.message} />\n                    {/* {this.props.authUser && (\n                    <input type=\"hidden\" value={} />\n                )} */}\n\n                    <button onClick={this.submitMessage}>Submit</button>\n                </form >\n                <span>\n                    <Picker onSelect={this.addEmoji} />\n                </span>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    onSetMessage: message => dispatch({ type: 'MESSAGE_SENT', message }),\n});\n\n\nexport default compose(\n    withFirebase,\n    connect(\n        null,\n        mapDispatchToProps\n    )\n)(ChatBox)","import React, { Component } from 'react';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../Firebase';\nimport { connect } from 'react-redux';\nimport \"./index.css\";\n\nclass AdminChatLog extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            messages: [],\n            message: {}\n        }\n\n    }\n\n    componentDidMount() {\n        console.log(this.props.id, 'props in mounted compoennt')\n        console.log(this.props, 'props in chatlog')\n    }\n\n    componenetDidUpdate(prevProps) {\n        if (this.props.authUser.email !== prevProps.authUser.email) {\n            alert('updated');\n        }\n    }\n\n\n\n    render() {\n        console.log(this.props.id, 'props on id')\n        console.log(this.state.messages, 'messages')\n        console.log(this.props.authUser, 'auth user')\n\n        // console.log(this.state.messages.length, 'in message render')\n        const logoStyles = {\n            width: 100,\n            height: 100\n        }\n\n        let avatar;\n\n        // console.log()\n        if (this.props.authUser) {\n            if (this.props.authUser.email === 'sky3@hotmail.com') {\n                avatar = <p>Avatar Admin</p>\n            } else {\n                avatar = <p>Avatar User</p>\n            }\n        }\n\n\n        // const renderMessage = \n        return (\n            <div>\n                {\n                    this.props.messages && (\n                        this.props.messages.map(item => {\n                            // console.log(this.state.messages, 'message length')\n                            return (\n                                (\n                                    <li className=\"row align-items-center\">\n                                        <img src={`${item.logo}`} className=\"avatar-chat\" />\n                                        <p>{item.message}</p>\n                                    </li>\n                                )\n                            )\n\n                        })\n                    )\n                }\n\n            </div >\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    onSetMessages: messages =>\n        dispatch({ type: 'MESSAGES_SET', messages }),\n    onSetMessagesLimit: limit =>\n        dispatch({ type: 'MESSAGES_LIMIT_SET', limit }),\n});\n\nexport default compose(\n    withFirebase,\n    connect(\n        null,\n        mapDispatchToProps\n    ),\n)(AdminChatLog)","import React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\nimport { compose } from \"redux\";\nimport MediaWrapper from '../MediaWrapper';\nimport Hashtags from '../Hashtags';\nimport ChatBox from '../ChatBox';\nimport ChatLog from '../ChatLog';\n\nimport { AuthUserContext } from '../Session';\n\nclass ClientViewPost extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            userId: localStorage.userId,\n            post: [],\n            media: [],\n            hashtags: [],\n            links: [],\n            approved: false,\n            postId: '',\n            showPopUp: false,\n            messages: [],\n            adminRead: null,\n            clientRead: null\n        }\n\n        this.handleCheckbox = this.handleCheckbox.bind(this);\n        this.approveFormSubmit = this.approveFormSubmit.bind(this);\n    }\n\n    componentWillMount() {\n        this.props.firebase.getSinglePost(this.state.userId, parseInt(this.props.match.params.month), parseInt(this.props.match.params.day), this.props.match.params.id).then(snapshot => {\n            snapshot.docs.map(item => {\n                this.setState({\n                    post: item,\n                    media: item.data().metaImageFiles,\n                    title: item.data().title,\n                    copy: item.data().copy,\n                    links: item.data().links,\n                    postId: item.id,\n                    approved: item.data().approved,\n                    adminRead: item.data().adminRead,\n                    clientRead: item.data().clientRead\n                }, () => {\n                    if (this.state.clientRead == false) {\n                        this.props.firebase.editReadClient(localStorage.userId, this.state.postId, true);\n                    }\n                })\n            })\n        })\n\n        this.props.firebase.getMessages(localStorage.userId, parseInt(this.props.match.params.month), parseInt(this.props.match.params.day)).then(snapshot => {\n            const emptyMessage = []\n            snapshot.docs.map(item => {\n                var emptyMessageObj = {}\n                emptyMessageObj.day = item.data().day;\n                emptyMessageObj.logo = item.data().logo;\n                emptyMessageObj.message = item.data().message;\n                emptyMessageObj.month = item.data().month;\n                emptyMessageObj.title = item.data().title;\n                emptyMessageObj.time = item.data().time;\n\n                emptyMessage.push(emptyMessageObj);\n                console.log(emptyMessage, 'empty message')\n            })\n\n            emptyMessage.sort((a, b) => (a.time < b.time) ? 1 : -1)\n\n            this.setState({\n                messages: emptyMessage\n            })\n        });\n    }\n\n    handleCheckbox = (event) => {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n\n        this.setState({\n            approved: value\n        });\n    }\n\n    approveFormSubmit = e => {\n        e.preventDefault();\n\n        this.props.firebase.approvePost(this.state.userId, this.state.postId, this.state.approved)\n    }\n\n    showPopUp = e => {\n        e.preventDefault();\n\n        this.setState({\n            showPopUp: !this.state.showPopUp\n        })\n    }\n\n    getMessage = (id, month, day, title, message, logo) => {\n        const incomingMessageObj = {}\n        incomingMessageObj.id = id\n        incomingMessageObj.logo = logo\n        incomingMessageObj.month = month\n        incomingMessageObj.day = day\n        incomingMessageObj.title = title\n        incomingMessageObj.message = message\n\n\n        this.setState({\n            messages: [...this.state.messages, incomingMessageObj],\n            adminRead: false\n        });\n\n        this.props.firebase.adminSendMessage(localStorage.userId, month, day, title, message, logo);\n    }\n\n    componentWillUnmount() {\n        this.props.firebase.editReadAdmin(localStorage.userId, this.state.postId, this.state.adminRead)\n    }\n\n\n\n\n    render() {\n        console.log(this.state, 'read or not read');\n        const approveStyles = {\n            margin: 200,\n            width: 300,\n            height: 300\n        }\n\n        const popUpStyles = {\n            width: 500,\n            height: 500,\n            background: 'red',\n            position: 'fixed',\n            zIndex: 1\n        }\n\n        return (\n            <React.Fragment>\n\n\n                <AuthUserContext.Consumer>\n                    {authUser => (\n\n\n                        <div className=\"container\">\n                            {this.state.showPopUp ? <div style={popUpStyles}>\n                                You have changed the approval of this post\n                <button onClick={this.showPopUp}>Close</button>\n                            </div> :\n                                ''\n                            }\n                            <p>{this.state.title}</p>\n                            <div className=\"media-text-wrapper row\">\n                                <div className=\"col-sm-6\">\n                                    <MediaWrapper media={this.state.media} />\n                                </div>\n                                <div className=\"col-sm-6\">\n                                    <div className=\"col-sm-12\">\n                                        <p>Copy</p>\n                                        <p>{this.state.copy}</p>\n                                    </div>\n                                    <div className=\"col-sm-12\">\n                                        {\n                                            this.state.hashtags.map(hash => (\n                                                <div>#{hash}</div>\n                                            ))\n                                        }\n                                        <br />\n\n                                        {\n                                            this.state.links.map(link => (\n                                                <div>{link}</div>\n                                            ))\n                                        }\n                                    </div>\n                                </div><br /><br /><br />\n                                <form onSubmit={this.approveFormSubmit} id=\"approve-form\" style={approveStyles}>\n                                    <label>\n                                        {\n                                            this.state.approved ? <p>You have approved this post</p> : <p>You have not approved this post</p>\n                                        }\n                                        <input name=\"approve\" type=\"checkbox\" id=\"approve-checkbox\" onChange={this.handleCheckbox} checked={this.state.approved} />\n                                    </label>\n                                    <button onClick={this.approveFormSubmit}>Submit</button>\n                                </form>\n                            </div>\n                            {/* End of media-text-wrapper */}\n\n                            <div id=\"chat-wrapper\">\n                                <ChatBox getMessage={this.getMessage} month={this.props.match.params.month} day={this.props.match.params.day} title={this.props.match.params.title} authUser={authUser} />\n                                <ChatLog incomingMessage={this.state.incomingMessage} id={this.props.match.params.client} month={this.props.match.params.month} day={this.props.match.params.day} messages={this.state.messages} authUser={authUser} />\n                            </div>\n                        </div>\n                    )}\n                </AuthUserContext.Consumer>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default compose(\n    withFirebase(ClientViewPost)\n)","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nconst AdminViewPostContent = props => {\n\n\n    // const categoryName = props.post.selectedCategory.split('|||')[0];\n    // const categoryColor = props.post.selectedCategory.split('|||')[1];\n\n    // const categoryStyleColor = {\n    //     background: categoryColor,\n    //     width: \"50px\",\n    //     height: \"50px\"\n    // }\n\n    const renderHashtags = props.hashtags.map(item => (\n        <div>#{item}</div>\n    ))\n\n    return (\n        <React.Fragment>\n            <TextField\n                id=\"outlined-name\"\n                label=\"Title\"\n                value={props.post.title}\n                margin=\"normal\"\n                variant=\"outlined\"\n                InputProps={{\n                    readOnly: true,\n                }}\n            />\n            <br />\n            <TextField\n                id=\"outlined-name\"\n                label=\"Copy\"\n                value={props.post.copy}\n                margin=\"normal\"\n                variant=\"outlined\"\n                InputProps={{\n                    readOnly: true,\n                }}\n            />\n            <br />\n            {renderHashtags}\n            Time: <p>{props.post.time}</p>\n            {/* Category: <p>{categoryName}</p><div style={categoryStyleColor}></div> */}\n            Approved: <p>\n                {props.post.approve ? 'Appoved' : 'Not Approved'}\n            </p>\n        </React.Fragment>\n    )\n}\n\nexport default AdminViewPostContent;","import React, { Component } from 'react';\nimport ChatBox from '../ChatBox';\nimport ChatLog from '../ChatLog';\nimport AdminViewPostContent from '../AdminViewPostContent';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../Firebase';\nimport EmojiField from 'emoji-picker-textfield';\nimport { AuthUserContext } from '../Session';\n\n\n\n\nclass AdminViewPost extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            title: '',\n            copy: '',\n            hashtags: [],\n            time: '',\n            month: '',\n            day: '',\n            links: [],\n            values: [],\n            firestorageRef: this.props.firebase.storage,\n            metaImageFiles: [],\n            categories: [],\n            approved: false,\n            selectedCategory: '',\n            incomingMessage: {},\n            clientRead: null\n\n        }\n    }\n\n\n\n    componentWillMount() {\n        this.props.firebase.getAdminPost(this.props.match.params.client, this.props.match.params.itemId).then(snapshot => {\n\n            this.setState({\n                title: snapshot.data().title,\n                copy: snapshot.data().copy,\n                hashtags: snapshot.data().hashtags,\n                links: snapshot.data().links,\n                metaImageFiles: snapshot.data().metaImageFiles,\n                month: snapshot.data().month,\n                day: snapshot.data().day,\n                selectedCategory: snapshot.data().selectedCategory,\n                time: snapshot.data().time,\n                messages: [],\n                adminRead: snapshot.data().adminRead,\n                postId: snapshot.id\n            }, () => {\n                if (this.state.adminRead == false) {\n                    this.props.firebase.editReadAdmin(this.props.match.params.client, this.state.postId, true);\n                }\n            })\n        })\n\n\n        this.props.firebase.getMessages(this.props.match.params.client, parseInt(this.props.match.params.month), parseInt(this.props.match.params.day)).then(snapshot => {\n\n            const emptyMessage = []\n            snapshot.docs.map(item => {\n                var emptyMessageObj = {}\n                emptyMessageObj.day = item.data().day;\n                emptyMessageObj.logo = item.data().logo;\n                emptyMessageObj.message = item.data().message;\n                emptyMessageObj.month = item.data().month;\n                emptyMessageObj.title = item.data().title;\n                emptyMessageObj.time = item.data().time;\n\n                emptyMessage.push(emptyMessageObj);\n            })\n\n            emptyMessage.sort((a, b) => (a.time > b.time) ? 1 : -1)\n\n            console.log(emptyMessage, 'sorterd');\n\n\n            this.setState({\n                messages: emptyMessage\n            })\n        });\n    }\n\n    getMessage = (id, month, day, title, message, logo) => {\n        const incomingMessageObj = {}\n        incomingMessageObj.id = id\n        incomingMessageObj.logo = logo\n        incomingMessageObj.month = month\n        incomingMessageObj.day = day\n        incomingMessageObj.title = title\n        incomingMessageObj.message = message\n\n        this.setState({\n            messages: [...this.state.messages, incomingMessageObj],\n            clientRead: false\n        });\n\n        this.props.firebase.adminSendMessage(id, month, day, title, message, 'https://skylarmedia.ca/wp-content/uploads/2018/12/SkylarMG_Icon_RGB-1.svg');\n    }\n\n    componentWillUnmount() {\n        this.props.firebase.editReadClient(this.props.match.params.client, this.state.postId, this.state.clientRead)\n    }\n\n    getType = (url) => {\n        if (url !== 'No Files') {\n            var checkUrl = new URL(url)\n\n            var query_string = checkUrl.search;\n\n            var search_params = new URLSearchParams(query_string);\n\n            var type = search_params.get('type');\n\n            return type\n        }\n    }\n\n    inputComponent = (props) => {\n        // you need to explicitly pass 'fieldType=\"input\"'.\n        return <EmojiField name=\"my-input\" onChange={props.onChange} fieldType=\"input\" />\n    }\n\n    textAreaComponent = (props) => {\n        // defaults to textarea, no need to pass fieldType\n        return <EmojiField name=\"my-textarea\" onChange={props.onChange} />\n    }\n\n\n\n    render() {\n        const media = this.state.metaImageFiles.map((item) => {\n            if (this.getType(item) == 'video') {\n                return (\n                    <video height=\"200\" width=\"200\" controls>\n                        <source src={item} />\n                    </video>\n                )\n            } else if (this.getType(item) == 'image') {\n                return (\n                    <img src={item} onError=\"this.style.display='none'\" />\n                )\n            } else {\n                return (\n                    <div>There is no media</div>\n                )\n            }\n        }\n        )\n        return (\n\n            <AuthUserContext.Consumer>\n                {authUser => (\n                    <div className=\"container d-flex justify-content-between\">\n                        <div className=\"col-sm-6\">\n\n                            <AdminViewPostContent post={this.state} hashtags={this.state.hashtags} />\n                            {media}\n                            <br />\n                            <br />\n                        </div>\n\n                        <div className=\"col-sm-6\">\n                            <ChatLog incomingMessage={this.state.incomingMessage} id={this.props.match.params.client} month={this.props.match.params.month} day={this.props.match.params.day} messages={this.state.messages} />\n                            <ChatBox getMessage={this.getMessage} month={this.props.match.params.month} day={this.props.match.params.day} title={this.props.match.params.title} id={this.props.match.params.client} authUser={authUser} />\n\n                        </div>\n                    </div>\n                )}\n            </AuthUserContext.Consumer>\n        )\n    }\n}\n\nexport default compose(\n    withFirebase(AdminViewPost)\n)\n\n","import React, { Component } from 'react';\nimport { slide as Menu } from 'react-burger-menu';\nimport MenuButton from '../MenuButton';\nimport './index.css';\nimport Navigation from '../Navigation';\n\nclass NavigationWrapper extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isVisible: false\n        }\n    }\n\n    render() {\n        return (\n            <Menu id=\"main-menu\" noOverlay>\n                <Navigation />\n            </Menu>\n        )\n    }\n}\n\nexport default NavigationWrapper;\n","import React from 'react';\n\nimport './index.css';\n\nconst Header = () => (\n    <div id=\"header\">\n\n    </div>\n)\n\nexport default Header;","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route, Switch\n} from 'react-router-dom';\n\n\nimport { withFirebase } from '../Firebase';\n\nimport { AuthUserContext } from '../Session';\n\n// Admin Components\n\nimport HomePage from '../Home';\nimport Settings from '../Settings';\nimport AddPost from '../AddPost';\nimport EditPost from '../EditPost';\n\nimport Navigation from '../Navigation';\nimport SignUpPage from '../SignUp';\nimport SignInPage from '../SignIn';\n\nimport AdminPage from '../Admin';\nimport Clients from '../Clients';\nimport Dates from '../Dates';\nimport Calendar from '../Calendar';\nimport CalendarSingle from '../CalendarSingle';\nimport Server from '../ServerFile';\nimport ClientCalendar from '../ClientCalendar';\nimport ClientViewPost from '../ClientViewPost';\nimport HiddenCalendarSingle from '../HiddenCalendarSingle'\nimport AdminViewPost from '../AdminViewPost';\nimport * as ROUTES from '../../constants/routes';\nimport MenuButton from '../MenuButton';\nimport { withAuthentication } from '../Session';\nimport CalendarCategoryContainer from '../CalendarCategoryContainer'\nimport { PasswordForgetForm } from '../PasswordForget';\nimport PasswordChangeForm from '../PasswordChange';\nimport { withAuthorization } from '../Session';\nimport './index.css';\nimport NavigationWrapper from '../NavigationWrapper';\nimport Header from '../Header';\n\nimport { TransitionGroup, Transition } from \"react-transition-group\";\n\n\n\nconst App = () => (\n  <Router basename={'/social-app-deploy'}>\n    <div id=\"outer-container\">\n      <Header />\n      <NavigationWrapper />\n\n      <Switch>\n        <Route exact path={`${process.env.PUBLIC_URL + '/'}`} component={SignInPage} />\n        <Route path={`/add-post/:year/:month/:day/:clientId`} component={AddPost} />\n        <Route path={ROUTES.SIGN_IN} component={SignInPage} />\n        <Route exact path={ROUTES.HOME} component={HomePage} />\n        <Route path={ROUTES.CLIENTS} component={Clients} />\n        <Route path={ROUTES.DATES} component={Dates} />\n        <Route path=\"/edit-post/:month/:day/:postId/:clientId\" component={EditPost} />\n        <Route exact path={`/calendar-single/:year/:month:day`} component={CalendarSingle} />\n        <Route path=\"/client-calendar/:year/:month\" component={ClientCalendar} />\n        <Route exact path=\"/view-post/:month/:day/:title\" render={(props) => <ClientViewPost {...props} />} />\n        <Route path=\"/admin-view-post/:month/:day/:title/:client/:itemId\" component={AdminViewPost} />\n        <Route path=\"/calendar/:year/:month/:clientId\" component={Calendar} />\n        <Route path=\"/settings\" component ={Settings} />\n        <Route component={NoMatch} />\n      </Switch>\n      )\n\n    </div>\n  </Router>\n)\n\n\nconst NoMatch = ({ location }) => (\n  <div>Sorry this page at {location.pathname} doesn't exist</div>\n)\n\n\n\nexport default withAuthentication(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const INITIAL_STATE = {\n    data: []\n}\n\nconst getClients = (state, action) => (\n    console.log(action, 'action in clients'), {\n\n        ...state,\n        data: action.clients\n    })\n\n\n\nfunction setClientsReducer(state = INITIAL_STATE, action) {\n\n    switch (action.type) {\n        case 'GET_ALL_CLIENTS': {\n            return getClients(state, action)\n        }\n        default:\n            return state\n    }\n}\n\nexport default setClientsReducer;","const INITIAL_STATE = {\n    post: null\n}\n\nconst editPost = (state, action) => (\n    console.log(action, 'action in clients'), {\n\n        ...state,\n        data: action.post\n    });\n\n\n\nfunction setEditPostReducer(state = INITIAL_STATE, action) {\n\n    switch (action.type) {\n        case 'GET_POST': {\n            return editPost(state, action)\n        }\n        default:\n            return state\n    }\n}\n\nexport default setEditPostReducer;","const INITIAL_STATE = {\n    userId: ''\n}\n\nconst userId = (state, action) => (\n    {\n\n        ...state,\n        userId: action.authUser\n    });\n\n\n\nfunction userInfoReducer(state = INITIAL_STATE, action) {\n    switch (action.type) {\n        case 'SET_USER_ID': {\n            return userId(state, action)\n        }\n        default:\n            return state\n    }\n}\n\nexport default userInfoReducer;","import { combineReducers } from 'redux';\nimport setClientsReducer from './clients';\nimport editPostReducer from './editPost';\nimport userInfoReducer from './userInfo';\n\n\nconst rootReducer = combineReducers({\n    setClientsReducer: setClientsReducer,\n    editPostReducer: editPostReducer,\n    userInfoReducer: userInfoReducer\n})\n\nexport default rootReducer;","import { createStore } from 'redux';\nimport rootReducer from '../reducers';\n\nconst store = createStore(rootReducer);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\n\nimport store from './store';\n\nimport Firebase, { FirebaseContext } from './components/Firebase';\n\nReactDOM.render(\n    <Provider store={store}>\n        <FirebaseContext.Provider value={new Firebase()}>\n            <App name=\"this is a name\" />\n        </FirebaseContext.Provider>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}