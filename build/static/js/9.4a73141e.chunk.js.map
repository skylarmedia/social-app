{"version":3,"sources":["components/ClientSingle/index.js","components/EditClients/index.js","components/Settings/index.js"],"names":["ClientSingle","props","closeDelete","clientId","name","setState","open","confirmDelete","index","showModal","handleCancel","state","this","logo","styles","backgroundImage","className","style","visible","maskStyle","backgroundColor","onCancel","wrapClassName","footer","type","onClick","Component","EditClients","client","getClient","useState","popupState","togglePopup","runFile","uid","displayName","content","Fragment","trigger","onVisibleChange","Settings","confirmArchive","e","target","value","firebase","deleteClient","clients","filter","_","i","deleteIndex","showDelete","reactivateClient","id","getClientParent","chosenClient","passwordModal","usernameModal","submitDeletion","username","deleteByUid","functions","httpsCallable","data","localStorage","getItem","parseInt","message","success","error","confirmDeleteParent","setItem","handlePasswordCancel","onChange","event","changePassword","preventDefault","changeClientPassword","functionObj","password","mainPassword","handleUsernameCancel","changeUser","changeUsername","oldUsername","allClients","getClients","then","res","users","modalState","email","passwordTwo","bind","auth","app","db","firestore","getArchivedClients","snapshot","archivedClients","docs","item","push","disabledUserChange","placeholder","disabled","onOk","handleOk","map","key","compose","withFirebase"],"mappings":"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","file":"static/js/9.4a73141e.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Modal } from 'antd';\n\nclass ClientSingle extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open: false\n    };\n  }\n\n  closeDelete = (clientId, name) => {\n  \n    this.setState({\n      open: false\n    }, () => {\n      this.props.confirmDelete(clientId, name, this.props.index);\n    });\n  };\n\n  showModal = () => {\n    this.setState({\n      open: true\n    });\n  };\n\n  handleCancel = () => {\n    this.setState({\n      open: false\n    });\n  };\n\n  render() {\n    const { logo, name, clientId } = this.props;\n    const styles = {\n      backgroundImage: `url(${logo})`\n    };\n\n    const maskStyle = {\n      backgroundColor: 'rgba(0,0,0,9.5)'\n    };\n\n    return (\n      <div className=\"\">\n        <div style={styles} className=\"bg-image\">\n          <Modal\n            visible={this.state.open}\n            maskStyle={maskStyle}\n            onCancel={this.handleCancel}\n            wrapClassName=\"modal-wrapper message-modal\"\n            footer={[\n              <div>\n                <button\n                  type=\"button\"\n                  onClick={this.handleCancel}\n                  className=\"red-btn delete-btn-main\"\n                >\n                  CANCEL\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"red-border-btn delete-btn-main\"\n                  onClick={() => this.closeDelete(clientId, name)}\n                >\n                  DELETE\n                </button>\n              </div>\n            ]}\n          >\n            <div className=\"inner-btn\">\n              <h6 className=\"f-20 color-blue text-center\">Delete Client?</h6>\n              <p className=\"color-blue text-center\">\n                Are you sure you would like to delete this client? This action is permanent and\n                cannot be un-done.\n              </p>\n            </div>\n          </Modal>\n          <button className=\"clear-btn top-delete color-blue f-16\" onClick={() => this.showModal()} type=\"button\">\n            x\n          </button>\n        </div>\n        <p className=\"text-center mt-5px mb-10\">{name}</p>\n      </div>\n    );\n  }\n}\n\nexport default ClientSingle;\n","import React, { useState } from 'react';\nimport { Popover } from 'antd';\n\nconst EditClients = props => {\n  const { client, getClient, index } = props;\n  const [popupState, togglePopup] = useState(false)\n  function runFile (type){\n    getClient(client, type, client.uid, index);\n    togglePopup(false);\n  }\n  return (\n    <div className=\"d-flex flex-column align-items-start\">\n      <button type=\"button\" onClick={() => togglePopup(true)} className=\"clear-btn p-0 mb-10 p-blue\">\n        <u>{client.displayName}</u>\n      </button>\n      <Popover\n        content={\n          <React.Fragment>\n          <button type=\"button\" onClick={() => runFile('password')} className=\"clear-btn d-block\">Change Password</button>\n          <button type=\"button\" onClick={() => runFile('username')} className=\"clear-btn d-block\">Change Username</button>\n          </React.Fragment>\n          }\n        trigger=\"click\"\n        visible={popupState}\n        onVisibleChange={() => togglePopup(false)}\n      > \n      </Popover>\n    </div>\n  );\n};\n\nexport default EditClients;\n","import React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\nimport { compose } from 'recompose';\nimport app from 'firebase/app';\nimport ClientSingle from '../ClientSingle';\nimport { Modal, message, Input } from 'antd';\nimport './index.css';\nimport EditClients from '../EditClients';\n\nclass Settings extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      clients: [],\n      visible: false,\n      deleteClient: '',\n      deleteIndex: null,\n      modalState: false,\n      email: '',\n      password: '',\n      error: null,\n      allClients: [],\n      chosenClient: {},\n      passwordModal: false,\n      mainPassword: '',\n      passwordTwo: '',\n      username: ''\n    };\n\n    this.reactivateClient = this.reactivateClient.bind(this);\n    this.deleteClient = this.deleteClient.bind(this);\n    this.confirmArchive = this.confirmArchive.bind(this);\n\n    this.auth = app.auth();\n    this.functions = app.functions();\n    this.db = app.firestore();\n  }\n\n  componentDidMount() {\n    const getClients = this.functions.httpsCallable('GetAuthUsers');\n    getClients().then(res => {\n      this.setState({\n        allClients: res.data.users\n      });\n    });\n\n    this.props.firebase.getArchivedClients().then(snapshot => {\n      let archivedClients = [...this.state.clients];\n      snapshot.docs.filter(item => {\n        archivedClients.push(item.data());\n        return this.setState({\n          clients: archivedClients\n        });\n      });\n    });\n  }\n\n  confirmArchive = e => {\n    if (e.target.value === 'true') {\n      this.props.firebase.deleteClient(this.state.deleteClient);\n      this.setState({\n        clients: this.state.clients.filter((_, i) => i !== this.state.deleteIndex)\n      });\n    }\n    this.setState({\n      showDelete: !this.state.showDelete\n    });\n  };\n\n  reactivateClient = (id, index) => {\n    this.props.firebase.reactivateClient(id);\n    this.setState({\n      clients: this.state.clients.filter((_, i) => i !== index)\n    });\n  };\n\n  getClientParent = (client, type, uid) => {\n    if (type === 'password') {\n      this.setState({\n        chosenClient: client,\n        passwordModal: true\n      });\n    } else {\n      this.setState({\n        chosenClient: uid,\n        usernameModal: true\n      });\n    }\n  };\n\n  deleteClient = (id, index) => {\n    this.setState({\n      deleteClient: id,\n      deleteIndex: index\n    });\n  };\n\n  submitDeletion = () => {\n    if (this.state.username === 'DELETE') {\n      const deleteByUid = this.functions.httpsCallable('deleteByUid');\n      let data = {};\n      data.uid = localStorage.getItem('tempDeleteUserId');\n      data.name = localStorage.getItem('tempDeleteUser');\n      deleteByUid(data);\n      this.setState({\n        visible: false,\n        username: '',\n        clients: this.state.clients.filter(\n          (_, i) => i !== parseInt(localStorage.getItem('tempIndex'))\n        )\n      });\n      message.success('Client deleted');\n    } else {\n      message.error('Please type DELETE to delete client');\n    }\n  };\n\n  handleCancel = e => {\n    this.setState({\n      visible: false\n    });\n  };\n\n  showModal = () => {\n    this.setState({\n      visible: true\n    });\n  };\n\n  confirmDeleteParent = (id, name, index) => {\n    // Save user ID in localStorage to set up next modal\n    localStorage.setItem('tempDeleteUser', name);\n    localStorage.setItem('tempDeleteUserId', id);\n    localStorage.setItem('tempIndex', index);\n    this.setState({\n      visible: true\n    });\n  };\n\n  // Password Methods\n\n  handlePasswordCancel = () => {\n    this.setState({\n      passwordModal: false\n    });\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  changePassword = e => {\n    e.preventDefault();\n    const changeClientPassword = this.functions.httpsCallable('changeClientPassword');\n    let functionObj = {};\n    functionObj.uid = this.state.chosenClient;\n    functionObj.password = this.state.mainPassword;\n    changeClientPassword(functionObj);\n    this.setState({\n      passwordModal: false\n    });\n  };\n\n  //  Username Methods\n\n  handleUsernameCancel = () => {\n    this.setState({\n      usernameModal: false\n    });\n  };\n\n  changeUser = e => {\n    e.preventDefault();\n    const changeUsername = this.functions.httpsCallable('changeUsername');\n    let functionObj = {};\n    functionObj.uid = this.state.chosenClient;\n    functionObj.username = this.state.username;\n    functionObj.oldUsername = this.state.chosenClient.name;\n    changeUsername(functionObj);\n    this.setState(\n      {\n        usernameModal: false,\n        allClients: []\n      },\n      () => {\n        const getClients = this.functions.httpsCallable('GetAuthUsers');\n        getClients().then(res => {\n          this.setState({\n            allClients: res.data.users\n          });\n        });\n      }\n    );\n  };\n\n  render() {\n    const disabledUserChange = this.state.chosenClient.name === '';\n    return (\n      <div>\n        {/* START PASSWORD MODAL  */}\n        <Modal\n          visible={this.state.usernameModal}\n          onCancel={this.handleUsernameCancel}\n          footer={null}\n          wrapClassName=\"modal-wrapper message-modal\"\n        >\n          <h2 className=\"p-blue f-20 text-center\">Change Password</h2>\n          <p className=\"text-center p-blue\">{this.state.chosenClient.name}</p>\n          <Input\n            name=\"username\"\n            value={this.state.username}\n            onChange={this.onChange}\n            type=\"text\"\n            placeholder=\"New Username\"\n            className=\"mb-10 blue-input m-320\"\n          />\n          <button\n            type=\"button\"\n            className=\"mt-20\"\n            onClick={this.changeUser}\n            disabled={disabledUserChange}\n          >\n            Change Username\n          </button>\n        </Modal>\n        {/* START PASSWORD MODAL  */}\n        <Modal\n          visible={this.state.passwordModal}\n          onCancel={this.handlePasswordCancel}\n          footer={null}\n          wrapClassName=\"modal-wrapper message-modal\"\n        >\n          <h2 className=\"p-blue f-20 text-center\">Change Password</h2>\n          <p className=\"text-center p-blue\">{this.state.chosenClient.name}</p>\n          <p className=\"text-center p-blue\">{this.state.chosenClient.email}</p>\n          <Input\n            name=\"mainPassword\"\n            value={this.state.mainPassword}\n            onChange={this.onChange}\n            type=\"text\"\n            placeholder=\"PASSWORD\"\n            className=\"mb-10 blue-input m-320\"\n          />\n          <Input\n            name=\"passwordTwo\"\n            value={this.state.passwordTwo}\n            onChange={this.onChange}\n            type=\"text\"\n            placeholder=\"VERIFY PASSWORD\"\n            className=\"mb-10 blue-input m-320\"\n          />\n          <button type=\"button\" onClick={this.changePassword}>\n            Change Password\n          </button>\n        </Modal>\n        {/* END PASSWORD MODAL  */}\n\n        {/*  START DELETE MODAL  */}\n        <Modal\n          visible={this.state.visible}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n          wrapClassName=\"message-modal\"\n          footer={[\n            <div>\n              <button type=\"button\" onClick={this.handleCancel} className=\"red-btn delete-btn-main\">\n                CANCEL\n              </button>\n              <button\n                type=\"button\"\n                className=\"red-border-btn delete-btn-main\"\n                onClick={this.submitDeletion}\n              >\n                DELETE\n              </button>\n            </div>\n          ]}\n        >\n          <div>\n            <h6 className=\"f-20 color-blue text-center\">Delete Client?</h6>\n            <p className=\"color-blue text-center\">\n              To delete this client permanently please enter 'DELETE'\n            </p>\n            {localStorage.getItem('tempDeleteUser')}\n            <Input\n              name=\"username\"\n              value={this.state.username}\n              onChange={this.onChange}\n              type=\"text\"\n              className=\"mb-10 blue-input m-320\"\n            />\n            {this.state.error && <span className=\"color-red\">{this.state.error}</span>}\n          </div>\n        </Modal>\n        {/*  END DELETE MODAL  */}\n\n        <h4 className=\"text-center f-20 mb-20 p-blue mt-35\">Settings</h4>\n        <div className=\"row container mx-auto\">\n          <div className=\"col-md-12\">\n            <h2 className=\"p-blue\">Edit Client Info</h2>\n            <p className=\"p-blue\">\n              Select a client below to re-set their username and/or password.\n            </p>\n\n            {this.state.allClients.map((client, index) => (\n              <EditClients\n                client={client}\n                getClient={this.getClientParent}\n                key={index}\n                index={index}\n                className=\"col-md-6\"\n              />\n            ))}\n          </div>\n        </div>\n        <h4 className=\"text-center f-20 mb-20 mt-35\">Archived Clients</h4>\n        <div className=\"row container mx-auto settings-client\">\n          {this.state.clients.map((item, index) => {\n            return (\n              <div className=\"col-sm-3\" key={index}>\n                <ClientSingle\n                  name={item.name}\n                  logo={item.logo}\n                  clientId={item.uid}\n                  modalState={this.state.modalState}\n                  className=\"w-100\"\n                  confirmDelete={this.confirmDeleteParent}\n                  index={index}\n                />\n                <button\n                  onClick={() => this.reactivateClient(item.name, index)}\n                  className=\"clear-btn text-center color-blue w-100\"\n                  type=\"button\"\n                >\n                  <u>Reactivate Client</u>\n                </button>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default compose(withFirebase(Settings));\n"],"sourceRoot":""}