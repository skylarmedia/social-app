{"version":3,"sources":["components/ClientSingle/index.js","components/EditClients/index.js","components/Settings/index.js"],"names":["ClientSingle","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","closeDelete","clientId","name","setState","open","confirmDelete","index","showModal","handleCancel","state","_this2","_this$props","logo","styles","backgroundImage","concat","react_default","a","createElement","className","style","modal","visible","maskStyle","backgroundColor","onCancel","wrapClassName","footer","defineProperty","type","onClick","Component","EditClients","client","getClient","_useState","useState","_useState2","slicedToArray","popupState","togglePopup","runFile","console","log","popover","content","Fragment","trigger","onVisibleChange","Settings","confirmArchive","e","target","value","firebase","deleteClient","clients","filter","_","i","deleteIndex","showDelete","reactivateClient","id","getClientParent","chosenClient","passwordModal","usernameModal","submitDeletion","auth","username","password","localStorage","getItem","currentUser","email","deleteByUid","functions","httpsCallable","data","uid","then","res","parseInt","error","confirmDeleteParent","setItem","handlePasswordCancel","onChange","event","changePassword","preventDefault","changeClientPassword","functionObj","mainPassword","handleUsernameCancel","changeUser","changeUsername","oldUsername","modalState","allClients","passwordTwo","bind","assertThisInitialized","app","db","firestore","collection","get","snapshot","toConsumableArray","docs","map","item","push","getArchivedClients","archivedClients","_this3","input","placeholder","onOk","handleOk","components_EditClients","key","components_ClientSingle","compose","withFirebase"],"mappings":"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","file":"static/js/8.54b00d0f.chunk.js","sourcesContent":["import React, { Component, useState } from 'react';\nimport { Modal } from 'antd';\nimport MainButton from '../MainButton';\n\nclass ClientSingle extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open: false\n    };\n  }\n\n  closeDelete = (clientId, name) => {\n  \n    this.setState({\n      open: false\n    }, () => {\n      this.props.confirmDelete(clientId, name, this.props.index);\n    });\n  };\n\n  showModal = () => {\n    this.setState({\n      open: true\n    });\n  };\n\n  handleCancel = () => {\n    this.setState({\n      open: false\n    });\n  };\n\n  render() {\n    const { logo, name, clientId, index } = this.props;\n    const styles = {\n      backgroundImage: `url(${logo})`\n    };\n\n    const maskStyle = {\n      backgroundColor: 'rgba(0,0,0,9.5)'\n    };\n\n    return (\n      <div className=\"\">\n        <div style={styles} className=\"bg-image\">\n          <Modal\n            visible={this.state.open}\n            maskStyle={maskStyle}\n            onCancel={this.handleCancel}\n            wrapClassName=\"modal-wrapper message-modal\"\n            footer={[\n              <div>\n                <button\n                  type=\"button\"\n                  onClick={this.handleCancel}\n                  className=\"red-btn delete-btn-main\"\n                  type=\"button\"\n                >\n                  CANCEL\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"red-border-btn delete-btn-main\"\n                  onClick={() => this.closeDelete(clientId, name)}\n                >\n                  DELETE\n                </button>\n              </div>\n            ]}\n          >\n            <div className=\"inner-btn\">\n              <h6 className=\"f-20 color-blue text-center\">Delete Client?</h6>\n              <p className=\"color-blue text-center\">\n                Are you sure you would like to delete this client? This action is permanent and\n                cannot be un-done.\n              </p>\n            </div>\n          </Modal>\n          <button className=\"clear-btn top-delete color-blue f-16\" onClick={() => this.showModal()} type=\"button\">\n            x\n          </button>\n        </div>\n        <p className=\"text-center mt-5px mb-10\">{name}</p>\n      </div>\n    );\n  }\n}\n\nexport default ClientSingle;\n","import React, { useState } from 'react';\nimport { Popover } from 'antd';\n\nconst EditClients = props => {\n  const { client, getClient } = props;\n  const [popupState, togglePopup] = useState(false)\n  console.log('clients', client);\n\n  function runFile (type){\n    getClient(client, type);\n    togglePopup(false);\n  }\n  return (\n    <div className=\"d-flex flex-column align-items-start\">\n      <button type=\"button\" onClick={() => togglePopup(true)} className=\"clear-btn p-0 mb-10 p-blue\">\n        <u>{client.name}</u>\n      </button>\n      <Popover\n        content={\n          <React.Fragment>\n          <button type=\"button\" onClick={() => runFile('password')} className=\"clear-btn d-block\">Change Password</button>\n          <button type=\"button\" onClick={() => runFile('username')} className=\"clear-btn d-block\">Change Username</button>\n          </React.Fragment>\n          }\n        trigger=\"click\"\n        visible={popupState}\n        onVisibleChange={() => togglePopup(false)}\n      > \n      </Popover>\n    </div>\n  );\n};\n\nexport default EditClients;\n","import React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\nimport { compose } from 'recompose';\nimport { Input } from 'antd';\nimport app from 'firebase/app';\nimport ClientSingle from '../ClientSingle';\nimport { Modal } from 'antd';\nimport './index.css';\nimport EditClients from '../EditClients';\n\nclass Settings extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      clients: [],\n      visible: false,\n      deleteClient: '',\n      deleteIndex: null,\n      modalState: false,\n      email: '',\n      password: '',\n      error: null,\n      allClients: [],\n      chosenClient: {},\n      passwordModal: false,\n      mainPassword: '',\n      passwordTwo: '',\n      username:''\n    };\n\n    this.reactivateClient = this.reactivateClient.bind(this);\n    this.deleteClient = this.deleteClient.bind(this);\n    this.confirmArchive = this.confirmArchive.bind(this);\n\n    this.auth = app.auth();\n    this.functions = app.functions();\n    this.db = app.firestore();\n  }\n\n  componentDidMount() {\n    this.db\n      .collection('users')\n      .get()\n      .then(snapshot => {\n        let allClients = [...this.state.allClients];\n        snapshot.docs.map(item => {\n          allClients.push(item.data());\n        });\n        this.setState({\n          allClients: allClients\n        });\n      });\n\n    this.props.firebase.getArchivedClients().then(snapshot => {\n      let archivedClients = [...this.state.clients];\n      snapshot.docs.filter(item => {\n        archivedClients.push(item.data());\n        this.setState({\n          clients: archivedClients\n        });\n      });\n    });\n  }\n\n  confirmArchive = e => {\n    if (e.target.value == 'true') {\n      this.props.firebase.deleteClient(this.state.deleteClient);\n      this.setState({\n        clients: this.state.clients.filter((_, i) => i !== this.state.deleteIndex)\n      });\n    }\n    this.setState({\n      showDelete: !this.state.showDelete\n    });\n  };\n\n  reactivateClient = (id, index) => {\n    this.props.firebase.reactivateClient(id);\n    this.setState({\n      clients: this.state.clients.filter((_, i) => i !== index)\n    });\n  };\n\n  getClientParent = (client, type) => {\n    if (type === 'password') {\n      this.setState({\n        chosenClient: client,\n        passwordModal: true\n      });\n    } else {\n      this.setState({\n        chosenClient: client,\n        usernameModal: true\n      });\n    }\n  };\n\n  deleteClient = (id, index) => {\n    this.setState({\n      deleteClient: id,\n      deleteIndex: index\n    });\n  };\n\n  submitDeletion = () => {\n    const auth = this.auth;\n    console.log(this.state.username);\n    if (\n      this.state.password === localStorage.getItem('key') &&\n      auth.currentUser.email === this.state.username\n    ) {\n      const deleteByUid = this.functions.httpsCallable('deleteByUid');\n      let data = new Object();\n      data.uid = localStorage.getItem('tempDeleteUserId');\n      data.name = localStorage.getItem('tempDeleteUser');\n      deleteByUid(data).then(res => {\n        console.log(`response: ${res}`);\n      });\n      this.setState({\n        visible: false,\n        clients: this.state.clients.filter(\n          (_, i) => i !== parseInt(localStorage.getItem('tempIndex'))\n        )\n      });\n    } else {\n      this.setState({\n        error: 'Sorry there was an error with your submission'\n      });\n    }\n  };\n\n  handleCancel = e => {\n    this.setState({\n      visible: false\n    });\n  };\n\n  showModal = () => {\n    this.setState({\n      visible: true\n    });\n  };\n\n  confirmDeleteParent = (id, name, index) => {\n    // Save user ID in localStorage to send up with\n    localStorage.setItem('tempDeleteUser', name);\n    localStorage.setItem('tempDeleteUserId', id);\n    localStorage.setItem('tempIndex', index);\n    this.setState({\n      visible: true\n    });\n  };\n\n  // Password Methods\n\n  handlePasswordCancel = () => {\n    this.setState({\n      passwordModal: false\n    });\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  changePassword = e => {\n    e.preventDefault();\n    const changeClientPassword = this.functions.httpsCallable('changeClientPassword');\n    let functionObj = new Object();\n    functionObj.uid = this.state.chosenClient.uid;\n    functionObj.password = this.state.mainPassword;\n    changeClientPassword(functionObj);\n    this.setState({\n      passwordModal: false\n    });\n  };\n\n  //  Username Methods\n\n  handleUsernameCancel = () => {\n    this.setState({\n      usernameModal: false\n    });\n  };\n\n  changeUser = (e) => {\n    e.preventDefault();\n    const changeUsername = this.functions.httpsCallable('changeUsername');\n    let functionObj = new Object();\n    functionObj.uid = this.state.chosenClient.uid;\n    functionObj.username = this.state.username;\n    functionObj.oldUsername = this.state.chosenClient.name;\n    // console.log('chosen client', this.state.chosenClient);\n    changeUsername(functionObj);\n    this.setState({\n      usernameModal: false,\n    });\n  }\n\n  render() {\n    console.log('client uid', this.state);\n    const isValid = () => {\n      if (\n        (this.state.mainPassword =\n          this.state.passwordTwo || this.state.mainPassword !== '' || this.state.passwordTwo !== '')\n      ) {\n        return false;\n      }\n    };\n    return (\n      <div>\n        {/* START PASSWORD MODAL  */}\n        <Modal\n          visible={this.state.usernameModal}\n          onCancel={this.handleUsernameCancel}\n          footer={null}\n          wrapClassName=\"modal-wrapper message-modal\"\n        >\n          <h2 className=\"p-blue f-20 text-center\">Change Password</h2>\n          <p className=\"text-center p-blue\">{this.state.chosenClient.name}</p>\n          <Input\n            name=\"username\"\n            value={this.state.username}\n            onChange={this.onChange}\n            type=\"text\"\n            placeholder=\"New Username\"\n            className=\"mb-10 blue-input m-320\"\n          />\n          <button type=\"button\" className=\"add-date-btn mt-20\" onClick={this.changeUser}>Change Username</button>\n        </Modal>\n        {/* START PASSWORD MODAL  */}\n        <Modal\n          visible={this.state.passwordModal}\n          onCancel={this.handlePasswordCancel}\n          footer={null}\n          wrapClassName=\"modal-wrapper message-modal\"\n        >\n          <h2 className=\"p-blue f-20 text-center\">Change Password</h2>\n          <p className=\"text-center p-blue\">{this.state.chosenClient.name}</p>\n          <p className=\"text-center p-blue\">{this.state.chosenClient.email}</p>\n          <Input\n            name=\"mainPassword\"\n            value={this.state.mainPassword}\n            onChange={this.onChange}\n            type=\"text\"\n            placeholder=\"PASSWORD\"\n            className=\"mb-10 blue-input m-320\"\n          />\n          <Input\n            name=\"passwordTwo\"\n            value={this.state.passwordTwo}\n            onChange={this.onChange}\n            type=\"text\"\n            placeholder=\"VERIFY PASSWORD\"\n            className=\"mb-10 blue-input m-320\"\n          />\n          <button type=\"button\" onClick={this.changePassword} className=\"clear-btn add-date-btn\">\n            Change Password\n          </button>\n        </Modal>\n        {/* END PASSWORD MODAL  */}\n\n        {/*  START DELETE MODAL  */}\n        <Modal\n          visible={this.state.visible}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n          wrapClassName=\"message-modal\"\n          footer={[\n            <div>\n              <button\n                type=\"button\"\n                onClick={this.handleCancel}\n                className=\"red-btn delete-btn-main\"\n                type=\"button\"\n              >\n                CANCEL\n              </button>\n              <button\n                type=\"button\"\n                className=\"red-border-btn delete-btn-main\"\n                onClick={this.submitDeletion}\n              >\n                DELETE\n              </button>\n            </div>\n          ]}\n        >\n          <div>\n            <h6 className=\"f-20 color-blue text-center\">Delete Client?</h6>\n            <p className=\"color-blue text-center\">\n              To delete this client permanently please enter your credentials. Remember this action\n              cannot be un-done.\n            </p>\n            <Input\n              name=\"username\"\n              value={this.state.username}\n              onChange={this.onChange}\n              type=\"text\"\n              placeholder=\"EMAIL\"\n              className=\"mb-10 blue-input m-320\"\n            />\n            <Input\n              name=\"password\"\n              value={this.state.password}\n              onChange={this.onChange}\n              type=\"password\"\n              className=\"mb-10 blue-input m-320\"\n              placeholder=\"PASSWORD\"\n            />\n            {this.state.error && <span className=\"color-red\">{this.state.error}</span>}\n          </div>\n        </Modal>\n        {/*  END DELETE MODAL  */}\n\n        <h4 className=\"text-center f-20 mb-20 p-blue mt-35\">Settings</h4>\n        <div className=\"row container mx-auto\">\n          <div className=\"col-md-12\">\n            <h2 className=\"p-blue\">Edit Client Info</h2>\n            <p className=\"p-blue\">\n              Select a client below to re-set their username and/or password.\n            </p>\n            {this.state.allClients.map((client, index) => (\n              <EditClients client={client} getClient={this.getClientParent} key={index} />\n            ))}\n          </div>\n        </div>\n        <h4 className=\"text-center f-20 mb-20 mt-35\">Archived Clients</h4>\n        <div className=\"row container mx-auto settings-client\">\n          {this.state.clients.map((item, index) => {\n            return (\n              <div className=\"col-sm-3\" key={index}>\n                <ClientSingle\n                  name={item.name}\n                  logo={item.logo}\n                  clientId={item.uid}\n                  modalState={this.state.modalState}\n                  className=\"w-100\"\n                  confirmDelete={this.confirmDeleteParent}\n                  index={index}\n                />\n                <button\n                  onClick={() => this.reactivateClient(item.name, index)}\n                  className=\"clear-btn text-center color-blue w-100\"\n                  type=\"button\"\n                >\n                  <u>Reactivate Client</u>\n                </button>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default compose(withFirebase(Settings));\n"],"sourceRoot":""}