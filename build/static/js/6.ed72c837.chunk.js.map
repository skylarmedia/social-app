{"version":3,"sources":["components/Ad/index.js","components/assets/ad.svg","components/Icons/index.js","components/ClientCalendarSingle/index.js","components/ClientCalendar/index.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","Ad","props","a","createElement","Fragment","ad","src","require","className","alt","module","exports","p","Icons","_this","Object","_Users_edwardlanto_Desktop_social_app_deploy_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_Users_edwardlanto_Desktop_social_app_deploy_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_edwardlanto_Desktop_social_app_deploy_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","getIcons","icon","approved","react__WEBPACK_IMPORTED_MODULE_6___default","class","clientRead","adminNotifcation","state","icons","iconState","setState","concat","_Users_edwardlanto_Desktop_social_app_deploy_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","Component","ClientCalendarSingle","classCallCheck","possibleConstructorReturn","getPrototypeOf","getMonthFromString","mon","Date","parse","getMonth","handleColor","string","undefined","split","posts","currentPosts","_this2","linkMonth","month","filteredList","filter","item","data","day","map","clientTitleStyles","backgroundColor","color","react_default","react_router_dom","to","id","style","post","title","postAd","clientNotification","ClientCalendar","weekdayshort","moment","weekdaysShort","showYearTable","showMonthTable","showDateTable","dateObject","getFullYear","match","params","allmonths","months","selectedDay","currentMonth","parseInt","format","categories","daysInMonth","year","currentDay","firstDayOfMonth","startOf","showMonth","e","setMonth","monthNo","indexOf","assign","set","MonthList","push","key","onClick","rows","cells","forEach","row","i","monthlist","d","colSpan","onPrev","curr","history","firebase","getUniqueClientPosts","localStorage","getItem","then","snapshot","docs","subtract","onNext","add","setYear","onYearChange","target","value","getState","preventDefault","console","log","YearTable","nextten","getDates","yearlist","onDayClick","getUserCategories","catArr","toConsumableArray","category","startDate","stopDate","dateArray","currentDate","stopDateVal","_this3","weekdayshortname","blanks","m","components_ClientCalendarSingle","totalSlots","length","daysinmonth","userId","Legend","clientCategories","compose","withFirebase"],"mappings":"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","file":"static/js/6.ed72c837.chunk.js","sourcesContent":["import React from 'react';\n\nconst Ad = props => {\n  return (\n    <React.Fragment>{props.ad ? <img src={require('../assets/ad.svg')} className=\"image-of-ad\" alt=\"ad\" /> : ''}</React.Fragment>\n  );\n};\n\nexport default Ad;\n","module.exports = __webpack_public_path__ + \"static/media/ad.ee515845.svg\";","import React, { Component } from 'react';\n\nclass Icons extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      icons: [],\n      icon: null\n    };\n  }\n\n  componentWillMount() {\n    let iconState = {};\n    iconState.approved = this.props.approved;\n    iconState.ad = this.props.ad;\n    iconState.clientRead = this.props.clientRead;\n    this.setState({\n      icon: iconState,\n      icons: [...this.state.icons, this.props.approved, this.props.ad, this.props.clientRead]\n    });\n  }\n\n  getIcons = icon => {\n    if (icon.approved === true) {\n      return <div class=\"approved-icon icon\"></div>;\n    }\n    if (icon.clientRead === false) {\n      return <div class=\"clientRead-icon icon\"></div>;\n    }\n    if (icon.clientRead === true) {\n      return <div class=\"clientNotRead-icon icon\"></div>;\n    }\n    if (icon.adminNotifcation === true) {\n      return <div>RED</div>;\n    }\n  };\n\n  render() {\n    return <React.Fragment>{this.getIcons(this.state.icon)}</React.Fragment>;\n  }\n}\nexport default Icons;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Ad from '../Ad';\nimport Icons from '../Icons';\n\n// Make this a dumb component\n\nclass ClientCalendarSingle extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      posts: [],\n      currentPosts: []\n    };\n  }\n\n  getMonthFromString = mon => {\n    return new Date(Date.parse(mon + ' 1, 2012')).getMonth() + 1;\n  };\n\n  handleColor = string => {\n    if (string !== undefined) {\n      return string.split('|||')[1];\n    }\n  };\n\n  render() {\n    let linkMonth = this.getMonthFromString(this.props.month);\n\n    const filtered = this.props.posts.filter(item => {\n      return item.data().day === this.props.day;\n    });\n\n    const filteredList = filtered.map(item => {\n      let selectedCategory;\n      if (item.data().color !== '') {\n        selectedCategory = item.data().color;\n      } else {\n        selectedCategory = '#fff';\n      }\n\n      let clientTitleStyles = {\n        backgroundColor: selectedCategory,\n        color: '#002D5B'\n      };\n      return (\n        <div className=\"outter-client-single\">\n          <Link\n            to={`/view-post/${linkMonth}/${this.props.day}/${item.id}`}\n            style={clientTitleStyles}\n            className=\"label-button label-2\"\n          >\n            {item.data().post[0].title}\n            <br />\n          </Link>\n          <Ad ad={item.data().postAd} className=\"ad-icon\" />\n          <Icons\n            approved={item.data().approved}\n            clientNotification={item.data().clientNotification}\n          />\n        </div>\n      );\n    });\n\n    return (\n      <div className=\"main-outter-single\">\n        <div className=\"outter-cal-wrap\">\n          <p className=\"calendar-single-day\">{this.props.day}</p>\n          {filteredList}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ClientCalendarSingle;\n","import React, { Component } from 'react';\nimport moment from \"moment\";\nimport \"./calendar.css\";\nimport { withFirebase } from '../Firebase';\nimport { compose } from 'recompose';\nimport ClientCalendarSingle from '../ClientCalendarSingle';\nimport Legend from '../Legend';\n\nclass ClientCalendar extends Component {\n    weekdayshort = moment.weekdaysShort();\n\n    state = {\n        showYearTable: false,\n        showMonthTable: false,\n        showDateTable: true,\n        dateObject: moment(`${new Date().getFullYear()}-${this.props.match.params.month}`),\n        allmonths: moment.months(),\n        selectedDay: null,\n        currentMonth: parseInt(moment().format('M')),\n        currentPosts: [],\n        categories: []\n    };\n\n    componentDidMount() {\n        this.props.firebase.getUniqueClientPosts(localStorage.getItem('clientName'), parseInt(this.props.match.params.month)).then(snapshot => {\n            this.setState({\n                currentPosts: snapshot.docs\n            })\n        })\n\n        this.props.firebase.getUserCategories(localStorage.getItem('clientName')).then(snapshot => {\n            const catArr = [...this.state.categories]\n           snapshot.docs.map(category => {\n                return catArr.push(category.data())\n            }, () => {\n                return this.setState({\n                    categories: catArr\n                });\n            });\n        })\n    }\n\n    daysInMonth = () => {\n        return this.state.dateObject.daysInMonth();\n    };\n    year = () => {\n        return this.state.dateObject.format(\"Y\");\n    };\n    currentDay = () => {\n        return this.state.dateObject.format(\"D\");\n    };\n    firstDayOfMonth = () => {\n        let dateObject = this.state.dateObject;\n        let firstDay = moment(dateObject)\n            .startOf(\"month\")\n            .format(\"d\"); // Day of week 0...1..5...6\n        return firstDay;\n    };\n    month = () => {\n        return this.state.dateObject.format(\"MMMM\");\n    };\n    showMonth = (e, month) => {\n        this.setState({\n            showMonthTable: !this.state.showMonthTable,\n            showDateTable: !this.state.showDateTable\n        });\n    };\n    setMonth = month => {\n        let monthNo = this.state.allmonths.indexOf(month);\n        let dateObject = Object.assign({}, this.state.dateObject);\n        dateObject = moment(dateObject).set(\"month\", monthNo);\n        this.setState({\n            dateObject: dateObject,\n            showMonthTable: !this.state.showMonthTable,\n            showDateTable: !this.state.showDateTable\n        });\n    };\n    MonthList = props => {\n        let months = [];\n        props.data.map(data => {\n            return months.push(\n                <td\n                    key={data}\n                    className=\"calendar-month\"\n                    onClick={e => {\n                        this.setMonth(data);\n                    }}\n                >\n                    <span>{data}</span>\n                </td>\n            );\n        });\n        let rows = [];\n        let cells = [];\n\n        months.forEach((row, i) => {\n            if (i % 3 !== 0 || i === 0) {\n                cells.push(row);\n            } else {\n                rows.push(cells);\n                cells = [];\n                cells.push(row);\n            }\n        });\n        rows.push(cells);\n        let monthlist = rows.map((d, i) => {\n            return <tr>{d}</tr>;\n        });\n\n        return (\n            <table className=\"calendar-month\">\n                <thead>\n                    <tr>\n                        <th colSpan=\"4\">Select a Month</th>\n                    </tr>\n                </thead>\n                <tbody>{monthlist}</tbody>\n            </table>\n        );\n    };\n    showYearTable = e => {\n        this.setState({\n            showYearTable: !this.state.showYearTable,\n            showDateTable: !this.state.showDateTable\n        });\n    };\n\n    onPrev = () => {\n        let curr = \"\";\n        if (this.state.showYearTable === true) {\n            curr = \"year\";\n        } else {\n            curr = \"month\";\n        }\n\n\n        this.props.history.push(`/client-calendar/2019/${parseInt(this.props.match.params.month) - 1}`);\n        this.props.firebase.getUniqueClientPosts(localStorage.getItem('userId'), parseInt(this.props.match.params.month - 1)).then(snapshot => {\n            this.setState({\n                currentPosts: snapshot.docs,\n                dateObject: this.state.dateObject.subtract(1, curr)\n            })\n        })\n\n    };\n    onNext = () => {\n        let curr = \"\";\n        if (this.state.showYearTable === true) {\n            curr = \"year\";\n        } else {\n            curr = \"month\";\n        }\n        this.props.history.push(`/client-calendar/2019/${parseInt(this.props.match.params.month) + 1}`);\n        this.props.firebase.getUniqueClientPosts(localStorage.getItem('userId'), parseInt(this.props.match.params.month) + 1).then(snapshot => {\n            this.setState({\n                currentPosts: snapshot.docs,\n                dateObject: this.state.dateObject.add(1, curr)\n            })\n        })\n    };\n    setYear = year => {\n        let dateObject = Object.assign({}, this.state.dateObject);\n        dateObject = moment(dateObject).set(\"year\", year);\n        this.setState({\n            dateObject: dateObject,\n            showMonthTable: !this.state.showMonthTable,\n            showYearTable: !this.state.showYearTable\n        });\n    };\n    onYearChange = e => {\n        this.setYear(e.target.value);\n    };\n    getDates(startDate, stopDate) {\n        const dateArray = [];\n        var currentDate = moment(startDate);\n        const stopDateVal = moment(stopDate);\n        while (currentDate <= stopDateVal) {\n            dateArray.push(moment(currentDate).format(\"YYYY\"));\n            currentDate = moment(currentDate).add(1, \"year\");\n        }\n        return dateArray;\n    }\n\n    getState = e => {\n        e.preventDefault();\n        console.log(this.state.currentPosts);\n    }\n    YearTable = props => {\n        let months = [];\n        let nextten = moment()\n            .set(\"year\", props)\n            .add(\"year\", 12)\n            .format(\"Y\");\n\n        let tenyear = this.getDates(props, nextten);\n\n        tenyear.map(data => {\n            return months.push(\n                <td\n                    key={data}\n                    className=\"calendar-month\"\n                    onClick={e => {\n                        this.setYear(data);\n                    }}\n                >\n                    <span>{data}</span>\n                </td>\n            );\n        });\n        let rows = [];\n        let cells = [];\n\n        months.forEach((row, i) => {\n            if (i % 3 !== 0 || i === 0) {\n                cells.push(row);\n            } else {\n                rows.push(cells);\n                cells = [];\n                cells.push(row);\n            }\n        });\n        rows.push(cells);\n        let yearlist = rows.map((d, i) => {\n            return <tr>{d}</tr>;\n        });\n\n        return (\n            <table className=\"calendar-month\">\n                <thead>\n                    <tr>\n                        <th colSpan=\"4\">Select a Yeah</th>\n                    </tr>\n                </thead>\n                <tbody>{yearlist}</tbody>\n            </table>\n        );\n    };\n    onDayClick = (e, d) => {\n        this.setState(\n            {\n                selectedDay: d\n            },\n            () => {\n                console.log(\"SELECTED DAY: \", this.state.selectedDay);\n            }\n        );\n    };\n    render() {\n        let weekdayshortname = this.weekdayshort.map(day => {\n            return <th key={day}>{day}</th>;\n        });\n        let blanks = [];\n        for (let i = 0; i < this.firstDayOfMonth(); i++) {\n            blanks.push(<td className=\"calendar-day empty\">{\"\"}</td>);\n        }\n\n        let daysInMonth = [];\n        for (let d = 1; d <= this.daysInMonth(); d++) {\n            let currentDay = d === this.currentDay() ? \"today\" : \"\";\n            let m = this.month();\n            daysInMonth.push(\n                <td key={d} className={`calendar-day ${currentDay}`}>\n                    <ClientCalendarSingle day={d} month={m} posts={this.state.currentPosts} />\n                </td>\n            );\n        }\n        var totalSlots = [...blanks, ...daysInMonth];\n        let rows = [];\n        let cells = [];\n\n        totalSlots.forEach((row, i) => {\n            if (i % 7 !== 0) {\n                cells.push(row);\n            } else {\n                rows.push(cells);\n                cells = [];\n                cells.push(row);\n            }\n            if (i === totalSlots.length - 1) {\n                // let insertRow = cells.slice();\n                rows.push(cells);\n            }\n        });\n\n        let daysinmonth = rows.map((d, i) => {\n            return <tr>{d}</tr>;\n        });\n\n\n\n        return (\n            <React.Fragment>\n                {/* <CategoryList colors= /> */}\n                <div className=\"tail-datetime-calendar container mx-auto\">\n                    <div className=\"calendar-heading\">\n                        <h2 className=\"text-center\">Client {localStorage.userId} Calendar </h2>\n                        <p className=\"text-center\">{this.month()}     {this.year()}</p>\n                    </div>\n                    <div className=\"calendar-navi\">\n                        <span\n                            onClick={e => {\n                                this.onPrev();\n                            }}\n                            class=\"calendar-button button-prev\"\n                        />\n                        {!this.state.showMonthTable && (\n                            <span\n                                onClick={e => {\n                                    this.showMonth();\n                                }}\n                                class=\"calendar-label\"\n                            >\n                                {this.month()}\n                            </span>\n                        )}\n                        <span className=\"calendar-label\" onClick={e => this.showYearTable()}>\n                            {this.year()}\n                        </span>\n                        <span\n                            onClick={e => {\n                                this.onNext();\n                            }}\n                            className=\"calendar-button button-next\"\n                        />\n                    </div>\n\n                    <div className=\"calendar-date\">\n                        {this.state.showYearTable && <this.YearTable props={this.year()} />}\n                        {this.state.showMonthTable && (\n                            <this.MonthList data={moment.months()} />\n                        )}\n                    </div>\n\n                    {this.state.showDateTable && (\n                        <div className=\"calendar-date\">\n                            <table className=\"calendar-day\">\n                                <thead>\n                                    <tr>{weekdayshortname}</tr>\n                                </thead>\n                                <tbody>{daysinmonth}</tbody>\n                            </table>\n                        </div>\n                    )}\n                </div>\n                <Legend clientCategories={this.state.categories}/>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default compose(\n    withFirebase(ClientCalendar)\n)"],"sourceRoot":""}