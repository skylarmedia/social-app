{"version":3,"sources":["components/Ad/index.js","components/assets/ad.svg","components/Icons/index.js","components/ClientCalendarSingle/index.js","components/ClientCalendar/index.js"],"names":["Ad","props","Fragment","ad","src","require","className","alt","module","exports","Icons","getIcons","icon","approved","class","clientRead","adminNotifcation","state","icons","iconState","this","setState","Component","ClientCalendarSingle","getMonthFromString","mon","Date","parse","getMonth","handleColor","string","undefined","split","posts","currentPosts","linkMonth","month","filteredList","filter","item","data","day","map","clientTitleStyles","backgroundColor","color","to","id","style","post","title","postAd","clientNotification","ClientCalendar","weekdayshort","moment","weekdaysShort","showYearTable","showMonthTable","showDateTable","dateObject","getFullYear","match","params","allmonths","months","selectedDay","currentMonth","parseInt","format","categories","daysInMonth","year","currentDay","firstDayOfMonth","startOf","showMonth","e","setMonth","monthNo","indexOf","Object","assign","set","MonthList","push","key","onClick","rows","cells","forEach","row","i","monthlist","d","colSpan","onPrev","curr","history","firebase","getUniqueClientPosts","localStorage","getItem","then","snapshot","docs","subtract","onNext","add","setYear","onYearChange","target","value","YearTable","nextten","getDates","yearlist","onDayClick","getUserCategories","catArr","category","startDate","stopDate","dateArray","currentDate","stopDateVal","weekdayshortname","blanks","m","totalSlots","length","daysinmonth","userId","Legend","clientCategories","compose","withFirebase"],"mappings":"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","file":"static/js/6.480be964.chunk.js","sourcesContent":["import React from 'react';\n\nconst Ad = props => {\n  return (\n    <React.Fragment>{props.ad ? <img src={require('../assets/ad.svg')} className=\"image-of-ad\" alt=\"ad\" /> : ''}</React.Fragment>\n  );\n};\n\nexport default Ad;\n","module.exports = __webpack_public_path__ + \"static/media/ad.ee515845.svg\";","import React, { Component } from 'react';\n\nclass Icons extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      icons: [],\n      icon: null\n    };\n  }\n\n  componentWillMount() {\n    let iconState = {};\n    iconState.approved = this.props.approved;\n    iconState.ad = this.props.ad;\n    iconState.clientRead = this.props.clientRead;\n    this.setState({\n      icon: iconState,\n      icons: [...this.state.icons, this.props.approved, this.props.ad, this.props.clientRead]\n    });\n  }\n\n  getIcons = icon => {\n    if (icon.approved === true) {\n      return <div class=\"approved-icon icon\"></div>;\n    }\n    if (icon.clientRead === false) {\n      return <div class=\"clientRead-icon icon\"></div>;\n    }\n    if (icon.clientRead === true) {\n      return <div class=\"clientNotRead-icon icon\"></div>;\n    }\n    if (icon.adminNotifcation === true) {\n      return <div>RED</div>;\n    }\n  };\n\n  render() {\n    return <React.Fragment>{this.getIcons(this.state.icon)}</React.Fragment>;\n  }\n}\nexport default Icons;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Ad from '../Ad';\nimport Icons from '../Icons';\n\n// Make this a dumb component\n\nclass ClientCalendarSingle extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      posts: [],\n      currentPosts: []\n    };\n  }\n\n  getMonthFromString = mon => {\n    return new Date(Date.parse(mon + ' 1, 2012')).getMonth() + 1;\n  };\n\n  handleColor = string => {\n    if (string !== undefined) {\n      return string.split('|||')[1];\n    }\n  };\n\n  render() {\n    let linkMonth = this.getMonthFromString(this.props.month);\n\n    const filtered = this.props.posts.filter(item => {\n      return item.data().day === this.props.day;\n    });\n\n    const filteredList = filtered.map(item => {\n      let selectedCategory;\n      if (item.data().color !== '') {\n        selectedCategory = item.data().color;\n      } else {\n        selectedCategory = '#fff';\n      }\n\n      let clientTitleStyles = {\n        backgroundColor: selectedCategory,\n        color: '#002D5B'\n      };\n      return (\n        <div className=\"outter-client-single\">\n          <Link\n            to={`/view-post/${linkMonth}/${this.props.day}/${item.id}`}\n            style={clientTitleStyles}\n            className=\"label-button label-2\"\n          >\n            {item.data().post[0].title}\n            <br />\n          </Link>\n          <Ad ad={item.data().postAd} className=\"ad-icon\" />\n          <Icons\n            approved={item.data().approved}\n            clientNotification={item.data().clientNotification}\n          />\n        </div>\n      );\n    });\n\n    return (\n      <div className=\"main-outter-single\">\n        <div className=\"outter-cal-wrap\">\n          <p className=\"calendar-single-day\">{this.props.day}</p>\n          {filteredList}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ClientCalendarSingle;\n","import React, { Component } from 'react';\nimport moment from \"moment\";\nimport \"./calendar.css\";\nimport { withFirebase } from '../Firebase';\nimport { compose } from 'recompose';\nimport ClientCalendarSingle from '../ClientCalendarSingle';\nimport Legend from '../Legend';\n\nclass ClientCalendar extends Component {\n    weekdayshort = moment.weekdaysShort();\n\n    state = {\n        showYearTable: false,\n        showMonthTable: false,\n        showDateTable: true,\n        dateObject: moment(`${new Date().getFullYear()}-${this.props.match.params.month}`),\n        allmonths: moment.months(),\n        selectedDay: null,\n        currentMonth: parseInt(moment().format('M')),\n        currentPosts: [],\n        categories: []\n    };\n\n    componentDidMount() {\n        this.props.firebase.getUniqueClientPosts(localStorage.getItem('clientName'), parseInt(this.props.match.params.month)).then(snapshot => {\n            this.setState({\n                currentPosts: snapshot.docs\n            })\n        })\n\n        this.props.firebase.getUserCategories(localStorage.getItem('clientName')).then(snapshot => {\n            const catArr = [...this.state.categories]\n           snapshot.docs.map(category => {\n                return catArr.push(category.data())\n            }, () => {\n                return this.setState({\n                    categories: catArr\n                });\n            });\n        })\n    }\n\n    daysInMonth = () => {\n        return this.state.dateObject.daysInMonth();\n    };\n    year = () => {\n        return this.state.dateObject.format(\"Y\");\n    };\n    currentDay = () => {\n        return this.state.dateObject.format(\"D\");\n    };\n    firstDayOfMonth = () => {\n        let dateObject = this.state.dateObject;\n        let firstDay = moment(dateObject)\n            .startOf(\"month\")\n            .format(\"d\"); // Day of week 0...1..5...6\n        return firstDay;\n    };\n    month = () => {\n        return this.state.dateObject.format(\"MMMM\");\n    };\n    showMonth = (e, month) => {\n        this.setState({\n            showMonthTable: !this.state.showMonthTable,\n            showDateTable: !this.state.showDateTable\n        });\n    };\n    setMonth = month => {\n        let monthNo = this.state.allmonths.indexOf(month);\n        let dateObject = Object.assign({}, this.state.dateObject);\n        dateObject = moment(dateObject).set(\"month\", monthNo);\n        this.setState({\n            dateObject: dateObject,\n            showMonthTable: !this.state.showMonthTable,\n            showDateTable: !this.state.showDateTable\n        });\n    };\n    MonthList = props => {\n        let months = [];\n        props.data.map(data => {\n            return months.push(\n                <td\n                    key={data}\n                    className=\"calendar-month\"\n                    onClick={e => {\n                        this.setMonth(data);\n                    }}\n                >\n                    <span>{data}</span>\n                </td>\n            );\n        });\n        let rows = [];\n        let cells = [];\n\n        months.forEach((row, i) => {\n            if (i % 3 !== 0 || i === 0) {\n                cells.push(row);\n            } else {\n                rows.push(cells);\n                cells = [];\n                cells.push(row);\n            }\n        });\n        rows.push(cells);\n        let monthlist = rows.map((d, i) => {\n            return <tr>{d}</tr>;\n        });\n\n        return (\n            <table className=\"calendar-month\">\n                <thead>\n                    <tr>\n                        <th colSpan=\"4\">Select a Month</th>\n                    </tr>\n                </thead>\n                <tbody>{monthlist}</tbody>\n            </table>\n        );\n    };\n    showYearTable = e => {\n        this.setState({\n            showYearTable: !this.state.showYearTable,\n            showDateTable: !this.state.showDateTable\n        });\n    };\n\n    onPrev = () => {\n        let curr = \"\";\n        if (this.state.showYearTable === true) {\n            curr = \"year\";\n        } else {\n            curr = \"month\";\n        }\n\n\n        this.props.history.push(`/client-calendar/2019/${parseInt(this.props.match.params.month) - 1}`);\n        this.props.firebase.getUniqueClientPosts(localStorage.getItem('userId'), parseInt(this.props.match.params.month - 1)).then(snapshot => {\n            this.setState({\n                currentPosts: snapshot.docs,\n                dateObject: this.state.dateObject.subtract(1, curr)\n            })\n        })\n\n    };\n    onNext = () => {\n        let curr = \"\";\n        if (this.state.showYearTable === true) {\n            curr = \"year\";\n        } else {\n            curr = \"month\";\n        }\n        this.props.history.push(`/client-calendar/2019/${parseInt(this.props.match.params.month) + 1}`);\n        this.props.firebase.getUniqueClientPosts(localStorage.getItem('userId'), parseInt(this.props.match.params.month) + 1).then(snapshot => {\n            this.setState({\n                currentPosts: snapshot.docs,\n                dateObject: this.state.dateObject.add(1, curr)\n            })\n        })\n    };\n    setYear = year => {\n        let dateObject = Object.assign({}, this.state.dateObject);\n        dateObject = moment(dateObject).set(\"year\", year);\n        this.setState({\n            dateObject: dateObject,\n            showMonthTable: !this.state.showMonthTable,\n            showYearTable: !this.state.showYearTable\n        });\n    };\n    onYearChange = e => {\n        this.setYear(e.target.value);\n    };\n    getDates(startDate, stopDate) {\n        const dateArray = [];\n        var currentDate = moment(startDate);\n        const stopDateVal = moment(stopDate);\n        while (currentDate <= stopDateVal) {\n            dateArray.push(moment(currentDate).format(\"YYYY\"));\n            currentDate = moment(currentDate).add(1, \"year\");\n        }\n        return dateArray;\n    }\n\n    YearTable = props => {\n        let months = [];\n        let nextten = moment()\n            .set(\"year\", props)\n            .add(\"year\", 12)\n            .format(\"Y\");\n\n        let tenyear = this.getDates(props, nextten);\n\n        tenyear.map(data => {\n            return months.push(\n                <td\n                    key={data}\n                    className=\"calendar-month\"\n                    onClick={e => {\n                        this.setYear(data);\n                    }}\n                >\n                    <span>{data}</span>\n                </td>\n            );\n        });\n        let rows = [];\n        let cells = [];\n\n        months.forEach((row, i) => {\n            if (i % 3 !== 0 || i === 0) {\n                cells.push(row);\n            } else {\n                rows.push(cells);\n                cells = [];\n                cells.push(row);\n            }\n        });\n        rows.push(cells);\n        let yearlist = rows.map((d, i) => {\n            return <tr>{d}</tr>;\n        });\n\n        return (\n            <table className=\"calendar-month\">\n                <thead>\n                    <tr>\n                        <th colSpan=\"4\">Select a Yeah</th>\n                    </tr>\n                </thead>\n                <tbody>{yearlist}</tbody>\n            </table>\n        );\n    };\n    onDayClick = (e, d) => {\n        this.setState(\n            {\n                selectedDay: d\n            });\n    };\n    render() {\n        let weekdayshortname = this.weekdayshort.map(day => {\n            return <th key={day}>{day}</th>;\n        });\n        let blanks = [];\n        for (let i = 0; i < this.firstDayOfMonth(); i++) {\n            blanks.push(<td className=\"calendar-day empty\">{\"\"}</td>);\n        }\n\n        let daysInMonth = [];\n        for (let d = 1; d <= this.daysInMonth(); d++) {\n            let currentDay = d === this.currentDay() ? \"today\" : \"\";\n            let m = this.month();\n            daysInMonth.push(\n                <td key={d} className={`calendar-day ${currentDay}`}>\n                    <ClientCalendarSingle day={d} month={m} posts={this.state.currentPosts} />\n                </td>\n            );\n        }\n        var totalSlots = [...blanks, ...daysInMonth];\n        let rows = [];\n        let cells = [];\n\n        totalSlots.forEach((row, i) => {\n            if (i % 7 !== 0) {\n                cells.push(row);\n            } else {\n                rows.push(cells);\n                cells = [];\n                cells.push(row);\n            }\n            if (i === totalSlots.length - 1) {\n                // let insertRow = cells.slice();\n                rows.push(cells);\n            }\n        });\n\n        let daysinmonth = rows.map((d, i) => {\n            return <tr>{d}</tr>;\n        });\n\n\n\n        return (\n            <React.Fragment>\n                {/* <CategoryList colors= /> */}\n                <div className=\"tail-datetime-calendar container mx-auto\">\n                    <div className=\"calendar-heading\">\n                        <h2 className=\"text-center\">Client {localStorage.userId} Calendar </h2>\n                        <p className=\"text-center\">{this.month()}     {this.year()}</p>\n                    </div>\n                    <div className=\"calendar-navi\">\n                        <span\n                            onClick={e => {\n                                this.onPrev();\n                            }}\n                            class=\"calendar-button button-prev\"\n                        />\n                        {!this.state.showMonthTable && (\n                            <span\n                                onClick={e => {\n                                    this.showMonth();\n                                }}\n                                class=\"calendar-label\"\n                            >\n                                {this.month()}\n                            </span>\n                        )}\n                        <span className=\"calendar-label\" onClick={e => this.showYearTable()}>\n                            {this.year()}\n                        </span>\n                        <span\n                            onClick={e => {\n                                this.onNext();\n                            }}\n                            className=\"calendar-button button-next\"\n                        />\n                    </div>\n\n                    <div className=\"calendar-date\">\n                        {this.state.showYearTable && <this.YearTable props={this.year()} />}\n                        {this.state.showMonthTable && (\n                            <this.MonthList data={moment.months()} />\n                        )}\n                    </div>\n\n                    {this.state.showDateTable && (\n                        <div className=\"calendar-date\">\n                            <table className=\"calendar-day\">\n                                <thead>\n                                    <tr>{weekdayshortname}</tr>\n                                </thead>\n                                <tbody>{daysinmonth}</tbody>\n                            </table>\n                        </div>\n                    )}\n                </div>\n                <Legend clientCategories={this.state.categories}/>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default compose(\n    withFirebase(ClientCalendar)\n)"],"sourceRoot":""}