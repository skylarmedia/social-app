{"version":3,"sources":["components/ClientSingle/index.js","components/EditClients/index.js","components/Settings/index.js"],"names":["ClientSingle","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","closeDelete","clientId","name","setState","open","confirmDelete","index","showModal","handleCancel","state","_this2","_this$props","logo","styles","backgroundImage","concat","react_default","a","createElement","className","style","modal","visible","maskStyle","backgroundColor","onCancel","wrapClassName","footer","type","onClick","Component","EditClients","client","getClient","console","log","_useState","useState","_useState2","slicedToArray","popupState","togglePopup","runFile","uid","displayName","popover","content","Fragment","trigger","onVisibleChange","Settings","confirmArchive","e","target","value","firebase","deleteClient","clients","filter","_","i","deleteIndex","showDelete","reactivateClient","id","getClientParent","chosenClient","passwordModal","usernameModal","submitDeletion","username","deleteByUid","functions","httpsCallable","data","localStorage","getItem","parseInt","message","success","error","confirmDeleteParent","setItem","handlePasswordCancel","onChange","event","defineProperty","changePassword","preventDefault","changeClientPassword","functionObj","password","mainPassword","handleUsernameCancel","changeUser","changeUsername","alert","oldUsername","modalState","email","allClients","passwordTwo","bind","assertThisInitialized","auth","app","db","firestore","getClients","then","res","users","getArchivedClients","snapshot","archivedClients","toConsumableArray","docs","item","push","_this3","input","placeholder","onOk","handleOk","map","components_EditClients","key","components_ClientSingle","compose","withFirebase"],"mappings":"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","file":"static/js/9.b2572c64.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Modal } from 'antd';\n\nclass ClientSingle extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open: false\n    };\n  }\n\n  closeDelete = (clientId, name) => {\n  \n    this.setState({\n      open: false\n    }, () => {\n      this.props.confirmDelete(clientId, name, this.props.index);\n    });\n  };\n\n  showModal = () => {\n    this.setState({\n      open: true\n    });\n  };\n\n  handleCancel = () => {\n    this.setState({\n      open: false\n    });\n  };\n\n  render() {\n    const { logo, name, clientId } = this.props;\n    const styles = {\n      backgroundImage: `url(${logo})`\n    };\n\n    const maskStyle = {\n      backgroundColor: 'rgba(0,0,0,9.5)'\n    };\n\n    return (\n      <div className=\"\">\n        <div style={styles} className=\"bg-image\">\n          <Modal\n            visible={this.state.open}\n            maskStyle={maskStyle}\n            onCancel={this.handleCancel}\n            wrapClassName=\"modal-wrapper message-modal\"\n            footer={[\n              <div>\n                <button\n                  type=\"button\"\n                  onClick={this.handleCancel}\n                  className=\"red-btn delete-btn-main\"\n                >\n                  CANCEL\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"red-border-btn delete-btn-main\"\n                  onClick={() => this.closeDelete(clientId, name)}\n                >\n                  DELETE\n                </button>\n              </div>\n            ]}\n          >\n            <div className=\"inner-btn\">\n              <h6 className=\"f-20 color-blue text-center\">Delete Client?</h6>\n              <p className=\"color-blue text-center\">\n                Are you sure you would like to delete this client? This action is permanent and\n                cannot be un-done.\n              </p>\n            </div>\n          </Modal>\n          <button className=\"clear-btn top-delete color-blue f-16\" onClick={() => this.showModal()} type=\"button\">\n            x\n          </button>\n        </div>\n        <p className=\"text-center mt-5px mb-10\">{name}</p>\n      </div>\n    );\n  }\n}\n\nexport default ClientSingle;\n","import React, { useState } from 'react';\nimport { Popover } from 'antd';\n\nconst EditClients = props => {\n  const { client, getClient, index } = props;\n  console.log('client', client);\n  const [popupState, togglePopup] = useState(false)\n  function runFile (type){\n    getClient(client, type, client.uid, index);\n    togglePopup(false);\n  }\n  return (\n    <div className=\"d-flex flex-column align-items-start\">\n      <button type=\"button\" onClick={() => togglePopup(true)} className=\"clear-btn p-0 mb-10 p-blue\">\n        <u>{client.displayName}</u>\n      </button>\n      <Popover\n        content={\n          <React.Fragment>\n          <button type=\"button\" onClick={() => runFile('password')} className=\"clear-btn d-block\">Change Password</button>\n          <button type=\"button\" onClick={() => runFile('username')} className=\"clear-btn d-block\">Change Username</button>\n          </React.Fragment>\n          }\n        trigger=\"click\"\n        visible={popupState}\n        onVisibleChange={() => togglePopup(false)}\n      > \n      </Popover>\n    </div>\n  );\n};\n\nexport default EditClients;\n","import React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\nimport { compose } from 'recompose';\nimport app from 'firebase/app';\nimport ClientSingle from '../ClientSingle';\nimport { Modal, message, Input } from 'antd';\nimport './index.css';\nimport EditClients from '../EditClients';\n\nclass Settings extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      clients: [],\n      visible: false,\n      deleteClient: '',\n      deleteIndex: null,\n      modalState: false,\n      email: '',\n      password: '',\n      error: null,\n      allClients: [],\n      chosenClient: {},\n      passwordModal: false,\n      mainPassword: '',\n      passwordTwo: '',\n      username: ''\n    };\n\n    this.reactivateClient = this.reactivateClient.bind(this);\n    this.deleteClient = this.deleteClient.bind(this);\n    this.confirmArchive = this.confirmArchive.bind(this);\n\n    this.auth = app.auth();\n    this.functions = app.functions();\n    this.db = app.firestore();\n  }\n\n  componentDidMount() {\n    const getClients = this.functions.httpsCallable('GetAuthUsers');\n    getClients().then(res => {\n      this.setState({\n        allClients: res.data.users\n      });\n    });\n\n    this.props.firebase.getArchivedClients().then(snapshot => {\n      let archivedClients = [...this.state.clients];\n      snapshot.docs.filter(item => {\n        archivedClients.push(item.data());\n        return this.setState({\n          clients: archivedClients\n        });\n      });\n    });\n  }\n\n  confirmArchive = e => {\n    if (e.target.value === 'true') {\n      this.props.firebase.deleteClient(this.state.deleteClient);\n      this.setState({\n        clients: this.state.clients.filter((_, i) => i !== this.state.deleteIndex)\n      });\n    }\n    this.setState({\n      showDelete: !this.state.showDelete\n    });\n  };\n\n  reactivateClient = (id, index) => {\n    this.props.firebase.reactivateClient(id);\n    this.setState({\n      clients: this.state.clients.filter((_, i) => i !== index)\n    });\n  };\n\n  getClientParent = (client, type, uid) => {\n    if (type === 'password') {\n      this.setState({\n        chosenClient: client,\n        passwordModal: true\n      });\n    } else {\n      this.setState({\n        chosenClient: uid,\n        usernameModal: true\n      });\n    }\n  };\n\n  deleteClient = (id, index) => {\n    this.setState({\n      deleteClient: id,\n      deleteIndex: index\n    });\n  };\n\n  submitDeletion = () => {\n    if (this.state.username === 'DELETE') {\n      const deleteByUid = this.functions.httpsCallable('deleteByUid');\n      let data = {};\n      data.uid = localStorage.getItem('tempDeleteUserId');\n      data.name = localStorage.getItem('tempDeleteUser');\n      deleteByUid(data);\n      this.setState({\n        visible: false,\n        username: '',\n        clients: this.state.clients.filter(\n          (_, i) => i !== parseInt(localStorage.getItem('tempIndex'))\n        )\n      });\n      message.success('Client deleted');\n    } else {\n      message.error('Please type DELETE to delete client');\n    }\n  };\n\n  handleCancel = e => {\n    this.setState({\n      visible: false\n    });\n  };\n\n  showModal = () => {\n    this.setState({\n      visible: true\n    });\n  };\n\n  confirmDeleteParent = (id, name, index) => {\n    // Save user ID in localStorage to set up next modal\n    localStorage.setItem('tempDeleteUser', name);\n    localStorage.setItem('tempDeleteUserId', id);\n    localStorage.setItem('tempIndex', index);\n    this.setState({\n      visible: true\n    });\n  };\n\n  // Password Methods\n\n  handlePasswordCancel = () => {\n    this.setState({\n      passwordModal: false\n    });\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  changePassword = e => {\n    e.preventDefault();\n    const changeClientPassword = this.functions.httpsCallable('changeClientPassword');\n    let functionObj = {};\n    functionObj.uid = this.state.chosenClient.uid;\n    functionObj.password = this.state.mainPassword;\n    changeClientPassword(functionObj);\n    this.setState({\n      passwordModal: false\n    });\n  };\n\n  //  Username Methods\n\n  handleUsernameCancel = () => {\n    this.setState({\n      usernameModal: false\n    });\n  };\n\n  changeUser = e => {\n    e.preventDefault();\n    const changeUsername = this.functions.httpsCallable('changeUsername');\n    let functionObj = {};\n    alert(this.state.chosenClient);\n    functionObj.uid = this.state.chosenClient;\n    functionObj.username = this.state.username;\n    functionObj.oldUsername = this.state.chosenClient.name;\n    changeUsername(functionObj);\n    this.setState({\n      usernameModal: false\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        {/* START PASSWORD MODAL  */}\n        <Modal\n          visible={this.state.usernameModal}\n          onCancel={this.handleUsernameCancel}\n          footer={null}\n          wrapClassName=\"modal-wrapper message-modal\"\n        >\n          <h2 className=\"p-blue f-20 text-center\">Change Password</h2>\n          <p className=\"text-center p-blue\">{this.state.chosenClient.name}</p>\n          <Input\n            name=\"username\"\n            value={this.state.username}\n            onChange={this.onChange}\n            type=\"text\"\n            placeholder=\"New Username\"\n            className=\"mb-10 blue-input m-320\"\n          />\n          <button type=\"button\" className=\"mt-20\" onClick={this.changeUser}>\n            Change Username\n          </button>\n        </Modal>\n        {/* START PASSWORD MODAL  */}\n        <Modal\n          visible={this.state.passwordModal}\n          onCancel={this.handlePasswordCancel}\n          footer={null}\n          wrapClassName=\"modal-wrapper message-modal\"\n        >\n          <h2 className=\"p-blue f-20 text-center\">Change Password</h2>\n          <p className=\"text-center p-blue\">{this.state.chosenClient.name}</p>\n          <p className=\"text-center p-blue\">{this.state.chosenClient.email}</p>\n          <Input\n            name=\"mainPassword\"\n            value={this.state.mainPassword}\n            onChange={this.onChange}\n            type=\"text\"\n            placeholder=\"PASSWORD\"\n            className=\"mb-10 blue-input m-320\"\n          />\n          <Input\n            name=\"passwordTwo\"\n            value={this.state.passwordTwo}\n            onChange={this.onChange}\n            type=\"text\"\n            placeholder=\"VERIFY PASSWORD\"\n            className=\"mb-10 blue-input m-320\"\n          />\n          <button type=\"button\" onClick={this.changePassword}>\n            Change Password\n          </button>\n        </Modal>\n        {/* END PASSWORD MODAL  */}\n\n        {/*  START DELETE MODAL  */}\n        <Modal\n          visible={this.state.visible}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n          wrapClassName=\"message-modal\"\n          footer={[\n            <div>\n              <button type=\"button\" onClick={this.handleCancel} className=\"red-btn delete-btn-main\">\n                CANCEL\n              </button>\n              <button\n                type=\"button\"\n                className=\"red-border-btn delete-btn-main\"\n                onClick={this.submitDeletion}\n              >\n                DELETE\n              </button>\n            </div>\n          ]}\n        >\n          <div>\n            <h6 className=\"f-20 color-blue text-center\">Delete Client?</h6>\n            <p className=\"color-blue text-center\">\n              To delete this client permanently please enter 'DELETE'\n            </p>\n            {localStorage.getItem('tempDeleteUser')}\n            <Input\n              name=\"username\"\n              value={this.state.username}\n              onChange={this.onChange}\n              type=\"text\"\n              className=\"mb-10 blue-input m-320\"\n            />\n            {this.state.error && <span className=\"color-red\">{this.state.error}</span>}\n          </div>\n        </Modal>\n        {/*  END DELETE MODAL  */}\n\n        <h4 className=\"text-center f-20 mb-20 p-blue mt-35\">Settings</h4>\n        <div className=\"row container mx-auto\">\n          <div className=\"col-md-12\">\n            <h2 className=\"p-blue\">Edit Client Info</h2>\n            <p className=\"p-blue\">\n              Select a client below to re-set their username and/or password.\n            </p>\n\n            {this.state.allClients.map((client, index) => (\n              <EditClients\n                client={client}\n                getClient={this.getClientParent}\n                key={index}\n                index={index}\n                className=\"col-md-6\"\n              />\n            ))}\n          </div>\n        </div>\n        <h4 className=\"text-center f-20 mb-20 mt-35\">Archived Clients</h4>\n        <div className=\"row container mx-auto settings-client\">\n          {this.state.clients.map((item, index) => {\n            return (\n              <div className=\"col-sm-3\" key={index}>\n                <ClientSingle\n                  name={item.name}\n                  logo={item.logo}\n                  clientId={item.uid}\n                  modalState={this.state.modalState}\n                  className=\"w-100\"\n                  confirmDelete={this.confirmDeleteParent}\n                  index={index}\n                />\n                <button\n                  onClick={() => this.reactivateClient(item.name, index)}\n                  className=\"clear-btn text-center color-blue w-100\"\n                  type=\"button\"\n                >\n                  <u>Reactivate Client</u>\n                </button>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default compose(withFirebase(Settings));\n"],"sourceRoot":""}