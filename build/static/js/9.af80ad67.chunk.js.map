{"version":3,"sources":["components/ClientSingle/index.js","components/EditClients/index.js","components/Settings/index.js"],"names":["ClientSingle","props","showModal","setState","open","handleCancel","state","this","logo","name","styles","clientId","backgroundImage","className","style","visible","maskStyle","backgroundColor","onCancel","wrapClassName","footer","type","onClick","Component","EditClients","client","getClient","index","useState","popupState","togglePopup","runFile","displayName","content","Fragment","trigger","onVisibleChange","Settings","confirmArchive","e","target","value","firebase","deleteClient","clients","filter","_","i","deleteIndex","reactivateClient","id","getClientParent","deleteByUid","functions","httpsCallable","data","uid","then","allClients","item","console","log","Archived","message","success","getArchivedClients","chosenClient","usernameModal","passwordModal","confirmDeleteParent","localStorage","setItem","handlePasswordCancel","onChange","event","changePassword","preventDefault","changeClientPassword","functionObj","password","mainPassword","handleUsernameCancel","changeUser","changeUsername","username","oldUsername","getClients","res","users","err","modalState","email","error","passwordTwo","bind","auth","app","db","firestore","getAuthClients","snapshot","archivedClients","docs","push","disabledUserChange","placeholder","disabled","length","map","key","size","compose","withFirebase"],"mappings":"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","file":"static/js/9.af80ad67.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Modal } from 'antd';\n\nclass ClientSingle extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open: false\n    };\n  }\n  \n  showModal = () => {\n    this.setState({\n      open: true\n    });\n  };\n\n  handleCancel = () => {\n    this.setState({\n      open: false\n    });\n  };\n\n  render() {\n    const { logo, name, clientId } = this.props;\n    const styles = {\n      backgroundImage: `url(${logo})`\n    };\n\n    const maskStyle = {\n      backgroundColor: 'rgba(0,0,0,9.5)'\n    };\n\n    return (\n      <div className=\"\">\n        <div style={styles} className=\"bg-image\">\n          <Modal\n            visible={this.state.open}\n            maskStyle={maskStyle}\n            onCancel={this.handleCancel}\n            wrapClassName=\"modal-wrapper message-modal\"\n            footer={[\n              <div>\n                <button\n                  type=\"button\"\n                  onClick={this.handleCancel}\n                  className=\"red-btn delete-btn-main\"\n                >\n                  CANCEL\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"red-border-btn delete-btn-main\"\n                >\n                  DELETE\n                </button>\n              </div>\n            ]}\n          >\n            <div className=\"inner-btn\">\n              <h6 className=\"f-20 color-blue text-center\">Delete Client?</h6>\n              <p className=\"color-blue text-center\">\n                Are you sure you would like to delete this client? This action is permanent and\n                cannot be un-done.\n              </p>\n            </div>\n          </Modal>\n        </div>\n        <p className=\"text-center mt-5px mb-10\">{name}</p>\n      </div>\n    );\n  }\n}\n\nexport default ClientSingle;\n","import React, { useState } from 'react';\nimport { Popover } from 'antd';\n\nconst EditClients = props => {\n  const { client, getClient, index } = props;\n  const [popupState, togglePopup] = useState(false);\n  function runFile(type) {\n    getClient(client, type, index);\n    togglePopup(false);\n  }\n  return (\n    <div className=\"d-flex flex-column align-items-start\">\n      <button\n        type=\"button\"\n        onClick={() => togglePopup(true)}\n        className=\"clear-btn p-0 mb-10 p-blue\"\n      >\n        <u>{client.displayName}</u>\n      </button>\n      <Popover\n        content={\n          <React.Fragment>\n            <button type=\"button\" onClick={() => runFile('delete')} className=\"clear-btn d-block\">\n              Delete User\n            </button>\n            <button type=\"button\" onClick={() => runFile('username')} className=\"clear-btn d-block\">\n              Change Username\n            </button>\n            <button type=\"button\" onClick={() => runFile('password')} className=\"clear-btn d-block\">\n              Change Password\n            </button>\n          </React.Fragment>\n        }\n        trigger=\"click\"\n        visible={popupState}\n        onVisibleChange={() => togglePopup(false)}\n      ></Popover>\n    </div>\n  );\n};\n\nexport default EditClients;\n","import React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\nimport { compose } from 'recompose';\nimport app from 'firebase/app';\nimport ClientSingle from '../ClientSingle';\nimport { Modal, message, Input, Spin } from 'antd';\nimport './index.css';\nimport EditClients from '../EditClients';\n\nclass Settings extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      clients: [],\n      visible: false,\n      deleteClient: '',\n      deleteIndex: null,\n      modalState: false,\n      email: '',\n      password: '',\n      error: null,\n      allClients: [],\n      chosenClient: {},\n      passwordModal: false,\n      mainPassword: '',\n      passwordTwo: '',\n      username: ''\n    };\n\n    this.reactivateClient = this.reactivateClient.bind(this);\n    this.deleteClient = this.deleteClient.bind(this);\n    this.confirmArchive = this.confirmArchive.bind(this);\n\n    this.auth = app.auth();\n    this.functions = app.functions();\n    this.db = app.firestore();\n  }\n\n  getAuthClients(){\n    const getClients = this.functions.httpsCallable('GetAuthUsers');\n    getClients().then(res => {\n      this.setState({\n        allClients: res.data.users\n      });\n    });\n\n  }\n\n  componentDidMount() {\n   this.getAuthClients();\n   this.getArchivedClients();\n  }\n\n  getArchivedClients(){\n    this.props.firebase.getArchivedClients().then(snapshot => {\n      let archivedClients = [...this.state.clients];\n      snapshot.docs.filter(item => {\n        console.log('item data', item.data());\n        archivedClients.push(item.data());\n        return this.setState({\n          clients: archivedClients\n        });\n      });\n    });\n  }\n\n  confirmArchive = e => {\n    if (e.target.value === 'true') {\n      this.props.firebase.deleteClient(this.state.deleteClient);\n      this.setState({\n        clients: this.state.clients.filter((_, i) => i !== this.state.deleteIndex)\n      });\n    }\n  };\n\n  reactivateClient = (id, index) => {\n    this.props.firebase.reactivateClient(id);\n    this.setState({\n      clients: this.state.clients.filter((_, i) => i !== index)\n    });\n  };\n\n  getClientParent = (client, type, index) => {\n    switch(type){\n      case 'delete':\n        const deleteByUid = this.functions.httpsCallable('deleteByUid');\n        let data = {};\n        data.uid = client.uid;\n        data.name = client.displayName;\n        deleteByUid(data);\n        this.props.firebase.deleteClient(client.displayName)\n        .then(() => {\n          this.setState({\n            allClients: this.state.allClients.filter((_, i) => i !== index),\n            clients: this.state.clients.filter((item) => {\n              console.log('filter', item);\n             return item.name !== client.displayName && item.Archived === true;\n            })\n          });\n          message.success(\"Successfully Deleted Client\");\n          this.getArchivedClients();\n        });\n        break;\n      case 'username':\n        this.setState({\n          chosenClient: client,\n          usernameModal: true\n        });\n        break;\n      case 'password':\n        this.setState({\n          chosenClient: client,\n          passwordModal: true\n        });\n      break;\n    }\n  };\n\n  deleteClient = (id, index) => {\n    this.setState({\n      deleteClient: id,\n      deleteIndex: index\n    });\n  };\n\n  handleCancel = e => {\n    this.setState({\n      visible: false\n    });\n  };\n\n  showModal = () => {\n    this.setState({\n      visible: true\n    });\n  };\n\n  confirmDeleteParent = (id, name, index) => {\n    // Save user ID in localStorage to set up next modal\n    localStorage.setItem('tempDeleteUser', name);\n    localStorage.setItem('tempDeleteUserId', id);\n    localStorage.setItem('tempIndex', index);\n    this.setState({\n      visible: true\n    });\n  };\n\n  // Password Methods\n\n  handlePasswordCancel = () => {\n    this.setState({\n      passwordModal: false\n    });\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  changePassword = e => {\n    e.preventDefault();\n    const changeClientPassword = this.functions.httpsCallable('changeClientPassword');\n    let functionObj = {};\n    functionObj.uid = this.state.chosenClient;\n    functionObj.password = this.state.mainPassword;\n    changeClientPassword(functionObj);\n    this.setState({\n      passwordModal: false\n    });\n  };\n\n  //  Username Methods\n\n  handleUsernameCancel = () => {\n    this.setState({\n      usernameModal: false\n    });\n  };\n\n  changeUser = e => {\n    e.preventDefault();\n    const changeUsername = this.functions.httpsCallable('changeUsername');\n    let functionObj = {};\n    functionObj.uid = this.state.chosenClient.uid;\n    functionObj.username = this.state.username;\n    functionObj.oldUsername = this.state.chosenClient.displayName;\n    changeUsername(functionObj).then(() => {\n      this.setState(\n        {\n          usernameModal: false,\n          allClients: []\n        },\n        () => {\n          const getClients = this.functions.httpsCallable('GetAuthUsers');\n          getClients().then(res => {\n            this.setState({\n              allClients: res.data.users\n            });\n          });\n        }\n      );\n      message.success(\"Succesfully Changed Username\");\n    }, err => {\n      return err;\n    })\n  };\n\n  render() {\n    const disabledUserChange = this.state.chosenClient.name === '';\n    return (\n      <div>\n        {/* START PASSWORD MODAL  */}\n        <Modal\n          visible={this.state.usernameModal}\n          onCancel={this.handleUsernameCancel}\n          footer={null}\n          wrapClassName=\"modal-wrapper message-modal\"\n        >\n          <h2 className=\"p-blue f-20 text-center\">Change Password</h2>\n          <p className=\"text-center p-blue\">{this.state.chosenClient.name}</p>\n          <Input\n            name=\"username\"\n            value={this.state.username}\n            onChange={this.onChange}\n            type=\"text\"\n            placeholder=\"New Username\"\n            className=\"mb-10 blue-input m-320\"\n          />\n          <button\n            type=\"button\"\n            className=\"mt-20\"\n            onClick={this.changeUser}\n            disabled={disabledUserChange}\n          >\n            Change Username\n          </button>\n        </Modal>\n        {/* START PASSWORD MODAL  */}\n        <Modal\n          visible={this.state.passwordModal}\n          onCancel={this.handlePasswordCancel}\n          footer={null}\n          wrapClassName=\"modal-wrapper message-modal\"\n        >\n          <h2 className=\"p-blue f-20 text-center\">Change Password</h2>\n          <p className=\"text-center p-blue\">{this.state.chosenClient.name}</p>\n          <p className=\"text-center p-blue\">{this.state.chosenClient.email}</p>\n          <Input\n            name=\"mainPassword\"\n            value={this.state.mainPassword}\n            onChange={this.onChange}\n            type=\"text\"\n            placeholder=\"PASSWORD\"\n            className=\"mb-10 blue-input m-320\"\n          />\n          <Input\n            name=\"passwordTwo\"\n            value={this.state.passwordTwo}\n            onChange={this.onChange}\n            type=\"text\"\n            placeholder=\"VERIFY PASSWORD\"\n            className=\"mb-10 blue-input m-320\"\n          />\n          <button type=\"button\" onClick={this.changePassword}>\n            Change Password\n          </button>\n        </Modal>\n        {/* END PASSWORD MODAL  */}\n\n\n        <h4 className=\"text-center f-20 mb-20 p-blue mt-35\">Settings</h4>\n        <div className=\"row container mx-auto\">\n          <div className=\"col-md-12\">\n            <h2 className=\"p-blue\">Edit Client Info</h2>\n            <p className=\"p-blue\">\n              Select a client below to re-set their username and/or password.\n            </p>\n\n            {this.state.allClients.length > 0 ? this.state.allClients.map((client, index) => (\n              <EditClients\n                client={client}\n                getClient={this.getClientParent}\n                key={index}\n                index={index}\n                className=\"col-md-6\"\n              />\n            )) : <div className=\"mt-20 text-center\"><Spin size=\"large\" /></div>}\n          </div>\n        </div>\n        <h4 className=\"text-center f-20 mb-20 mt-35\">Archived Clients</h4>\n        <div className=\"row container mx-auto settings-client\">\n          {this.state.clients.map((item, index) => {\n            return (\n              <div className=\"col-sm-3\" key={index}>\n                <ClientSingle\n                  name={item.name}\n                  logo={item.logo}\n                  clientId={item.uid}\n                  modalState={this.state.modalState}\n                  className=\"w-100\"\n                  index={index}\n                />\n                <button\n                  onClick={() => this.reactivateClient(item.name, index)}\n                  className=\"clear-btn text-center color-blue w-100\"\n                  type=\"button\"\n                >\n                  <u>Reactivate Client</u>\n                </button>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default compose(withFirebase(Settings));\n"],"sourceRoot":""}